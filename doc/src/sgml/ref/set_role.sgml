<!--
doc/src/sgml/ref/set_role.sgml
PostgreSQL documentation
-->

<refentry id="sql-set-role">
 <indexterm zone="sql-set-role">
  <primary>SET ROLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>SET ROLE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
  <refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET ROLE</refname>
<!--
  <refpurpose>set the current user identifier of the current session</refpurpose>
-->
  <refpurpose>現在のセッションにおける現在のユーザ識別子を設定する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
SET [ SESSION | LOCAL ] ROLE <replaceable class="parameter">role_name</replaceable>
SET [ SESSION | LOCAL ] ROLE NONE
RESET ROLE
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   This command sets the current user
   identifier of the current SQL session to be <replaceable
   class="parameter">role_name</replaceable>.  The role name can be
   written as either an identifier or a string literal.
   After <command>SET ROLE</command>, permissions checking for SQL commands
   is carried out as though the named role were the one that had logged
   in originally.
-->
このコマンドは現在のSQLセッションにおける現在のユーザ識別子を<replaceable class="parameter">role_name</replaceable>に設定します。
ロール名は識別子あるいは文字列リテラルのどちらを使用しても記述することができます。
<command>SET ROLE</command>の後、SQLコマンドに対する権限検査は、指定されたロールで普通にログインした場合と同様に行われます。
  </para>

  <para>
<!--
   The specified <replaceable class="parameter">role_name</replaceable>
   must be a role that the current session user is a member of.
   (If the session user is a superuser, any role can be selected.)
-->
指定する<replaceable class="parameter">role_name</replaceable>は、現在のセッションユーザがメンバとして属するロールでなければなりません。
（セッションユーザがスーパーユーザであった場合、任意のロールを選択することができます。）
  </para>

  <para>
<!--
   The <literal>SESSION</literal> and <literal>LOCAL</literal> modifiers act the same
   as for the regular <link linkend="sql-set"><command>SET</command></link>
   command.
-->
<literal>SESSION</literal>および<literal>LOCAL</literal>修飾子は通常の<link linkend="sql-set"><command>SET</command></link>コマンドと同様に動作します。
  </para>

  <para>
<!--
   <literal>SET ROLE NONE</literal> sets the current user identifier to the
   current session user identifier, as returned by
   <function>session_user</function>.  <literal>RESET ROLE</literal> sets the
   current user identifier to the connection-time setting specified by the
   <link linkend="libpq-connect-options">command-line options</link>,
   <link linkend="sql-alterrole"><command>ALTER ROLE</command></link>, or
   <link linkend="sql-alterdatabase"><command>ALTER DATABASE</command></link>,
   if any such settings exist.  Otherwise, <literal>RESET ROLE</literal> sets
   the current user identifier to the current session user identifier.  These
   forms can be executed by any user.
-->
<literal>SET ROLE NONE</literal>は現在のユーザ識別子を<function>session_user</function>により返される現在のセッションユーザ識別子に設定します。
<literal>RESET ROLE</literal>は現在のユーザ識別子を、設定が存在するのなら<link linkend="libpq-connect-options">コマンドラインオプション</link>、<link linkend="sql-alterrole"><command>ALTER ROLE</command></link>や<link linkend="sql-alterdatabase"><command>ALTER DATABASE</command></link>で指定される接続時の設定にします。
そうでなければ、<literal>RESET ROLE</literal>は現在のユーザ識別子を現在のセッションユーザ識別子に設定します。
この構文はすべてのユーザが実行できます。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   Using this command, it is possible to either add privileges or restrict
   one's privileges.  If the session user role has the <literal>INHERIT</literal>
   attribute, then it automatically has all the privileges of every role that
   it could <command>SET ROLE</command> to; in this case <command>SET ROLE</command>
   effectively drops all the privileges assigned directly to the session user
   and to the other roles it is a member of, leaving only the privileges
   available to the named role.  On the other hand, if the session user role
   has the <literal>NOINHERIT</literal> attribute, <command>SET ROLE</command> drops the
   privileges assigned directly to the session user and instead acquires the
   privileges available to the named role.
-->
このコマンドを使用して、権限を追加することも制限することもできます。
セッションユーザのロールが<literal>INHERIT</literal>属性を持つ場合、自動的に<command>SET ROLE</command>で設定可能なすべてのロールの権限を持ちます。
この場合、<command>SET ROLE</command>は実際、セッションユーザに直接割り当てられている権限、セッションユーザが属するロールに割り当てられている権限の内、指定されたロールで使用可能な権限を残し、他をすべて削除します。
一方、セッションユーザのロールが<literal>NOINHERIT</literal>属性を持つ場合、<command>SET ROLE</command>はセッションユーザに直接割り当てられた権限をすべて削除し、指定されたロールで利用可能な権限を獲得します。
  </para>

  <para>
<!--
   In particular, when a superuser chooses to <command>SET ROLE</command> to a
   non-superuser role, they lose their superuser privileges.
-->
特に、スーパーユーザが非特権ユーザへの<command>SET ROLE</command>を行うと、スーパーユーザ権限を失うことになります。
  </para>

  <para>
<!--
   <command>SET ROLE</command> has effects comparable to
   <link linkend="sql-set-session-authorization"><command>SET SESSION AUTHORIZATION</command></link>, but the privilege
   checks involved are quite different.  Also,
   <command>SET SESSION AUTHORIZATION</command> determines which roles are
   allowable for later <command>SET ROLE</command> commands, whereas changing
   roles with <command>SET ROLE</command> does not change the set of roles
   allowed to a later <command>SET ROLE</command>.
-->
<command>SET ROLE</command>の影響は<link linkend="sql-set-session-authorization"><command>SET SESSION AUTHORIZATION</command></link>と似ていますが、行われる権限検査はかなり異なります。
また、<command>SET SESSION AUTHORIZATION</command>は、それ以降に実行する<command>SET ROLE</command>コマンドでどのロールに変更できるかを決定しますが、<command>SET ROLE</command>を使用してロールを変更した場合、それ以降に実行する<command>SET ROLE</command>コマンドで変更可能なロール群は変更されません。
  </para>

  <para>
<!--
   <command>SET ROLE</command> does not process session variables as specified by
   the role's <link linkend="sql-alterrole"><command>ALTER ROLE</command></link> settings;  this only happens during
   login.
-->
<command>SET ROLE</command>はロールの<link linkend="sql-alterrole"><command>ALTER ROLE</command></link>設定で指定されたセッション変数を処理しません。
これはログイン時のみ適用されます。
  </para>

  <para>
<!--
   <command>SET ROLE</command> cannot be used within a
   <literal>SECURITY DEFINER</literal> function.
-->
<command>SET ROLE</command>を<literal>SECURITY DEFINER</literal>関数内で使用することはできません。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

<programlisting>
SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user
--------------+--------------
 peter        | peter

SET ROLE 'paul';

SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user
--------------+--------------
 peter        | paul
</programlisting>
 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   <productname>PostgreSQL</productname>
   allows identifier syntax (<literal>"<replaceable>rolename</replaceable>"</literal>), while
   the SQL standard requires the role name to be written as a string
   literal.  SQL does not allow this command during a transaction;
   <productname>PostgreSQL</productname> does not make this
   restriction because there is no reason to.
   The <literal>SESSION</literal> and <literal>LOCAL</literal> modifiers are a
   <productname>PostgreSQL</productname> extension, as is the
   <literal>RESET</literal> syntax.
-->
<productname>PostgreSQL</productname>では、識別子構文（<literal>"<replaceable>rolename</replaceable>"</literal>）を使用できます。
しかし、標準SQLではロール名を文字列リテラルとして記述しなければなりません。
SQLでは、トランザクション内でこのコマンドを実行することを許可していません。
<productname>PostgreSQL</productname>では、このように制限する理由がありませんので、この制限はありません。
<literal>SESSION</literal>、<literal>LOCAL</literal>修飾子、および、<literal>RESET</literal>構文は<productname>PostgreSQL</productname>の拡張です。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-set-session-authorization"/></member>
  </simplelist>
 </refsect1>
</refentry>
