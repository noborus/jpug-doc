<!--
doc/src/sgml/rel/alter_foreign_table.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterforeigntable">
 <indexterm zone="sql-alterforeigntable">
  <primary>ALTER FOREIGN TABLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER FOREIGN TABLE</refentrytitle>
  <manvolnum>7</manvolnum>
<!--
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
-->
  <refmiscinfo>SQL - 言語</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER FOREIGN TABLE</refname>
<!--
  <refpurpose>change the definition of a foreign table</refpurpose>
-->
  <refpurpose>外部テーブルの定義を変更する</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER FOREIGN TABLE [ IF EXISTS ] [ ONLY ] <replaceable class="parameter">name</replaceable> [ * ]
    <replaceable class="parameter">action</replaceable> [, ... ]
ALTER FOREIGN TABLE [ IF EXISTS ] [ ONLY ] <replaceable class="parameter">name</replaceable> [ * ]
    RENAME [ COLUMN ] <replaceable class="parameter">column_name</replaceable> TO <replaceable class="parameter">new_column_name</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">name</replaceable>
    RENAME TO <replaceable class="parameter">new_name</replaceable>
ALTER FOREIGN TABLE [ IF EXISTS ] <replaceable class="parameter">name</replaceable>
    SET SCHEMA <replaceable class="parameter">new_schema</replaceable>

<!--
<phrase>where <replaceable class="parameter">action</replaceable> is one of:</phrase>
-->
<phrase>ここで<replaceable class="parameter">action</replaceable>は以下のいずれかです。</phrase>

    ADD [ COLUMN ] <replaceable class="parameter">column_name</replaceable> <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ] [ <replaceable class="parameter">column_constraint</replaceable> [ ... ] ]
    DROP [ COLUMN ] [ IF EXISTS ] <replaceable class="parameter">column_name</replaceable> [ RESTRICT | CASCADE ]
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> [ SET DATA ] TYPE <replaceable class="parameter">data_type</replaceable> [ COLLATE <replaceable class="parameter">collation</replaceable> ]
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET DEFAULT <replaceable class="parameter">expression</replaceable>
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> DROP DEFAULT
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> { SET | DROP } NOT NULL
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET STATISTICS <replaceable class="parameter">integer</replaceable>
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET ( <replaceable class="parameter">attribute_option</replaceable> = <replaceable class="parameter">value</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> RESET ( <replaceable class="parameter">attribute_option</replaceable> [, ... ] )
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> SET STORAGE { PLAIN | EXTERNAL | EXTENDED | MAIN }
    ALTER [ COLUMN ] <replaceable class="parameter">column_name</replaceable> OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ])
    ADD <replaceable class="parameter">table_constraint</replaceable> [ NOT VALID ]
    VALIDATE CONSTRAINT <replaceable class="parameter">constraint_name</replaceable>
    DROP CONSTRAINT [ IF EXISTS ]  <replaceable class="parameter">constraint_name</replaceable> [ RESTRICT | CASCADE ]
    DISABLE TRIGGER [ <replaceable class="parameter">trigger_name</replaceable> | ALL | USER ]
    ENABLE TRIGGER [ <replaceable class="parameter">trigger_name</replaceable> | ALL | USER ]
    ENABLE REPLICA TRIGGER <replaceable class="parameter">trigger_name</replaceable>
    ENABLE ALWAYS TRIGGER <replaceable class="parameter">trigger_name</replaceable>
    SET WITHOUT OIDS
    INHERIT <replaceable class="parameter">parent_table</replaceable>
    NO INHERIT <replaceable class="parameter">parent_table</replaceable>
    OWNER TO { <replaceable class="parameter">new_owner</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
    OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ])
</synopsis>
 </refsynopsisdiv>

 <refsect1>
<!--
  <title>Description</title>
-->
  <title>説明</title>

  <para>
<!--
   <command>ALTER FOREIGN TABLE</command> changes the definition of an
   existing foreign table.  There are several subforms:
-->
<command>ALTER FOREIGN TABLE</command>は既存の外部テーブルの定義を変更します。
以下のように複数の副構文があります。

  <variablelist>
   <varlistentry>
    <term><literal>ADD COLUMN</literal></term>
    <listitem>
     <para>
<!--
      This form adds a new column to the foreign table, using the same syntax as
      <link linkend="sql-createforeigntable"><command>CREATE FOREIGN TABLE</command></link>.
      Unlike the case when adding a column to a regular table, nothing happens
      to the underlying storage: this action simply declares that
      some new column is now accessible through the foreign table.
-->
この構文は、<link linkend="sql-createforeigntable"><command>CREATE FOREIGN TABLE</command></link>と同じ文法を使用して、外部テーブルに新しい列を追加します。
通常のテーブルに列を追加する場合と異なり、背後のストレージには何も起こりません。
この操作は単に、外部テーブルを通して何らかの新しい列がアクセスできるようになったことを宣言します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP COLUMN [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
<!--
      This form drops a column from a foreign table.
      You will need to say <literal>CASCADE</literal> if
      anything outside the table depends on the column; for example,
      views.
      If <literal>IF EXISTS</literal> is specified and the column
      does not exist, no error is thrown. In this case a notice
      is issued instead.
-->
この構文は外部テーブルから列を削除します。
ビューなど何らかのその他のテーブルがこの列に依存する場合、<literal>CASCADE</literal>を付けなければなりません。
<literal>IF EXISTS</literal>が指定された場合、列が存在しなくてもエラーになりません。
この場合、注意メッセージが代わりに発生します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET DATA TYPE</literal></term>
    <listitem>
     <para>
<!--
      This form changes the type of a column of a foreign table.
      Again, this has no effect on any underlying storage: this action simply
      changes the type that <productname>PostgreSQL</productname> believes the column to
      have.
-->
この構文は外部テーブルの列の型を変更します。
この場合も、背後のストレージには何の影響もありません。
この動作は単に、<productname>PostgreSQL</productname>が想定しているその列の型を変更するだけです。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP DEFAULT</literal></term>
    <listitem>
     <para>
<!--
      These forms set or remove the default value for a column.
      Default values only apply in subsequent <command>INSERT</command>
      or <command>UPDATE</command> commands; they do not cause rows already in the
      table to change.
-->
この構文は列に対するデフォルト値の設定または削除を行います。
デフォルト値はその後に行われる<command>INSERT</command>または<command>UPDATE</command>コマンドにのみ適用されます。
すでにテーブル内に存在する行の変更は行われません。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET</literal>/<literal>DROP NOT NULL</literal></term>
    <listitem>
     <para>
<!--
      Mark a column as allowing, or not allowing, null values.
-->
列にNULL値を許すか許さないかどうか印を付けます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET STATISTICS</literal></term>
    <listitem>
     <para>
<!--
      This form
      sets the per-column statistics-gathering target for subsequent
      <link linkend="sql-analyze"><command>ANALYZE</command></link> operations.
      See the similar form of <link linkend="sql-altertable"><command>ALTER TABLE</command></link>
      for more details.
-->
この構文は、この後の<link linkend="sql-analyze"><command>ANALYZE</command></link>操作における列単位の統計情報収集目標を設定します。
詳細については<link linkend="sql-altertable"><command>ALTER TABLE</command></link>の類似の構文を参照してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET ( <replaceable class="parameter">attribute_option</replaceable> = <replaceable class="parameter">value</replaceable> [, ... ] )</literal></term>
    <term><literal>RESET ( <replaceable class="parameter">attribute_option</replaceable> [, ... ] )</literal></term>
    <listitem>
     <para>
<!--
      This form sets or resets per-attribute options.
      See the similar form of <link linkend="sql-altertable"><command>ALTER TABLE</command></link>
      for more details.
-->
この構文は属性単位のオプションを設定またはリセットします。
詳細については<link linkend="sql-altertable"><command>ALTER TABLE</command></link>における類似の構文を参照してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <literal>SET STORAGE</literal>
    </term>
    <listitem>
     <para>
<!--
      This form sets the storage mode for a column.
      See the similar form of <link linkend="sql-altertable"><command>ALTER TABLE</command></link>
      for more details.
      Note that the storage mode has no effect unless the table's
      foreign-data wrapper chooses to pay attention to it.
-->
この構文は、列のストレージモードを設定します。
詳しくは<link linkend="sql-altertable"><command>ALTER TABLE</command></link>の類似の構文を参照して下さい。
ストレージモードは、テーブルの外部データラッパがそれに注意するようになっていなければ、何の効果もないことに注意して下さい。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADD <replaceable class="parameter">table_constraint</replaceable> [ NOT VALID ]</literal></term>
    <listitem>
     <para>
<!--
      This form adds a new constraint to a foreign table, using the same
      syntax as <link linkend="sql-createforeigntable"><command>CREATE FOREIGN TABLE</command></link>.
      Currently only <literal>CHECK</literal> constraints are supported.
-->
この構文は、<link linkend="sql-createforeigntable"><command>CREATE FOREIGN TABLE</command></link>と同じ構文を使って、外部テーブルに新しい制約を追加します。
現在のところ、<literal>CHECK</literal>制約のみがサポートされています。
     </para>

     <para>
<!--
      Unlike the case when adding a constraint to a regular table, nothing is
      done to verify the constraint is correct; rather, this action simply
      declares that some new condition should be assumed to hold for all rows
      in the foreign table.  (See the discussion
      in <link linkend="sql-createforeigntable"><command>CREATE FOREIGN TABLE</command></link>.)
      If the constraint is marked <literal>NOT VALID</literal>, then it isn't
      assumed to hold, but is only recorded for possible future use.
-->
通常のテーブルに制約を追加する場合とは異なり、制約が正しいことを検証するために、何も実行されません。
そうではなく、この動作は単に、ある新しい条件が、外部テーブルのすべての行に対して成り立つことを仮定すべきだと宣言するものです。
（<link linkend="sql-createforeigntable"><command>CREATE FOREIGN TABLE</command></link>の記述を参照して下さい。）
制約が<literal>NOT VALID</literal>であるとされている場合、それが成り立つことは仮定されず、将来利用される場合に備えて記録されているだけになります。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VALIDATE CONSTRAINT</literal></term>
    <listitem>
     <para>
<!--
      This form marks as valid a constraint that was previously marked
      as <literal>NOT VALID</literal>.  No action is taken to verify the
      constraint, but future queries will assume that it holds.
-->
この構文は、それまで<literal>NOT VALID</literal>であるとされていた制約をvalidに変更します。
制約を検証するために何の動作も実行されませんが、以後の問い合わせではそれが成り立つと仮定されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DROP CONSTRAINT [ IF EXISTS ]</literal></term>
    <listitem>
     <para>
<!--
      This form drops the specified constraint on a foreign table.
      If <literal>IF EXISTS</literal> is specified and the constraint
      does not exist, no error is thrown.
      In this case a notice is issued instead.
-->
この構文は、外部テーブル上の指定された制約を削除します。
<literal>IF EXISTS</literal>が指定され、その制約が存在しない場合は、エラーにはなりません。
その場合、代わりに注意が発行されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DISABLE</literal>/<literal>ENABLE [ REPLICA | ALWAYS ] TRIGGER</literal></term>
    <listitem>
     <para>
<!--
      These forms configure the firing of trigger(s) belonging to the foreign
      table.  See the similar form of <link linkend="sql-altertable"><command>ALTER TABLE</command></link> for more
      details.
-->
これらの構文は外部テーブルに属するトリガの発行について設定します。
詳細については<link linkend="sql-altertable"><command>ALTER TABLE</command></link>における類似の構文を参照してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET WITHOUT OIDS</literal></term>
    <listitem>
     <para>
<!--
      Backward compatibility syntax for removing the <literal>oid</literal>
      system column. As <literal>oid</literal> system columns cannot be added
      anymore, this never has an effect.
-->
システム列<literal>oid</literal>を削除する、後方互換のための構文です。
システム列<literal>oid</literal>は今では追加できませんので、これは効果がありません。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INHERIT <replaceable class="parameter">parent_table</replaceable></literal></term>
    <listitem>
     <para>
<!--
      This form adds the target foreign table as a new child of the specified
      parent table.
      See the similar form of <link linkend="sql-altertable"><command>ALTER TABLE</command></link>
      for more details.
-->
この構文は対象の外部テーブルを指定した親テーブルの新しい子テーブルとして追加します。
詳しくは<link linkend="sql-altertable"><command>ALTER TABLE</command></link>の類似の構文を参照して下さい。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>NO INHERIT <replaceable class="parameter">parent_table</replaceable></literal></term>
    <listitem>
     <para>
<!--
      This form removes the target foreign table from the list of children of
      the specified parent table.
-->
この構文は、対象の外部テーブルを指定した親テーブルの子テーブルのリストから削除します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNER</literal></term>
    <listitem>
     <para>
<!--
      This form changes the owner of the foreign table to the
      specified user.
-->
この構文は外部テーブルの所有者を指定ユーザに変更します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OPTIONS ( [ ADD | SET | DROP ] <replaceable class="parameter">option</replaceable> ['<replaceable class="parameter">value</replaceable>'] [, ... ] )</literal></term>
    <listitem>
     <para>
<!--
      Change options for the foreign table or one of its columns.
      <literal>ADD</literal>, <literal>SET</literal>, and <literal>DROP</literal>
      specify the action to be performed.  <literal>ADD</literal> is assumed
      if no operation is explicitly specified.  Duplicate option names are not
      allowed (although it's OK for a table option and a column option to have
      the same name).  Option names and values are also validated using the
      foreign data wrapper library.
-->
外部テーブルもしくはその列の１つについてのオプションを変更します。
<literal>ADD</literal>、<literal>SET</literal>、<literal>DROP</literal>は実行する操作を指定します。
明示的な操作指定がない場合<literal>ADD</literal>とみなされます。
重複したオプション名は許されません。
（しかしテーブルオプションと列オプションとで同じ名前を持たせることは問題ありません。）
またオプションの名前と値は外部データラッパのライブラリを使用して検証されます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RENAME</literal></term>
    <listitem>
     <para>
<!--
      The <literal>RENAME</literal> forms change the name of a foreign table
      or the name of an individual column in a foreign table.
-->
<literal>RENAME</literal>構文は外部テーブルの名前または外部テーブル内の個々の列の名前を変更します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SET SCHEMA</literal></term>
    <listitem>
     <para>
<!--
      This form moves the foreign table into another schema.
-->
この構文は外部テーブルを別のスキーマに移動します。
     </para>
    </listitem>
   </varlistentry>

  </variablelist>
  </para>

  <para>
<!--
   All the actions except <literal>RENAME</literal> and <literal>SET SCHEMA</literal>
   can be combined into
   a list of multiple alterations to apply in parallel.  For example, it
   is possible to add several columns and/or alter the type of several
   columns in a single command.
-->
<literal>RENAME</literal>および<literal>SET SCHEMA</literal>以外の操作はすべて、複数変更項目リストにまとめて並行に適用することができます。
例えば、複数の列の追加、複数の列の型変更、またはその両方を単一のコマンドで行うことができます。
  </para>

  <para>
<!--
   If the command is written as <literal>ALTER FOREIGN TABLE IF EXISTS ...</literal>
   and the foreign table does not exist, no error is thrown. A notice is
   issued in this case.
-->
コマンドが<literal>ALTER FOREIGN TABLE IF EXISTS ...</literal>と記述されていて外部テーブルが存在しない場合、エラーにはなりません。
この場合、注意が発行されます。
  </para>

  <para>
<!--
   You must own the table to use <command>ALTER FOREIGN TABLE</command>.
   To change the schema of a foreign table, you must also have
   <literal>CREATE</literal> privilege on the new schema.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role, and that role must have <literal>CREATE</literal> privilege on
   the table's schema.  (These restrictions enforce that altering the owner
   doesn't do anything you couldn't do by dropping and recreating the table.
   However, a superuser can alter ownership of any table anyway.)
   To add a column or alter a column type, you must also
   have <literal>USAGE</literal> privilege on the data type.
-->
<command>ALTER FOREIGN TABLE</command>を使用するためにはテーブルの所有者でなければなりません。
また外部テーブルのスキーマを変更するためには、新しいスキーマに対して<literal>CREATE</literal>権限を持っていなければなりません。
所有者を変更するためには、新しく所有者となるロールの直接的または間接的なメンバでなければなりません。
また新しく所有者となるロールはテーブルのスキーマに対して<literal>CREATE</literal>権限を持っていなければなりません。
（これらの制限により、テーブルの削除と再作成を行ってもできないことを所有者の変更で行えないようにします。
しかし、スーパーユーザはどのテーブルの所有者も変更できます。）
列の追加または列の型の変更を行うためには、そのデータ型に対する<literal>USAGE</literal>権限も必要です。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Parameters</title>
-->
  <title>パラメータ</title>

    <variablelist>

     <varlistentry>
      <term><replaceable class="parameter">name</replaceable></term>
      <listitem>
       <para>
<!--
        The name (possibly schema-qualified) of an existing foreign table to
        alter. If <literal>ONLY</literal> is specified before the table name, only
        that table is altered. If <literal>ONLY</literal> is not specified, the table
        and all its descendant tables (if any) are altered.  Optionally,
        <literal>*</literal> can be specified after the table name to explicitly
        indicate that descendant tables are included.
-->
変更対象の既存外部テーブルの名前（スキーマ修飾可）です。
テーブル名の前に<literal>ONLY</literal>が指定されていた場合、そのテーブルのみが変更されます。
<literal>ONLY</literal>が指定されていない場合、そのテーブルと、そのすべての子孫のテーブル（あれば）が変更されます。
子孫のテーブルが含まれることを明示的に示すために、テーブル名の後に<literal>*</literal>を指定することができますが、これは省略可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">column_name</replaceable></term>
      <listitem>
       <para>
<!--
        Name of a new or existing column.
-->
新しい列または既存の列の名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_column_name</replaceable></term>
      <listitem>
       <para>
<!--
        New name for an existing column.
-->
既存の列に対する新しい名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_name</replaceable></term>
      <listitem>
       <para>
<!--
        New name for the table.
-->
テーブルの新しい名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">data_type</replaceable></term>
      <listitem>
       <para>
<!--
        Data type of the new column, or new data type for an existing
        column.
-->
新しい列のデータ型、または既存の列に対する新しいデータ型です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">table_constraint</replaceable></term>
      <listitem>
       <para>
<!--
        New table constraint for the foreign table.
-->
外部テーブルの新しいテーブル制約です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">constraint_name</replaceable></term>
      <listitem>
       <para>
<!--
        Name of an existing constraint to drop.
-->
削除する既存の制約の名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>CASCADE</literal></term>
      <listitem>
       <para>
<!--
        Automatically drop objects that depend on the dropped column
        or constraint (for example, views referencing the column),
        and in turn all objects that depend on those objects
        (see <xref linkend="ddl-depend"/>).
-->
削除される列または制約に依存するオブジェクト（その列を参照するビューなど）を自動的に削除し、さらにそれらのオブジェクトに依存するすべてのオブジェクトも削除します（<xref linkend="ddl-depend"/>参照）。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>RESTRICT</literal></term>
      <listitem>
       <para>
<!--
        Refuse to drop the column or constraint if there are any dependent
        objects. This is the default behavior.
-->
依存するオブジェクトが存在する場合、列または制約の削除を拒否します。
これがデフォルトの動作です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">trigger_name</replaceable></term>
      <listitem>
       <para>
<!--
        Name of a single trigger to disable or enable.
-->
無効にする、あるいは有効にするトリガの名前です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>ALL</literal></term>
      <listitem>
       <para>
<!--
        Disable or enable all triggers belonging to the foreign table.  (This
        requires superuser privilege if any of the triggers are internally
        generated triggers.  The core system does not add such triggers to
        foreign tables, but add-on code could do so.)
-->
外部テーブルに属するすべてのトリガを無効、あるいは有効にします。
(内部的に生成されたトリガが含まれる場合、スーパーユーザ権限が必要です。
コアシステムは外部テーブルにそのようなトリガを追加することはありませんが、アドオンが追加することはあり得ます。)
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>USER</literal></term>
      <listitem>
       <para>
<!--
        Disable or enable all triggers belonging to the foreign table except
        for internally generated triggers.
-->
内部的に生成されたトリガを除き、外部テーブルに属するすべてのトリガを無効、あるいは有効にします。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">parent_table</replaceable></term>
      <listitem>
       <para>
<!--
        A parent table to associate or de-associate with this foreign table.
-->
外部テーブルと関連付ける、あるいは関連を取り消す親テーブルです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_owner</replaceable></term>
      <listitem>
       <para>
<!--
        The user name of the new owner of the table.
-->
テーブルの新しい所有者のユーザ名です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">new_schema</replaceable></term>
      <listitem>
       <para>
<!--
        The name of the schema to which the table will be moved.
-->
テーブルの移動先となるスキーマの名前です。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

   <para>
<!--
    The key word <literal>COLUMN</literal> is noise and can be omitted.
-->
<literal>COLUMN</literal>キーワードには意味がなく、省略可能です。
   </para>

   <para>
<!--
    Consistency with the foreign server is not checked when a column is added
    or removed with <literal>ADD COLUMN</literal> or
    <literal>DROP COLUMN</literal>, a <literal>NOT NULL</literal>
    or <literal>CHECK</literal> constraint is added, or a column type is changed
    with <literal>SET DATA TYPE</literal>.  It is the user's responsibility to ensure
    that the table definition matches the remote side.
-->
<literal>ADD COLUMN</literal>または<literal>DROP COLUMN</literal>により列が追加、削除される時、<literal>NOT NULL</literal>または<literal>CHECK</literal>制約が追加される時、<literal>SET DATA TYPE</literal>により列の型が変更される時、外部サーバとの一貫性は検査されません。
確実にテーブル定義をリモート側に合わせることはユーザの責任です。
   </para>

   <para>
<!--
    Refer to <link linkend="sql-createforeigntable"><command>CREATE FOREIGN TABLE</command></link> for a further description of valid
    parameters.
-->
有効なパラメータに関する詳しい説明については<link linkend="sql-createforeigntable"><command>CREATE FOREIGN TABLE</command></link>を参照してください。
   </para>
 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   To mark a column as not-null:
-->
列を非NULLと印付けします。
<programlisting>
ALTER FOREIGN TABLE distributors ALTER COLUMN street SET NOT NULL;
</programlisting>
  </para>

  <para>
<!--
   To change options of a foreign table:
-->
外部テーブルのオプションを変更します。
<programlisting>
ALTER FOREIGN TABLE myschema.distributors OPTIONS (ADD opt1 'value', SET opt2 'value2', DROP opt3 'value3');
</programlisting></para>

 </refsect1>

 <refsect1>
<!--
  <title>Compatibility</title>
-->
  <title>互換性</title>

  <para>
<!--
   The forms <literal>ADD</literal>, <literal>DROP</literal>,
   and <literal>SET DATA TYPE</literal>
   conform with the SQL standard.  The other forms are
   <productname>PostgreSQL</productname> extensions of the SQL standard.
   Also, the ability to specify more than one manipulation in a single
   <command>ALTER FOREIGN TABLE</command> command is an extension.
-->
<literal>ADD</literal>、<literal>DROP</literal>、<literal>SET DATA TYPE</literal>構文は標準SQLに準拠します。
他の構文は標準SQLに対する<productname>PostgreSQL</productname>の拡張です。
単一の<command>ALTER FOREIGN TABLE</command>コマンドに複数の操作を指定する機能も拡張です。
  </para>

  <para>
<!--
   <command>ALTER FOREIGN TABLE DROP COLUMN</command> can be used to drop the only
   column of a foreign table, leaving a zero-column table.  This is an
   extension of SQL, which disallows zero-column foreign tables.
-->
<command>ALTER FOREIGN TABLE DROP COLUMN</command>を用いて外部テーブルのたった1つの列を削除してゼロ列のテーブルとすることができます。
これは拡張であり、SQLではゼロ列の外部テーブルを許しません。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createforeigntable"/></member>
   <member><xref linkend="sql-dropforeigntable"/></member>
  </simplelist>
 </refsect1>
</refentry>
