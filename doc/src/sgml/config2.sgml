<!-- 警告：このファイルは直接編集しないでください！
1. config.sgmlを編集したら、split-config.shを起動します。
2. するとconfig[0-3].sgmlが生成されます。
3. config.sgmlとともにconfig[0-3].sgmlのうち変更されたファイルをcommit/pushしてpull requestを作成してください。
4. レビューはconfig[0-3].sgmlに対して行います。
5. 指摘された点があればconfig.sgmlに反映し、1に戻ります。
6. config.sgmlの変更がなければ、pull requestをマージして終了です。お疲れ様でした！
-->
<!-- split-config2-start -->

     <varlistentry id="guc-join-collapse-limit" xreflabel="join_collapse_limit">
      <term><varname>join_collapse_limit</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>join_collapse_limit</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>join_collapse_limit</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        The planner will rewrite explicit <literal>JOIN</literal>
        constructs (except <literal>FULL JOIN</literal>s) into lists of
        <literal>FROM</literal> items whenever a list of no more than this many items
        would result.  Smaller values reduce planning time but might
        yield inferior query plans.
-->
最終的にリストがこの項目数以下になる時、プランナは、明示的な<literal>JOIN</literal>構文（<literal>FULL JOIN</literal>を除く）を<literal>FROM</literal>項目のリストに直します。
この値を小さくすれば計画作成時間は減少しますが、劣った問い合わせ計画が作成される可能性があります。
       </para>

       <para>
<!--
        By default, this variable is set the same as
        <varname>from_collapse_limit</varname>, which is appropriate
        for most uses. Setting it to 1 prevents any reordering of
        explicit <literal>JOIN</literal>s. Thus, the explicit join order
        specified in the query will be the actual order in which the
        relations are joined. Because the query planner does not always choose
        the optimal join order, advanced users can elect to
        temporarily set this variable to 1, and then specify the join
        order they desire explicitly.
        For more information see <xref linkend="explicit-joins"/>.
-->
デフォルトでは、この値は<varname>from_collapse_limit</varname>と同じ値に設定されており、殆どの場合に適切です。
これを1に設定すると明示的な<literal>JOIN</literal>の再順序付けは行われなくなります。
したがって、問い合わせで指定された明示的結合順序は、関係（リレーション）が結合される実際の順序となります。
問い合わせプランナは常に最適な結合順序を選択するとは限らないので、
上級ユーザなら暫定的にこの変数を1に設定し、明示的に希望とする結合順序を指定してもよいでしょう。
詳細は<xref linkend="explicit-joins"/>を参照してください。
       </para>

       <para>
<!--
        Setting this value to <xref linkend="guc-geqo-threshold"/> or more
        may trigger use of the GEQO planner, resulting in non-optimal
        plans.  See <xref linkend="runtime-config-query-geqo"/>.
-->
この値を<xref linkend="guc-geqo-threshold"/>か、それ以上に設定するとGEQOプランナ使用の誘引となり、最適ではない計画をもたらします。<xref linkend="runtime-config-query-geqo"/>を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-plan-cache_mode" xreflabel="plan_cache_mode">
      <term><varname>plan_cache_mode</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>plan_cache_mode</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>plan_cache_mode</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Prepared statements (either explicitly prepared or implicitly
        generated, for example by PL/pgSQL) can be executed using custom or
        generic plans.  Custom plans are made afresh for each execution
        using its specific set of parameter values, while generic plans do
        not rely on the parameter values and can be re-used across
        executions.  Thus, use of a generic plan saves planning time, but if
        the ideal plan depends strongly on the parameter values then a
        generic plan may be inefficient.  The choice between these options
        is normally made automatically, but it can be overridden
        with <varname>plan_cache_mode</varname>.
        The allowed values are <literal>auto</literal> (the default),
        <literal>force_custom_plan</literal> and
        <literal>force_generic_plan</literal>.
        This setting is considered when a cached plan is to be executed,
        not when it is prepared.
        For more information see <xref linkend="sql-prepare"/>.
-->
準備された文（明示的に準備されたものあるいはPL/pgSQLのように暗黙的に生成されたもののどちらにおいても）は、カスタムあるいは汎用(generic)プランで実行することができます。
カスタムプランは実行ごとに指定されたパラメータ値の集合で新たに作られます。
一方汎用プランはパラメータ値に依存せず、複数の実行にまたがって再利用できます。
したがって、汎用プランはプランニングに要する時間を節約できますが、理想的なプランがパラメータ値に強く依存している場合は、汎用プランは非効率かも知れません。
通常この両者の選択は自動的に行われますが、<varname>plan_cache_mode</varname>で上書きできます。
可能な値は<literal>auto</literal>（デフォルト）、<literal>force_custom_plan</literal>、<literal>force_generic_plan</literal>です。
この設定は、準備するときではなく、キャッシュされたプランを実行する際に考慮されます。
詳細は<xref linkend="sql-prepare"/>をご覧ください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-recursive-worktable-factor" xreflabel="recursive_worktable_factor">
      <term><varname>recursive_worktable_factor</varname> (<type>floating point</type>)
      <indexterm>
       <primary><varname>recursive_worktable_factor</varname> configuration parameter</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Sets the planner's estimate of the average size of the working
        table of a <link linkend="queries-with-recursive">recursive
        query</link>, as a multiple of the estimated size of the initial
        non-recursive term of the query.  This helps the planner choose
        the most appropriate method for joining the working table to the
        query's other tables.
        The default value is <literal>10.0</literal>.  A smaller value
        such as <literal>1.0</literal> can be helpful when the recursion
        has low <quote>fan-out</quote> from one step to the next, as for
        example in shortest-path queries.  Graph analytics queries may
        benefit from larger-than-default values.
-->
《機械翻訳》<link linkend="queries-with-recursive">再帰問合せ</link>のワーキング・テーブルの平均サイズのプランナの推定値を、問合せの最初の非再帰項の推定サイズの倍数として設定します。
これにより、プランナは、ワーキング・テーブルを問合せの他のテーブルに結合するための最も適切な方法を選択できます。
デフォルト値は<literal>10.0</literal>です。
<literal>1.0</literal>などの小さい値は、最短パス問合せなど、あるステップから次のステップへの再帰が低い<quote>ファンアウト</quote>場合に役立ちます。
グラフ分析の問合せでは、デフォルト値より大きい値が有効な場合があります。
       </para>
      </listitem>
     </varlistentry>

     </variablelist>
    </sect2>
   </sect1>

   <sect1 id="runtime-config-logging">
<!--
    <title>Error Reporting and Logging</title>
-->
    <title>エラー報告とログ取得</title>

    <indexterm zone="runtime-config-logging">
     <primary>server log</primary>
    </indexterm>
    <indexterm zone="runtime-config-logging">
     <primary>サーバログ</primary>
    </indexterm>

    <sect2 id="runtime-config-logging-where">
<!--
     <title>Where to Log</title>
-->
     <title>ログの出力先</title>

     <indexterm zone="runtime-config-logging-where">
      <primary>where to log</primary>
     </indexterm>
     <indexterm zone="runtime-config-logging-where">
      <primary>ログの出力先</primary>
     </indexterm>

     <indexterm>
       <primary>current_logfiles</primary>
       <secondary>and the log_destination configuration parameter</secondary>
     </indexterm>
     <indexterm>
       <primary>current_logfiles</primary>
       <secondary>およびlog_destination設定パラメータ</secondary>
     </indexterm>

     <variablelist>

     <varlistentry id="guc-log-destination" xreflabel="log_destination">
      <term><varname>log_destination</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>log_destination</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_destination</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
        <productname>PostgreSQL</productname> supports several methods
         for logging server messages, including
         <systemitem>stderr</systemitem>, <systemitem>csvlog</systemitem>,
         <systemitem>jsonlog</systemitem>, and
         <systemitem>syslog</systemitem>. On Windows,
         <systemitem>eventlog</systemitem> is also supported. Set this
         parameter to a list of desired log destinations separated by
         commas. The default is to log to <systemitem>stderr</systemitem>
         only.
<!--
         This parameter can only be set in the <filename>postgresql.conf</filename>
         file or on the server command line.
-->
このパラメータは、<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
       </para>
       <para>
<!--
        If <systemitem>csvlog</systemitem> is included in <varname>log_destination</varname>,
        log entries are output in <quote>comma separated
        value</quote> (<acronym>CSV</acronym>) format, which is convenient for
        loading logs into programs.
        See <xref linkend="runtime-config-logging-csvlog"/> for details.
        <xref linkend="guc-logging-collector"/> must be enabled to generate
        CSV-format log output.
-->
<systemitem>csvlog</systemitem>が<varname>log_destination</varname>に含まれる場合、ログ項目はプログラムへの読み込みが簡便な<quote>カンマ区切り値</quote>書式（<acronym>CSV</acronym>）で出力されます。
詳細は<xref linkend="runtime-config-logging-csvlog"/>を参照してください。
CSV書式のログ出力を生成するためには<xref linkend="guc-logging-collector"/>を有効にする必要があります。
       </para>
       <para>
<!--
        If <systemitem>jsonlog</systemitem> is included in
        <varname>log_destination</varname>, log entries are output in
        <acronym>JSON</acronym> format, which is convenient for loading logs
        into programs.
        See <xref linkend="runtime-config-logging-jsonlog"/> for details.
        <xref linkend="guc-logging-collector"/> must be enabled to generate
        JSON-format log output.
-->
《マッチ度[69.774011]》<systemitem>csvlog</systemitem>が<varname>log_destination</varname>に含まれる場合、ログ項目はプログラムへの読み込みが簡便な<quote>カンマ区切り値</quote>書式（<acronym>CSV</acronym>）で出力されます。
詳細は<xref linkend="runtime-config-logging-csvlog"/>を参照してください。
CSV書式のログ出力を生成するためには<xref linkend="guc-logging-collector"/>を有効にする必要があります。
       </para>
       <para>
<!--
        When either <systemitem>stderr</systemitem>,
        <systemitem>csvlog</systemitem> or <systemitem>jsonlog</systemitem> are
        included, the file <filename>current_logfiles</filename> is created to
        record the location of the log file(s) currently in use by the logging
        collector and the associated logging destination. This provides a
        convenient way to find the logs currently in use by the instance. Here
        is an example of this file's content:
<programlisting>
stderr log/postgresql.log
csvlog log/postgresql.csv
jsonlog log/postgresql.json
</programlisting>

        <filename>current_logfiles</filename> is recreated when a new log file
        is created as an effect of rotation, and
        when <varname>log_destination</varname> is reloaded.  It is removed when
        none of <systemitem>stderr</systemitem>,
        <systemitem>csvlog</systemitem> or <systemitem>jsonlog</systemitem> are
        included in <varname>log_destination</varname>, and when the logging
        collector is disabled.
-->
《機械翻訳》<systemitem>stderr</systemitem>、<systemitem>csvlog</systemitem>、または<systemitem>jsonlog</systemitem>のいずれかが含まれている場合、ファイル<filename>current_logfiles</filename>が作成され、ロギングコレクタによって現在使用されているログファイルの場所と関連付けられたロギング先が記録されます。
これにより、インスタンスによって現在使用されているログを簡単に見つけることができます。
このファイルの内容の例を次に示します:<programlisting>stderr log/postgresql.log csvlog log/postgresql.csv jsonlog log/postgresql.json</programlisting><filename>current_logfiles</filename>は、ローテーションの効果として新しいログファイルが作成されたとき、および<varname>log_destination</varname>がリロードされたときに再作成されます。
<systemitem>stderr</systemitem>、<systemitem>csvlog</systemitem>、<systemitem>jsonlog</systemitem>のいずれも<varname>log_destination</varname>に含まれていないとき、およびロギングコレクタが無効になっているときに削除されます。
       </para>

       <note>
        <para>
<!--
         On most Unix systems, you will need to alter the configuration of
         your system's <application>syslog</application> daemon in order
         to make use of the <systemitem>syslog</systemitem> option for
         <varname>log_destination</varname>.  <productname>PostgreSQL</productname>
         can log to <application>syslog</application> facilities
         <literal>LOCAL0</literal> through <literal>LOCAL7</literal> (see <xref
         linkend="guc-syslog-facility"/>), but the default
         <application>syslog</application> configuration on most platforms
         will discard all such messages.  You will need to add something like:
-->
<varname>log_destination</varname>で<systemitem>syslog</systemitem>オプションを使用できるようにするために、ほとんどのUnixシステムではシステムの<application>syslog</application>デーモンの設定を変更しなければならないでしょう。
<productname>PostgreSQL</productname>ではログを<literal>LOCAL0</literal>から<literal>LOCAL7</literal>までの<application>syslog</application>ファシリティで記録することができます（<xref linkend="guc-syslog-facility"/>を参照してください）。
しかし、ほとんどのプラットフォームのデフォルトの<application>syslog</application>設定ではこれらのメッセージはすべて破棄されます。
うまく動作させるために
<programlisting>
local0.*    /var/log/postgresql
</programlisting>
<!--
         to the  <application>syslog</application> daemon's configuration file
         to make it work.
-->
<application>syslog</application>デーモンの設定に追加しなければならないでしょう。
        </para>
        <para>
<!--
         On Windows, when you use the <literal>eventlog</literal>
         option for <varname>log_destination</varname>, you should
         register an event source and its library with the operating
         system so that the Windows Event Viewer can display event
         log messages cleanly.
         See <xref linkend="event-log-registration"/> for details.
-->
Windowsで<varname>log_destination</varname>に対し<literal>eventlog</literal>オプションを使用する場合、Windows Event Viewer がイベントログメッセージを手際良く表示できるよう、オペレーティングシステムでイベントソースとそのライブラリを登録しなければなりません。
詳細は<xref linkend="event-log-registration"/>を参照ください。
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-logging-collector" xreflabel="logging_collector">
      <term><varname>logging_collector</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>logging_collector</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>logging_collector</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
         This parameter enables the <firstterm>logging collector</firstterm>, which
         is a background process that captures log messages
         sent to <systemitem>stderr</systemitem> and redirects them into log files.
         This approach is often more useful than
         logging to <application>syslog</application>, since some types of messages
         might not appear in <application>syslog</application> output.  (One common
         example is dynamic-linker failure messages; another is error messages
         produced by scripts such as <varname>archive_command</varname>.)
         This parameter can only be set at server start.
-->
このパラメータは<firstterm>ログ収集機構</firstterm>を有効にします。
それは<systemitem>stderr</systemitem>に送られたログメッセージを捕捉し、ログファイルにリダイレクトするバックグラウンドプロセスです。
この手法は<application>syslog</application>へのログよりもしばしば有用です。
メッセージの一部の種類が<application>syslog</application>では出力されない可能性があるためです。
（一般的な例として、ダイナミックリンカのエラーメッセージがあり、その他の例として<varname>archive_command</varname>のようなスクリプトにより生成されたエラーメッセージが挙げられます）。
このパラメータはサーバ起動時のみ設定可能です。
       </para>

       <note>
        <para>
<!--
         It is possible to log to <systemitem>stderr</systemitem> without using the
         logging collector; the log messages will just go to wherever the
         server's <systemitem>stderr</systemitem> is directed.  However, that method is
         only suitable for low log volumes, since it provides no convenient
         way to rotate log files.  Also, on some platforms not using the
         logging collector can result in lost or garbled log output, because
         multiple processes writing concurrently to the same log file can
         overwrite each other's output.
-->
ログ収集機構を使用せずに<systemitem>stderr</systemitem>のログを取ることは可能です。
ログメッセージはサーバの<systemitem>stderr</systemitem>が指し示すいかなる場所にも向かうだけです。
しかし、その方法はログファイルを巡回させる都合のよい方法を提供しないので、ログ容量が小さい場合のみに適しています。
同時に、ログ収集機構を使用しないいくつかのプラットフォームにおいては、ログ出力が失われたり、文字化けします。なぜなら、同一のログファイルに同時に書き込みを行うマルチプロセッサはそれぞれの出力を上書きできるからです。
        </para>
       </note>

       <note>
        <para>
<!--
          The logging collector is designed to never lose messages.  This means
          that in case of extremely high load, server processes could be
          blocked while trying to send additional log messages when the
          collector has fallen behind.  In contrast, <application>syslog</application>
          prefers to drop messages if it cannot write them, which means it
          may fail to log some messages in such cases but it will not block
          the rest of the system.
-->
ログ収集機構はメッセージを決して失わないために設計されています。
これは、極端に高い負荷の場合、サーバプロセスはコレクタが遅れをとった場合、追加のログメッセージを送信しようと試みる時に阻止される可能性があります。
それとは対象的に<application>syslog</application>は、もし書き込みができなかったときメッセージの廃棄を選びます。
これらの場合にはいくつかのログメッセージを失うことになりますが、残ったシステムを阻止しません。
        </para>
       </note>

      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-directory" xreflabel="log_directory">
      <term><varname>log_directory</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>log_directory</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_directory</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When <varname>logging_collector</varname> is enabled,
        this parameter determines the directory in which log files will be created.
        It can be specified as an absolute path, or relative to the
        cluster data directory.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
        The default is <literal>log</literal>.
-->
<varname>logging_collector</varname>を有効と設定した場合、このパラメータはログファイルが作成されるディレクトリを確定します。
ディレクトリは、絶対パス、もしくはデータベースクラスタのディレクトリに対する相対パスで指定することができます。
このパラメータは<filename>postgresql.conf</filename>ファイル、またはサーバコマンドラインからのみ設定可能です。
デフォルトは<literal>log</literal>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-filename" xreflabel="log_filename">
      <term><varname>log_filename</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>log_filename</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_filename</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When <varname>logging_collector</varname> is enabled,
        this parameter sets the file names of the created log files.  The value
        is treated as a <function>strftime</function> pattern,
        so <literal>%</literal>-escapes can be used to specify time-varying
        file names.  (Note that if there are
        any time-zone-dependent <literal>%</literal>-escapes, the computation
        is done in the zone specified
        by <xref linkend="guc-log-timezone"/>.)
        The supported <literal>%</literal>-escapes are similar to those
        listed in the Open Group's <ulink
        url="https://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html">strftime
        </ulink> specification.
        Note that the system's <function>strftime</function> is not used
        directly, so platform-specific (nonstandard) extensions do not work.
        The default is <literal>postgresql-%Y-%m-%d_%H%M%S.log</literal>.
-->
<varname>logging_collector</varname>が有効な場合、このパラメータは作成されたログファイルのファイル名を設定します。
値は<function>strftime</function>パターンとして扱われるため、<literal>%</literal>エスケープを使用して、時刻によって変動するファイル名を指定することができます。
（時間帯に依存した<literal>%</literal>エスケープが存在する場合、<xref
linkend="guc-log-timezone"/>で指定された時間帯で計算が行われます。）
サポートされている<literal>%</literal>-エスケープは<ulink url="https://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html">strftime</ulink> 仕様によく似ています。
システムの<function>strftime</function>は直接使用されないので、プラットフォーム固有の（非標準）の拡張は動作しません。
デフォルトは<literal>postgresql-%Y-%m-%d_%H%M%S.log</literal>です。
       </para>
       <para>
<!--
        If you specify a file name without escapes, you should plan to
        use a log rotation utility to avoid eventually filling the
        entire disk.  In releases prior to 8.4, if
        no <literal>%</literal> escapes were
        present, <productname>PostgreSQL</productname> would append
        the epoch of the new log file's creation time, but this is no
        longer the case.
-->
エスケープすることなくファイル名を指定する場合、ディスク全体を使い切ってしまうことを防止するためにログローテーションを行うユーティリティを使用することを計画しなければなりません。
8.4より前のリリースの<productname>PostgreSQL</productname>では、<literal>%</literal>エスケープがなければ、新しいログファイルの生成時のエポック時刻を付与しますが、これはもはや当てはまりません。
       </para>
       <para>
<!--
        If CSV-format output is enabled in <varname>log_destination</varname>,
        <literal>.csv</literal> will be appended to the timestamped
        log file name to create the file name for CSV-format output.
        (If <varname>log_filename</varname> ends in <literal>.log</literal>, the suffix is
        replaced instead.)
-->
CSV書式の出力が<varname>log_destination</varname>で有効な場合、タイムスタンプ付きのログファイル名に<literal>.csv</literal>を付与し、最終的なCSV書式出力用のファイル名が作成されます。
（<varname>log_filename</varname>が<literal>.log</literal>で終わる場合は後置詞が置き換えられます。）
       </para>
       <para>
<!--
        If JSON-format output is enabled in <varname>log_destination</varname>,
        <literal>.json</literal> will be appended to the timestamped
        log file name to create the file name for JSON-format output.
        (If <varname>log_filename</varname> ends in <literal>.log</literal>, the suffix is
        replaced instead.)
-->
《マッチ度[83.445946]》CSV書式の出力が<varname>log_destination</varname>で有効な場合、タイムスタンプ付きのログファイル名に<literal>.csv</literal>を付与し、最終的なCSV書式出力用のファイル名が作成されます。
（<varname>log_filename</varname>が<literal>.log</literal>で終わる場合は後置詞が置き換えられます。）
       </para>
       <para>
<!--
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
このパラメータは、<filename>postgresql.conf</filename>ファイルか、サーバのコマンドラインでのみ設定可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-file-mode" xreflabel="log_file_mode">
      <term><varname>log_file_mode</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_file_mode</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_file_mode</varname> 設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        On Unix systems this parameter sets the permissions for log files
        when <varname>logging_collector</varname> is enabled. (On Microsoft
        Windows this parameter is ignored.)
        The parameter value is expected to be a numeric mode
        specified in the format accepted by the
        <function>chmod</function> and <function>umask</function>
        system calls.  (To use the customary octal format the number
        must start with a <literal>0</literal> (zero).)
-->
Unixシステムにおいては、<varname>logging_collector</varname>が有効になっている場合、このパラメータはログファイルのパーミッションを設定します。
（Microsoft Windowsではこのパラメータは無視されます。）
パラメータの値は<function>chmod</function> および <function>umask</function>システムコールで許容されるフォーマットで指定される数値モードであると期待されます。
（慣例的な8進数フォーマットを使用する場合、番号は<literal>0</literal>（ゼロ）で始まらなければなりません。
       </para>
       <para>
<!--
        The default permissions are <literal>0600</literal>, meaning only the
        server owner can read or write the log files.  The other commonly
        useful setting is <literal>0640</literal>, allowing members of the owner's
        group to read the files.  Note however that to make use of such a
        setting, you'll need to alter <xref linkend="guc-log-directory"/> to
        store the files somewhere outside the cluster data directory.  In
        any case, it's unwise to make the log files world-readable, since
        they might contain sensitive data.
-->
デフォルトのパーミッションは<literal>0600</literal>で、意味するところはサーバの所有者のみログファイルの読み書きが可能です。
そのほか一般的に実用的な設定は<literal>0640</literal>で、所有者のグループはファイルを読み込めます。
しかし、これらの設定を活用するには<xref linkend="guc-log-directory"/>がクラスタデータディレクトリの外部のどこかにあるファイルを格納できるように変更する必要があります。
       </para>
       <para>
<!--
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
このパラメータは、<filename>postgresql.conf</filename>ファイルか、サーバのコマンドラインでのみ設定可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-rotation-age" xreflabel="log_rotation_age">
      <term><varname>log_rotation_age</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_rotation_age</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_rotation_age</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When <varname>logging_collector</varname> is enabled,
        this parameter determines the maximum amount of time to use an
        individual log file, after which a new log file will be created.
        If this value is specified without units, it is taken as minutes.
        The default is 24 hours.
        Set to zero to disable time-based creation of new log files.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
<varname>logging_collector</varname>が有効な場合、このパラメータは個々のログファイルの最大寿命を決定します。
ここで指定した時間経過すると、新しいログファイルが生成されます。
この値が単位なしで指定された場合は、分単位であるとみなします。
デフォルトは24時間です。
ゼロに設定することで、時間に基づいた新しいログファイルの生成は無効になります。
このパラメータは、<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-rotation-size" xreflabel="log_rotation_size">
      <term><varname>log_rotation_size</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_rotation_size</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_rotation_size</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When <varname>logging_collector</varname> is enabled,
        this parameter determines the maximum size of an individual log file.
        After this amount of data has been emitted into a log file,
        a new log file will be created.
        If this value is specified without units, it is taken as kilobytes.
        The default is 10 megabytes.
        Set to zero to disable size-based creation of new log files.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
<varname>logging_collector</varname>が有効な場合、このパラメータは個々のログファイルの最大容量を決定します。
ここで指定したデータ量がログファイルに出力された後、新しいログファイルが生成されます。
この値が単位なしで指定された場合は、キロバイト単位であるとみなします。
デフォルトは10メガバイトです。
ゼロに設定することで、サイズに基づいた新しいログファイルの生成は無効になります。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-truncate-on-rotation" xreflabel="log_truncate_on_rotation">
      <term><varname>log_truncate_on_rotation</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_truncate_on_rotation</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_truncate_on_rotation</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When <varname>logging_collector</varname> is enabled,
        this parameter will cause <productname>PostgreSQL</productname> to truncate (overwrite),
        rather than append to, any existing log file of the same name.
        However, truncation will occur only when a new file is being opened
        due to time-based rotation, not during server startup or size-based
        rotation.  When off, pre-existing files will be appended to in
        all cases.  For example, using this setting in combination with
        a <varname>log_filename</varname> like <literal>postgresql-%H.log</literal>
        would result in generating twenty-four hourly log files and then
        cyclically overwriting them.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
<varname>logging_collector</varname>が有効な場合、このパラメータにより、<productname>PostgreSQL</productname>は既存の同名のファイルに追加するのではなく、そのファイルを切り詰める（上書きする）ようになります。
しかし、切り詰めは時間を基にしたローテーションのために新規にファイルが開かれた時にのみ発生し、サーバ起動時やサイズを基にしたローテーションでは発生しません。
偽の場合、全ての場合において既存のファイルは追記されます。
例えば、この設定を<literal>postgresql-%H.log</literal>のような<varname>log_filename</varname>と組み合わせて使用すると、24個の時別のログファイルが生成され、それらは周期的に上書きされることになります。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインで設定されます。
       </para>
       <para>
<!--
        Example:  To keep 7 days of logs, one log file per day named
        <literal>server_log.Mon</literal>, <literal>server_log.Tue</literal>,
        etc., and automatically overwrite last week's log with this week's log,
        set <varname>log_filename</varname> to <literal>server_log.%a</literal>,
        <varname>log_truncate_on_rotation</varname> to <literal>on</literal>, and
        <varname>log_rotation_age</varname> to <literal>1440</literal>.
-->
《マッチ度[87.864078]》例：7日間のログを保存し、毎日のログを <literal>server_log.Mon</literal>、<literal>server_log.Tue</literal>、等とし、そして自動的に前週のログを今週のログで上書きするには以下のように設定します。
<varname>log_filename</varname> を <literal>server_log.%a</literal>とし、<varname>log_truncate_on_rotation</varname> を <literal>on</literal>にし、そして<varname>log_rotation_age</varname> を <literal>1440</literal>に設定します。
       </para>
       <para>
<!--
        Example: To keep 24 hours of logs, one log file per hour, but
        also rotate sooner if the log file size exceeds 1GB, set
        <varname>log_filename</varname> to <literal>server_log.%H%M</literal>,
        <varname>log_truncate_on_rotation</varname> to <literal>on</literal>,
        <varname>log_rotation_age</varname> to <literal>60</literal>, and
        <varname>log_rotation_size</varname> to <literal>1000000</literal>.
        Including <literal>%M</literal> in <varname>log_filename</varname> allows
        any size-driven rotations that might occur to select a file name
        different from the hour's initial file name.
-->
例：24時間のログを保持、1時間おきに1つのログファイルを作成、ただし、ログファイルのサイズが1ギガバイトを超えた場合それより早く切り替えさせるには、<varname>log_filename</varname>を<literal>server_log.%H%M</literal>にし、<varname>log_truncate_on_rotation</varname>を<literal>on</literal>にし、<varname>log_rotation_age</varname>を<literal>60</literal>にし、そして<varname>log_rotation_size</varname>を<literal>1000000</literal>に設定します。
<varname>log_filename</varname>に<literal>%M</literal>を含めると、サイズを元にしたローテーションが時間毎の始めのファイル名とは異なる名前のファイルを選択するようにできます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-syslog-facility" xreflabel="syslog_facility">
      <term><varname>syslog_facility</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>syslog_facility</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>syslog_facility</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When logging to <application>syslog</application> is enabled, this parameter
        determines the <application>syslog</application>
        <quote>facility</quote> to be used.  You can choose
        from <literal>LOCAL0</literal>, <literal>LOCAL1</literal>,
        <literal>LOCAL2</literal>, <literal>LOCAL3</literal>, <literal>LOCAL4</literal>,
        <literal>LOCAL5</literal>, <literal>LOCAL6</literal>, <literal>LOCAL7</literal>;
        the default is <literal>LOCAL0</literal>. See also the
        documentation of your system's
        <application>syslog</application> daemon.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
<application>syslog</application>へのログ取得が有効な場合、このパラメータは<application>syslog</application>の<quote>facility</quote>が使われるように確定します。
<literal>LOCAL0</literal>、<literal>LOCAL1</literal>、<literal>LOCAL2</literal>、<literal>LOCAL3</literal>、<literal>LOCAL4</literal>、<literal>LOCAL5</literal>、<literal>LOCAL6</literal>、<literal>LOCAL7</literal>の中から選んでください。
デフォルトは<literal>LOCAL0</literal>です。
使用しているシステムの<application>syslog</application>デーモンの文書を同時に参照してください。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-syslog-ident" xreflabel="syslog_ident">
      <term><varname>syslog_ident</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>syslog_ident</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>syslog_ident</varname>設定パラメータ</primary>
      </indexterm>
      </term>
       <listitem>
        <para>
<!--
         When logging to <application>syslog</application> is enabled, this parameter
         determines the program name used to identify
         <productname>PostgreSQL</productname> messages in
         <application>syslog</application> logs. The default is
         <literal>postgres</literal>.
         This parameter can only be set in the <filename>postgresql.conf</filename>
         file or on the server command line.
-->
<application>syslog</application>にログ取得が有効な場合、このパラメータは<application>syslog</application>ログ内の<productname>PostgreSQL</productname>メッセージを特定するのに使用するプログラム名を確定します。デフォルトは<literal>postgres</literal>です。
このパラメータは、<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="guc-syslog-sequence-numbers" xreflabel="syslog_sequence_numbers">
       <term><varname>syslog_sequence_numbers</varname> (<type>boolean</type>)
        <indexterm>
         <primary><varname>syslog_sequence_numbers</varname> configuration parameter</primary>
        </indexterm>
        <indexterm>
         <primary><varname>syslog_sequence_numbers</varname>設定パラメータ</primary>
        </indexterm>
       </term>

       <listitem>
        <para>
<!--
         When logging to <application>syslog</application> and this is on (the
         default), then each message will be prefixed by an increasing
         sequence number (such as <literal>[2]</literal>).  This circumvents
         the <quote>&#45;&#45;- last message repeated N times &#45;&#45;-</quote> suppression
         that many syslog implementations perform by default.  In more modern
         syslog implementations, repeated message suppression can be configured
         (for example, <literal>$RepeatedMsgReduction</literal>
         in <productname>rsyslog</productname>), so this might not be
         necessary.  Also, you could turn this off if you actually want to
         suppress repeated messages.
-->
<application>syslog</application>にログを出力している場合で、これがオン（デフォルト）であると、各メッセージには（<literal>[2]</literal>のような）増加する順序数が頭に追加されます。
これにより、多くのsyslogの実装がデフォルトで行う<quote>--- last message repeated N times ---</quote>による出力の抑止が回避されます。
より近代的なsyslogの実装では、繰り返されるメッセージの抑止は設定変更できるので（たとえば、<productname>rsyslog</productname>)における<literal>$RepeatedMsgReduction</literal>）、この機能は必要ないかもしれません。
繰り返されるメッセージを抑止したい場合には、これをオフにできます。
        </para>

        <para>
<!--
         This parameter can only be set in the <filename>postgresql.conf</filename>
         file or on the server command line.
-->
このパラメータは、<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
        </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-syslog-split-messages" xreflabel="syslog_split_messages">
      <term><varname>syslog_split_messages</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>syslog_split_messages</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>syslog_split_messages</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When logging to <application>syslog</application> is enabled, this parameter
        determines how messages are delivered to syslog.  When on (the
        default), messages are split by lines, and long lines are split so
        that they will fit into 1024 bytes, which is a typical size limit for
        traditional syslog implementations.  When off, PostgreSQL server log
        messages are delivered to the syslog service as is, and it is up to
        the syslog service to cope with the potentially bulky messages.
-->
<application>syslog</application>へのログ出力が有効な場合、このパラメータはメッセージがどのようにsyslogに送られるかを規定します。
オンなら（デフォルト）、メッセージは行に分割され、長い行は、伝統的なsyslog実装のサイズ上限である1024バイト以内に分割されます。
オフならば、PostgreSQLサーバログメッセージは、そのままsyslogサービスに送られます。
大きなサイズになるかもしれないメッセージにどう対応するかは、syslogサービス次第となります。
       </para>

       <para>
<!--
        If syslog is ultimately logging to a text file, then the effect will
        be the same either way, and it is best to leave the setting on, since
        most syslog implementations either cannot handle large messages or
        would need to be specially configured to handle them.  But if syslog
        is ultimately writing into some other medium, it might be necessary or
        more useful to keep messages logically together.
-->
もしsyslogが最終的にテキストファイルにログを出力するのであれば、どちらに設定しても効果は同じです。
設定値をオンにしておくのが最善です。
多くのsyslogの実装では、長いメッセージを扱えないか、長いメッセージを扱うための特別な設定が必要だからです。
しかし、syslogが最終的に他のメディアに書き込むのであれば、メッセージを論理的に一緒にしておくことが必要か、もしくは有用です。
       </para>

       <para>
<!--
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
このパラメータは、<filename>postgresql.conf</filename>ファイルか、サーバのコマンドラインでのみ設定可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-event-source" xreflabel="event_source">
      <term><varname>event_source</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>event_source</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>event_source</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When logging to <application>event log</application> is enabled, this parameter
        determines the program name used to identify
        <productname>PostgreSQL</productname> messages in
        the log. The default is <literal>PostgreSQL</literal>.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
<application>event log</application>へのログ取得が有効になっていると、このパラメータはログ中の<productname>PostgreSQL</productname>メッセージを特定するのに使用されるプログラム名を決定します。デフォルトは<literal>PostgreSQL</literal>です。このパラメータは、<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
       </para>
      </listitem>
     </varlistentry>

      </variablelist>
    </sect2>
     <sect2 id="runtime-config-logging-when">
<!--
     <title>When to Log</title>
-->
     <title>いつログを取得するか</title>

     <variablelist>

     <varlistentry id="guc-log-min-messages" xreflabel="log_min_messages">
      <term><varname>log_min_messages</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>log_min_messages</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_min_messages</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls which <link linkend="runtime-config-severity-levels">message
        levels</link> are written to the server log.
        Valid values are <literal>DEBUG5</literal>, <literal>DEBUG4</literal>,
        <literal>DEBUG3</literal>, <literal>DEBUG2</literal>, <literal>DEBUG1</literal>,
        <literal>INFO</literal>, <literal>NOTICE</literal>, <literal>WARNING</literal>,
        <literal>ERROR</literal>, <literal>LOG</literal>, <literal>FATAL</literal>, and
        <literal>PANIC</literal>.  Each level includes all the levels that
        follow it.  The later the level, the fewer messages are sent
        to the log.  The default is <literal>WARNING</literal>.  Note that
        <literal>LOG</literal> has a different rank here than in
        <xref linkend="guc-client-min-messages"/>.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[80.413625]》どの<link linkend="runtime-config-severity-levels">メッセージレベル</link>をサーバログに書き込むかを管理します。
有効な値は<literal>DEBUG5</literal>、<literal>DEBUG4</literal>、<literal>DEBUG3</literal>、<literal>DEBUG2</literal>、<literal>DEBUG1</literal>、<literal>INFO</literal>、<literal>NOTICE</literal>、<literal>WARNING</literal>、<literal>ERROR</literal>、<literal>LOG</literal>、<literal>FATAL</literal>、および<literal>PANIC</literal>です。
それぞれの階層はその下の全ての階層を含みます。階層を低くする程、より少ないメッセージがログに送られます。
デフォルトは<literal>WARNING</literal>です。
ここでの<literal>LOG</literal>の優先順位が<xref linkend="guc-client-min-messages"/>の場合と異なることに注意してください。
スーパーユーザのみこの設定を変更できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-min-error-statement" xreflabel="log_min_error_statement">
      <term><varname>log_min_error_statement</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>log_min_error_statement</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_min_error_statement</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls which SQL statements that cause an error
        condition are recorded in the server log.  The current
        SQL statement is included in the log entry for any message of
        the specified
        <link linkend="runtime-config-severity-levels">severity</link>
        or higher.
        Valid values are <literal>DEBUG5</literal>,
        <literal>DEBUG4</literal>, <literal>DEBUG3</literal>,
        <literal>DEBUG2</literal>, <literal>DEBUG1</literal>,
        <literal>INFO</literal>, <literal>NOTICE</literal>,
        <literal>WARNING</literal>, <literal>ERROR</literal>,
        <literal>LOG</literal>,
        <literal>FATAL</literal>, and <literal>PANIC</literal>.
        The default is <literal>ERROR</literal>, which means statements
        causing errors, log messages, fatal errors, or panics will be logged.
        To effectively turn off logging of failing statements,
        set this parameter to <literal>PANIC</literal>.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[77.920686]》エラー条件の原因となったどのSQL文をサーバログに記録するかを制御します。
設定した<link linkend="runtime-config-severity-levels">レベル</link>以上のメッセージについては現在のSQL文がログに記録されます。
有効な値は、<literal>DEBUG5</literal>、<literal>DEBUG4</literal>、<literal>DEBUG3</literal>、<literal>DEBUG2</literal>、<literal>DEBUG1</literal>、<literal>INFO</literal>、<literal>NOTICE</literal>、<literal>WARNING</literal>、<literal>ERROR</literal>、<literal>LOG</literal>、<literal>FATAL</literal>、<literal>PANIC</literal>です。
デフォルトは<literal>ERROR</literal>です。
エラー、ログメッセージ、致命的エラー、パニックを引き起こした文がログに記録されることを意味します。
失敗した文の記録を実質的に無効にするには、このパラメータを<literal>PANIC</literal>に設定してください。
スーパーユーザのみがこのオプションを変更することができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-min-duration-statement" xreflabel="log_min_duration_statement">
      <term><varname>log_min_duration_statement</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_min_duration_statement</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_min_duration_statement</varname>設定パラメータ</primary>
      </indexterm>
      </term>
       <listitem>
        <para>
<!--
         Causes the duration of each completed statement to be logged
         if the statement ran for at least the specified amount of time.
         For example, if you set it to <literal>250ms</literal>
         then all SQL statements that run 250ms or longer will be
         logged.  Enabling this parameter can be helpful in tracking down
         unoptimized queries in your applications.
         If this value is specified without units, it is taken as milliseconds.
         Setting this to zero prints all statement durations.
         <literal>-1</literal> (the default) disables logging statement
         durations.
         Only superusers and users with the appropriate <literal>SET</literal>
         privilege can change this setting.
-->
《マッチ度[75.968992]》文の実行に少なくとも指定した時間かかった場合、それぞれの文の実行に要した時間をログに記録します。
例えば、<literal>250ms</literal>と設定した場合、250msもしくはそれ以上長くかかった全てのSQL文がログとして残ります。
このパラメータを有効にすることにより、アプリケーションで最適化されていない問い合わせを追跡するのが便利になります。
この値が単位なしで指定された場合は、ミリ秒単位であるとみなします。
0に設定すれば、すべての文の実行時間が出力されます。
<literal>-1</literal>（デフォルト）は、文実行時間の記録を無効にします。
スーパーユーザのみこの設定を変更できます。
        </para>

        <para>
<!--
         This overrides <xref linkend="guc-log-min-duration-sample"/>,
         meaning that queries with duration exceeding this setting are not
         subject to sampling and are always logged.
-->
これは<xref linkend="guc-log-min-duration-sample"/>を上書きします。つまり、問い合わせがこの設定を越えると、実行時間のサンプリングの対象にならず、常に記録されます。
        </para>

        <para>
<!--
         For clients using extended query protocol, durations of the Parse,
         Bind, and Execute steps are logged independently.
-->
拡張問い合わせプロトコルを使用するクライアントでは、Parse、Bind、Executeそれぞれの段階で要した時間が独立して記録されます。
        </para>

       <note>
        <para>
<!--
         When using this option together with
         <xref linkend="guc-log-statement"/>,
         the text of statements that are logged because of
         <varname>log_statement</varname> will not be repeated in the
         duration log message.
         If you are not using <application>syslog</application>, it is recommended
         that you log the PID or session ID using
         <xref linkend="guc-log-line-prefix"/>
         so that you can link the statement message to the later
         duration message using the process ID or session ID.
-->
このオプションと<xref linkend="guc-log-statement"/>を一緒に使用する時、<varname>log_statement</varname>によってログされるテキスト文は、実行時間のログには重複されません。
<application>syslog</application>を使用していなければ、プロセスIDとセッションIDを使用して、文メッセージと後の実行時間メッセージを関連付けできるように、<xref linkend="guc-log-line-prefix"/>を使用してPIDまたはセッションIDをログに記録することを勧めます。
        </para>
       </note>
       </listitem>
      </varlistentry>

     <varlistentry id="guc-log-min-duration-sample" xreflabel="log_min_duration_sample">
      <term><varname>log_min_duration_sample</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_min_duration_sample</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_min_duration_sample</varname>設定パラメータ</primary>
      </indexterm>
      </term>
       <listitem>
        <para>
<!--
         Allows sampling the duration of completed statements that ran for
         at least the specified amount of time.  This produces the same
         kind of log entries as
         <xref linkend="guc-log-min-duration-statement"/>, but only for a
         subset of the executed statements, with sample rate controlled by
         <xref linkend="guc-log-statement-sample-rate"/>.
         For example, if you set it to <literal>100ms</literal> then all
         SQL statements that run 100ms or longer will be considered for
         sampling.  Enabling this parameter can be helpful when the
         traffic is too high to log all queries.
         If this value is specified without units, it is taken as milliseconds.
         Setting this to zero samples all statement durations.
         <literal>-1</literal> (the default) disables sampling statement
         durations.
         Only superusers and users with the appropriate <literal>SET</literal>
         privilege can change this setting.
-->
《マッチ度[77.674419]》指定した時間以上で実行完了した文の実行時間のサンプルを許可します。
これにより<xref linkend="guc-log-min-duration-statement"/>と同様ですが、<xref linkend="guc-log-statement-sample-rate"/>で制御するレートでサンプルされた実行時間のサブセットのログエントリを生成します。
たとえば、<literal>100ms</literal>に設定すると、100ミリ秒以上かかったSQL文がサンプルの対象となります。
このパラメータを有効にすることで、トラフィックが多すぎてすべての問い合わせをログできない状況で助けになることもあります。
この値を単位無しで指定すると、ミリ秒と見なされます。
これをゼロに設定すると、すべての文の実行時間がサンプルされます。
<literal>-1</literal>（デフォルトです）とすると、文の実行時間のサンプリングが無効になります。
スーパーユーザのみがこの設定を変更できます。
        </para>

        <para>
<!--
         This setting has lower priority
         than <varname>log_min_duration_statement</varname>, meaning that
         statements with durations
         exceeding <varname>log_min_duration_statement</varname> are not
         subject to sampling and are always logged.
-->
この設定は<varname>log_min_duration_statement</varname>よりも優先度が低いです。つまり、<varname>log_min_duration_statement</varname>を超えた実行時間の文はサンプリングの対象となり、常に記録されます。
        </para>

        <para>
<!--
         Other notes for <varname>log_min_duration_statement</varname>
         apply also to this setting.
-->
<varname>log_min_duration_statement</varname>のその他の注意事項もこの設定に適用されます。
        </para>
       </listitem>
     </varlistentry>

     <varlistentry id="guc-log-statement-sample-rate" xreflabel="log_statement_sample_rate">
      <term><varname>log_statement_sample_rate</varname> (<type>floating point</type>)
      <indexterm>
       <primary><varname>log_statement_sample_rate</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_statement_sample_rate</varname>設定パラメータ</primary>
      </indexterm>
      </term>
       <listitem>
        <para>
<!--
         Determines the fraction of statements with duration exceeding
         <xref linkend="guc-log-min-duration-sample"/> that will be logged.
         Sampling is stochastic, for example <literal>0.5</literal> means
         there is statistically one chance in two that any given statement
         will be logged.
         The default is <literal>1.0</literal>, meaning to log all sampled
         statements.
         Setting this to zero disables sampled statement-duration logging,
         the same as setting
         <varname>log_min_duration_sample</varname> to
         <literal>-1</literal>.
         Only superusers and users with the appropriate <literal>SET</literal>
         privilege can change this setting.
-->
《マッチ度[72.593801]》<xref linkend="guc-log-min-duration-sample"/>を越え、記録対象となる文の割合を決定します。
サンプリングは確率論的で、たとえば<literal>0.5</literal>は2つの文のうちひとつが統計的に記録対象になることを意味します。
デフォルトは<literal>1.0</literal>で、サンプルされた文はすべて記録対象となります。
ゼロに設定すると、<varname>log_min_duration_sample</varname>を<literal>-1</literal>にしたのと同じで、文の実行時間のサンプルを記録しません。
スーパーユーザのみがこの設定を変更できます。
        </para>
       </listitem>
     </varlistentry>

     <varlistentry id="guc-log-transaction-sample-rate" xreflabel="log_transaction_sample_rate">
      <term><varname>log_transaction_sample_rate</varname> (<type>floating point</type>)
      <indexterm>
       <primary><varname>log_transaction_sample_rate</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_transaction_sample_rate</varname>設定パラメータ</primary>
      </indexterm>
      </term>
       <listitem>
        <para>
<!--
         Sets the fraction of transactions whose statements are all logged,
         in addition to statements logged for other reasons.  It applies to
         each new transaction regardless of its statements' durations.
         Sampling is stochastic, for example <literal>0.1</literal> means
         there is statistically one chance in ten that any given transaction
         will be logged.
         <varname>log_transaction_sample_rate</varname> can be helpful to
         construct a sample of transactions.
         The default is <literal>0</literal>, meaning not to log
         statements from any additional transactions.  Setting this
         to <literal>1</literal> logs all statements of all transactions.
         Only superusers and users with the appropriate <literal>SET</literal>
         privilege can change this setting.
-->
《マッチ度[76.648352]》他の理由に加え、トランザクションの文のうち、ログの対象となる割合を設定します。
文の実行時間にかかわらず、新しいトランザクションに適用されます。
サンプリングは確率論的で、たとえば<literal>0.1</literal>は10のトランザクションのうちひとつが統計的に記録対象になることを意味します。
デフォルトは<literal>0</literal>で、これは追加のトランザクションのログを取らないことを意味します。
<literal>1</literal>に設定すると、すべてのトランザクションのすべての文のログを取ります。
<varname>log_transaction_sample_rate</varname>は、トランザクションのサンプルを調査するのに役立ちます。
スーパーユーザのみこの設定を変更できます。
        </para>
       <note>
        <para>
<!--
         Like all statement-logging options, this option can add significant
         overhead.
-->
他の文のログを取るオプション同様、このオプションも大きなオーバヘッドを与える可能性があります。
        </para>
       </note>
       </listitem>
     </varlistentry>

     <varlistentry id="guc-log-startup-progress-interval" xreflabel="log_startup_progress_interval">
      <term><varname>log_startup_progress_interval</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_startup_progress_interval</varname> configuration parameter</primary>
      </indexterm>
      </term>
       <listitem>
        <para>
         Sets the amount of time after which the startup process will log
         a message about a long-running operation that is still in progress,
         as well as the interval between further progress messages for that
         operation. The default is 10 seconds. A setting of <literal>0</literal>
         disables the feature.  If this value is specified without units,
         it is taken as milliseconds.  This setting is applied separately to
         each operation.
<!--
         This parameter can only be set in the <filename>postgresql.conf</filename>
         file or on the server command line.
-->
このパラメータは、<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
        </para>

        <para>
<!--
         For example, if syncing the data directory takes 25 seconds and
         thereafter resetting unlogged relations takes 8 seconds, and if this
         setting has the default value of 10 seconds, then a messages will be
         logged for syncing the data directory after it has been in progress
         for 10 seconds and again after it has been in progress for 20 seconds,
         but nothing will be logged for resetting unlogged operations.
-->
《機械翻訳》たとえば、データディレクトリの同期に25秒かかり、その後、記録されていないリレーションのリセットに8秒かかります。
この設定がデフォルト値の10秒である場合、データディレクトリを同期するためのメッセージは、10秒間処理された後と20秒間処理された後に記録されますが、記録されていない操作のリセットに関しては何も記録されません。
        </para>
       </listitem>
     </varlistentry>

     </variablelist>

    <para>
<!--
     <xref linkend="runtime-config-severity-levels"/> explains the message
     severity levels used by <productname>PostgreSQL</productname>.  If logging output
     is sent to <systemitem>syslog</systemitem> or Windows'
     <systemitem>eventlog</systemitem>, the severity levels are translated
     as shown in the table.
-->
<xref linkend="runtime-config-severity-levels"/>で、<productname>PostgreSQL</productname>で使用されるメッセージ深刻度レベルを説明します。
ログ出力が<systemitem>syslog</systemitem>またはWindowsの<systemitem>eventlog</systemitem>に送られる場合、この深刻度レベルは表で示すように変換されます。
    </para>

    <table id="runtime-config-severity-levels">
<!--
     <title>Message Severity Levels</title>
-->
     <title>メッセージ深刻度レベル</title>
     <tgroup cols="4">
      <colspec colname="col1" colwidth="1*"/>
      <colspec colname="col2" colwidth="2*"/>
      <colspec colname="col3" colwidth="1*"/>
      <colspec colname="col4" colwidth="1*"/>
      <thead>
       <row>
<!--
        <entry>Severity</entry>
        <entry>Usage</entry>
        <entry><systemitem>syslog</systemitem></entry>
        <entry><systemitem>eventlog</systemitem></entry>
-->
        <entry>深刻度</entry>
        <entry>使用方法</entry>
        <entry><systemitem>syslog</systemitem></entry>
        <entry><systemitem>eventlog</systemitem></entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><literal>DEBUG1 .. DEBUG5</literal></entry>
<!--
        <entry>Provides successively-more-detailed information for use by
         developers.</entry>
-->
        <entry>開発者が使用する連続的かつより詳細な情報を提供します。</entry>
        <entry><literal>DEBUG</literal></entry>
        <entry><literal>INFORMATION</literal></entry>
       </row>

       <row>
        <entry><literal>INFO</literal></entry>
<!--
        <entry>Provides information implicitly requested by the user,
         e.g., output from <command>VACUUM VERBOSE</command>.</entry>
-->
        <entry><command>VACUUM VERBOSE</command>の出力などの、ユーザによって暗黙的に要求された情報を提供します。</entry>
        <entry><literal>INFO</literal></entry>
        <entry><literal>INFORMATION</literal></entry>
       </row>

       <row>
        <entry><literal>NOTICE</literal></entry>
<!--
        <entry>Provides information that might be helpful to users, e.g.,
         notice of truncation of long identifiers.</entry>
-->
        <entry>長い識別子の切り詰めに関する注意など、ユーザの補助になる情報を提供します。</entry>
        <entry><literal>NOTICE</literal></entry>
        <entry><literal>INFORMATION</literal></entry>
       </row>

       <row>
        <entry><literal>WARNING</literal></entry>
<!--
        <entry>Provides warnings of likely problems, e.g., <command>COMMIT</command>
         outside a transaction block.</entry>
-->
        <entry>トランザクションブロック外での<command>COMMIT</command>の様な、ユーザへの警告を提供します。</entry>
        <entry><literal>NOTICE</literal></entry>
        <entry><literal>WARNING</literal></entry>
       </row>

       <row>
        <entry><literal>ERROR</literal></entry>
<!--
        <entry>Reports an error that caused the current command to
         abort.</entry>
-->
        <entry>現在のコマンドを中断させる原因となったエラーを報告します。</entry>
        <entry><literal>WARNING</literal></entry>
        <entry><literal>ERROR</literal></entry>
       </row>

       <row>
        <entry><literal>LOG</literal></entry>
<!--
        <entry>Reports information of interest to administrators, e.g.,
         checkpoint activity.</entry>
-->
        <entry>チェックポイントの活動の様な、管理者に関心のある情報を報告します。</entry>
        <entry><literal>INFO</literal></entry>
        <entry><literal>INFORMATION</literal></entry>
       </row>

       <row>
        <entry><literal>FATAL</literal></entry>
<!--
        <entry>Reports an error that caused the current session to
         abort.</entry>
-->
        <entry>現在のセッションを中断させる原因となったエラーを報告します。</entry>
        <entry><literal>ERR</literal></entry>
        <entry><literal>ERROR</literal></entry>
       </row>

       <row>
        <entry><literal>PANIC</literal></entry>
<!--
        <entry>Reports an error that caused all database sessions to abort.</entry>
-->
        <entry>全てのデータベースセッションを中断させる原因となったエラーを報告します。</entry>
        <entry><literal>CRIT</literal></entry>
        <entry><literal>ERROR</literal></entry>
       </row>
      </tbody>
     </tgroup>
    </table>

    </sect2>
     <sect2 id="runtime-config-logging-what">
<!--
     <title>What to Log</title>
-->
     <title>何をログに</title>

     <note>
      <para>
<!--
       What you choose to log can have security implications;  see
       <xref linkend="logfile-maintenance"/>.
-->
《機械翻訳》ログに記録する内容は、セキュリティに影響を与える可能性があります。
<xref linkend="logfile-maintenance"/>を参照してください。
      </para>
     </note>

     <variablelist>

     <varlistentry id="guc-application-name" xreflabel="application_name">
      <term><varname>application_name</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>application_name</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>application_name</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        The <varname>application_name</varname> can be any string of less than
        <symbol>NAMEDATALEN</symbol> characters (64 characters in a standard build).
        It is typically set by an application upon connection to the server.
        The name will be displayed in the <structname>pg_stat_activity</structname> view
        and included in CSV log entries.  It can also be included in regular
        log entries via the <xref linkend="guc-log-line-prefix"/> parameter.
        Only printable ASCII characters may be used in the
        <varname>application_name</varname> value. Other characters will be
        replaced with question marks (<literal>?</literal>).
-->
<varname>application_name</varname>は<symbol>NAMEDATALEN</symbol>（標準構築では64）文字以下の任意の文字列を指定できます。
通常はサーバへの接続時にアプリケーションによって設定されます。
この名前は <structname>pg_stat_activity</structname>ビューに表示され、CSVログに含まれます。
また<xref linkend="guc-log-line-prefix"/>パラメータにより通常のログ項目に含めることができます。
<varname>application_name</varname>には表示可能なASCII文字のみ使用することができ、それ以外の文字は疑問符（<literal>?</literal>）に置換されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><varname>debug_print_parse</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>debug_print_parse</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>debug_print_parse</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <term><varname>debug_print_rewritten</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>debug_print_rewritten</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>debug_print_rewritten</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <term><varname>debug_print_plan</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>debug_print_plan</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>debug_print_plan</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        These parameters enable various debugging output to be emitted.
        When set, they print the resulting parse tree, the query rewriter
        output, or the execution plan for each executed query.
        These messages are emitted at <literal>LOG</literal> message level, so by
        default they will appear in the server log but will not be sent to the
        client.  You can change that by adjusting
        <xref linkend="guc-client-min-messages"/> and/or
        <xref linkend="guc-log-min-messages"/>.
        These parameters are off by default.
-->
これらのパラメータは生成される各種デバッグ出力を有効にします。
設定すると実行された問い合わせそれぞれに対し、最終的な解析ツリー、問い合わせリライタの出力、実行計画を出力します。
これらのメッセージは<literal>LOG</literal>メッセージレベルで出力されますので、デフォルトではサーバログに出力され、クライアントには渡されません。
<xref linkend="guc-client-min-messages"/>、<xref linkend="guc-log-min-messages"/>またはその両方を調整することで変更することができます。
デフォルトではこれらのパラメータは無効です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><varname>debug_pretty_print</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>debug_pretty_print</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>debug_pretty_print</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        When set, <varname>debug_pretty_print</varname> indents the messages
        produced by <varname>debug_print_parse</varname>,
        <varname>debug_print_rewritten</varname>, or
        <varname>debug_print_plan</varname>.  This results in more readable
        but much longer output than the <quote>compact</quote> format used when
        it is off.  It is on by default.
-->
設定された場合、<varname>debug_pretty_print</varname>は<varname>debug_print_parse</varname>、<varname>debug_print_rewritten</varname>、または<varname>debug_print_plan</varname>で生成されたメッセージを字下げします。
設定されない場合の<quote>コンパクト</quote>形式よりもより見やすく、しかしより長いものとなります。デフォルトは有効です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-autovacuum-min-duration" xreflabel="log_autovacuum_min_duration">
      <term><varname>log_autovacuum_min_duration</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_autovacuum_min_duration</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>log_autovacuum_min_duration</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Causes each action executed by autovacuum to be logged if it ran for at
        least the specified amount of time.  Setting this to zero logs
        all autovacuum actions. <literal>-1</literal> disables logging autovacuum
        actions. If this value is specified without units, it is taken as milliseconds.
        For example, if you set this to
        <literal>250ms</literal> then all automatic vacuums and analyzes that run
        250ms or longer will be logged.  In addition, when this parameter is
        set to any value other than <literal>-1</literal>, a message will be
        logged if an autovacuum action is skipped due to a conflicting lock or a
        concurrently dropped relation. The default is <literal>10min</literal>.
        Enabling this parameter can be helpful in tracking autovacuum activity.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line; but the setting can be overridden for
        individual tables by changing table storage parameters.
-->
《マッチ度[81.407563]》少なくとも指定時間実行した場合、autovacuumで実行される各活動がログに残るようになります。
これをゼロに設定すると、すべてのautovacuumの活動がログに残ります。
<literal>-1</literal>（デフォルト）はautovacuum活動のログを無効にします。
この値が単位なしで指定された場合は、ミリ秒単位であるとみなします。
例えば、これを<literal>250ms</literal>に設定すると、250ms以上かかって実行されたautovacuumや解析はすべてログに残ります。
さらに、<literal>-1</literal>以外の値にこのパラメータが設定された場合、競合するロックや並行して削除されたリレーションによりautovacuum動作が省略されるとメッセージはログに記録されます。
このパラメータを有効にすることは、autovacuum活動の追跡に役に立ちます。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
ただし、この設定はテーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きすることができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-checkpoints" xreflabel="log_checkpoints">
      <term><varname>log_checkpoints</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_checkpoints</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_checkpoints</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Causes checkpoints and restartpoints to be logged in the server log.
        Some statistics are included in the log messages, including the number
        of buffers written and the time spent writing them.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line. The default is on.
-->
《マッチ度[86.915888]》チェックポイントおよびリスタートポイントをサーバログに記録するようにします。
書き出されたバッファ数や書き出しに要した時間など、いくつかの統計情報がこのログメッセージに含まれます。
このパラメータは<filename>postgresql.conf</filename>ファイルまたはサーバのコマンドラインでのみ設定可能です。
デフォルトはoffです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-connections" xreflabel="log_connections">
      <term><varname>log_connections</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_connections</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_connections</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Causes each attempted connection to the server to be logged,
        as well as successful completion of both client authentication (if
        necessary) and authorization.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this parameter at session start,
        and it cannot be changed at all within a session.
        The default is <literal>off</literal>.
-->
《マッチ度[70.540541]》サーバへの接続試行とともに、クライアント認証の成功終了と（必要ならば）承認をログに残します。
スーパーユーザだけがセッション開始時にこのパラメータを変更でき、セッションが開始された後は変更できません。
デフォルトは<literal>off</literal>です。
       </para>

       <note>
        <para>
<!--
         Some client programs, like <application>psql</application>, attempt
         to connect twice while determining if a password is required, so
         duplicate <quote>connection received</quote> messages do not
         necessarily indicate a problem.
-->
<application>psql</application>などクライアントプログラムは、パスワードが要求されているかどうか確認するまで2回接続を試みるので、二重の<quote>connection received</quote>メッセージは必ずしも問題を示すものではありません。
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-disconnections" xreflabel="log_disconnections">
      <term><varname>log_disconnections</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_disconnections</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_disconnections</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Causes session terminations to be logged.  The log output
        provides information similar to <varname>log_connections</varname>,
        plus the duration of the session.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this parameter at session start,
        and it cannot be changed at all within a session.
        The default is <literal>off</literal>.
-->
《マッチ度[70.350404]》セッションの終了をログします。
ログ出力の情報は<varname>log_connections</varname>と同様で、更にセッションの経過時間が追加されます。
スーパーユーザだけがセッション開始時にこのパラメータを変更でき、セッションが開始された後は変更できません。
デフォルトは<literal>off</literal>です。
       </para>
      </listitem>
     </varlistentry>


     <varlistentry id="guc-log-duration" xreflabel="log_duration">
      <term><varname>log_duration</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_duration</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_duration</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Causes the duration of every completed statement to be logged.
        The default is <literal>off</literal>.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[58.737864]》すべての完了した文について、その経過時間をログするようにします。
デフォルトは<literal>off</literal>です。
スーパーユーザのみがこの設定を変更することができます。
       </para>

       <para>
<!--
        For clients using extended query protocol, durations of the Parse,
        Bind, and Execute steps are logged independently.
-->
拡張問い合わせプロトコルを使用するクライアントでは、Parse、Bind、Executeそれぞれの段階で要した時間が独立して記録されます。
       </para>

       <note>
        <para>
<!--
         The difference between enabling <varname>log_duration</varname> and setting
         <xref linkend="guc-log-min-duration-statement"/> to zero is that
         exceeding <varname>log_min_duration_statement</varname> forces the text of
         the query to be logged, but this option doesn't.  Thus, if
         <varname>log_duration</varname> is <literal>on</literal> and
         <varname>log_min_duration_statement</varname> has a positive value, all
         durations are logged but the query text is included only for
         statements exceeding the threshold.  This behavior can be useful for
         gathering statistics in high-load installations.
-->
<varname>log_duration</varname>を有効にするのと<xref linkend="guc-log-min-duration-statement"/>を0に設定する方法との違いは、<varname>log_min_duration_statement</varname>を超えた場合、テキスト版の問い合わせが強制的に出力されるのに対して、このオプションでは出力されないという点です。
したがって、<varname>log_duration</varname>が<literal>on</literal>、かつ、<varname>log_min_duration_statement</varname>が正の値を持つ場合、すべての経過時間がログに記録されますが、閾値を超えた文のみがテキスト版の問い合わせが含められるようになります。
この動作は、高負荷なインストレーションで統計情報を収集する際に有用です。
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-error-verbosity" xreflabel="log_error_verbosity">
      <term><varname>log_error_verbosity</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>log_error_verbosity</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_error_verbosity</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls the amount of detail written in the server log for each
        message that is logged.  Valid values are <literal>TERSE</literal>,
        <literal>DEFAULT</literal>, and <literal>VERBOSE</literal>, each adding more
        fields to displayed messages.  <literal>TERSE</literal> excludes
        the logging of <literal>DETAIL</literal>, <literal>HINT</literal>,
        <literal>QUERY</literal>, and <literal>CONTEXT</literal> error information.
        <literal>VERBOSE</literal> output includes the <symbol>SQLSTATE</symbol> error
        code (see also <xref linkend="errcodes-appendix"/>) and the source code file name, function name,
        and line number that generated the error.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[80.649526]》ログ取得されるそれぞれのメッセージに対し、サーバログに書き込まれる詳細の量を制御します。
有効な値は、<literal>TERSE</literal>、<literal>DEFAULT</literal>、および<literal>VERBOSE</literal>で、それぞれは表示されるメッセージにより多くのフィールドを追加します。
<literal>TERSE</literal>は<literal>DETAIL</literal>、<literal>HINT</literal>、<literal>QUERY</literal>、および<literal>CONTEXT</literal>エラー情報を除外します。
<literal>VERBOSE</literal>出力は、<symbol>SQLSTATE</symbol>エラーコード（<xref linkend="errcodes-appendix"/>も参照）、および、ソースコードファイル名、関数名、そしてエラーを生成した行番号を含みます。
スーパーユーザのみこの設定を変更できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-hostname" xreflabel="log_hostname">
      <term><varname>log_hostname</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_hostname</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_hostname</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        By default, connection log messages only show the IP address of the
        connecting host. Turning this parameter on causes logging of the
        host name as well.  Note that depending on your host name resolution
        setup this might impose a non-negligible performance penalty.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
デフォルトでは、接続ログメッセージは接続元ホストのIPアドレスのみを表示します。
このパラメータを有効にすると、ホスト名もログに残るようになります。
ホスト名解決方法の設定に依存しますが、これが無視できないほどの性能劣化を起こす可能性があることに注意してください。
このパラメータは<filename>postgresql.conf</filename>ファイル内、またはサーバのコマンドラインのみで設定可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-line-prefix" xreflabel="log_line_prefix">
      <term><varname>log_line_prefix</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>log_line_prefix</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_line_prefix</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
         This is a <function>printf</function>-style string that is output at the
         beginning of each log line.
         <literal>%</literal> characters begin <quote>escape sequences</quote>
         that are replaced with status information as outlined below.
         Unrecognized escapes are ignored. Other
         characters are copied straight to the log line. Some escapes are
         only recognized by session processes, and will be treated as empty by
         background processes such as the main server process. Status
         information may be aligned either left or right by specifying a
         numeric literal after the % and before the option. A negative
         value will cause the status information to be padded on the
         right with spaces to give it a minimum width, whereas a positive
         value will pad on the left. Padding can be useful to aid human
         readability in log files.
-->
これは、各ログ行の先頭に出力する<function>printf</function>の書式文字列です。
<literal>%</literal>から始まる<quote>エスケープシーケンス</quote>は、後述の通りのステータス情報で置き換えられます。
この他のエスケープは無視されます。
他の文字はそのままログ行に出力されます。
エスケープの中には、セッションプロセスによってのみ認識可能なものがあり、これらはメインサーバプロセスなどのバックグラウンドプロセスでは空文字として扱われます。
状態情報は%の後かつオプションの前に数字を指定することにより、左寄せまた右寄せにすることができます。
数字が負ならば状態情報を右側に空白を詰めて最小限の幅にし、正の値は左に空白を詰めます。
ログファイルではパディングは人間の視認性を向上させるので有用です。
       </para>

       <para>
<!--
         This parameter can only be set in the <filename>postgresql.conf</filename>
         file or on the server command line. The default is
         <literal>'%m [%p] '</literal> which logs a time stamp and the process ID.
-->
このパラメータは、<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定することができます。
デフォルトは、タイムスタンプとプロセスIDをログ出力する<literal>'%m [%p] '</literal>です。
       </para>

         <informaltable>
          <tgroup cols="3">
           <thead>
            <row>
<!--
             <entry>Escape</entry>
             <entry>Effect</entry>
             <entry>Session only</entry>
-->
             <entry>エスケープ</entry>
             <entry>効果</entry>
             <entry>セッションのみ</entry>
             </row>
            </thead>
           <tbody>
            <row>
             <entry><literal>%a</literal></entry>
<!--
             <entry>Application name</entry>
             <entry>yes</entry>
-->
             <entry>アプリケーション名</entry>
             <entry>○</entry>
            </row>
            <row>
             <entry><literal>%u</literal></entry>
<!--
             <entry>User name</entry>
             <entry>yes</entry>
-->
             <entry>ユーザ名</entry>
             <entry>○</entry>
            </row>
            <row>
             <entry><literal>%d</literal></entry>
<!--
             <entry>Database name</entry>
             <entry>yes</entry>
-->
             <entry>データベース名</entry>
             <entry>○</entry>
            </row>
            <row>
             <entry><literal>%r</literal></entry>
<!--
             <entry>Remote host name or IP address, and remote port</entry>
             <entry>yes</entry>
-->
             <entry>遠隔ホスト名、またはIPアドレス、およびポート番号</entry>
             <entry>○</entry>
            </row>
            <row>
             <entry><literal>%h</literal></entry>
<!--
             <entry>Remote host name or IP address</entry>
             <entry>yes</entry>
-->
             <entry>遠隔ホスト名、またはIPアドレス</entry>
             <entry>○</entry>
            </row>
            <row>
             <entry><literal>%b</literal></entry>
<!--
             <entry>Backend type</entry>
             <entry>no</entry>
-->
             <entry>バックエンドタイプ</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%p</literal></entry>
<!--
             <entry>Process ID</entry>
             <entry>no</entry>
-->
             <entry>プロセス識別子</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%P</literal></entry>
<!--
             <entry>Process ID of the parallel group leader, if this process
              is a parallel query worker</entry>
             <entry>no</entry>
-->
             <entry>このプロセスがパラレルクエリワーカである場合に、パラレルグループリーダのプロセス識別子</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%t</literal></entry>
<!--
             <entry>Time stamp without milliseconds</entry>
             <entry>no</entry>
-->
             <entry>ミリ秒無しのタイムスタンプ</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%m</literal></entry>
<!--
             <entry>Time stamp with milliseconds</entry>
             <entry>no</entry>
-->
             <entry>ミリ秒付きタイムスタンプ</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%n</literal></entry>
<!--
             <entry>Time stamp with milliseconds (as a Unix epoch)</entry>
             <entry>no</entry>
-->
             <entry>ミリ秒付きタイムスタンプ（Unixエポックとして）</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%i</literal></entry>
<!--
             <entry>Command tag: type of session's current command</entry>
             <entry>yes</entry>
-->
             <entry>コマンドタグ。セッションの現在のコマンド種類</entry>
             <entry>○</entry>
            </row>
            <row>
             <entry><literal>%e</literal></entry>
<!--
             <entry>SQLSTATE error code</entry>
             <entry>no</entry>
-->
             <entry>SQLSTATE エラーコード</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%c</literal></entry>
<!--
             <entry>Session ID: see below</entry>
             <entry>no</entry>
-->
             <entry>セッションID。下記参照</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%l</literal></entry>
<!--
             <entry>Number of the log line for each session or process, starting at 1</entry>
             <entry>no</entry>
-->
             <entry>各セッションまたは各プロセスのログ行の番号。1から始まります。</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%s</literal></entry>
<!--
             <entry>Process start time stamp</entry>
             <entry>no</entry>
-->
             <entry>プロセスの開始タイムスタンプ</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%v</literal></entry>
<!--
             <entry>Virtual transaction ID (backendID/localXID)</entry>
             <entry>no</entry>
-->
             <entry>仮想トランザクションID（backendID/localXID）</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%x</literal></entry>
<!--
             <entry>Transaction ID (0 if none is assigned)</entry>
             <entry>no</entry>
-->
             <entry>トランザクションID （未割り当ての場合は0）</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%q</literal></entry>
<!--
             <entry>Produces no output, but tells non-session
             processes to stop at this point in the string; ignored by
             session processes</entry>
             <entry>no</entry>
-->
             <entry>何も出力しません。
             非セッションプロセスではこのエスケープ以降の出力を停止します。
             セッションプロセスでは無視されます。</entry>
             <entry>×</entry>
            </row>
            <row>
             <entry><literal>%Q</literal></entry>
<!--
             <entry>Query identifier of the current query.  Query
             identifiers are not computed by default, so this field
             will be zero unless <xref linkend="guc-compute-query-id"/>
             parameter is enabled or a third-party module that computes
             query identifiers is configured.</entry>
             <entry>yes</entry>
-->
             <entry>現在の問い合わせの問い合わせ識別子。問い合わせ識別子はデフォルトでは計算されません。
             ですから<xref linkend="guc-compute-query-id"/>パラメータが有効であるか、あるいは問い合わせ識別子を計算するサードパーティのモジュールが設定されていないければゼロとなります。</entry>
             <entry>○</entry>
            </row>
            <row>
             <entry><literal>%%</literal></entry>
<!--
             <entry>Literal <literal>%</literal></entry>
             <entry>no</entry>
-->
             <entry><literal>%</literal>文字そのもの</entry>
             <entry>×</entry>
            </row>
           </tbody>
          </tgroup>
         </informaltable>

         <para>
<!--
          The backend type corresponds to the column
          <structfield>backend_type</structfield> in the view
          <link linkend="monitoring-pg-stat-activity-view">
          <structname>pg_stat_activity</structname></link>,
          but additional types can appear
          in the log that don't show in that view.
-->
バックエンドタイプは<link linkend="monitoring-pg-stat-activity-view"><structname>pg_stat_activity</structname></link>ビューの<structfield>backend_type</structfield>に関連します。しかし、ビューにない他のタイプがログに現れることがあります。
         </para>

         <para>
<!--
         The <literal>%c</literal> escape prints a quasi-unique session identifier,
         consisting of two 4-byte hexadecimal numbers (without leading zeros)
         separated by a dot.  The numbers are the process start time and the
         process ID, so <literal>%c</literal> can also be used as a space saving way
         of printing those items.  For example, to generate the session
         identifier from <literal>pg_stat_activity</literal>, use this query:
-->
<literal>%c</literal>エスケープは、2つの4バイトの16進数（先頭のゼロは省略）をドットで区切った構成の、準一意なセッション識別子を表示します。
この数値はプロセスの起動時間とそのプロセスIDです。
したがって、<literal>%c</literal>を使用して、これらの項目を出力するための文字数を省略することができます。例として、<literal>pg_stat_activity</literal>からセッション識別子を生成するには以下の問い合わせを行ないます。
<programlisting>
SELECT to_hex(trunc(EXTRACT(EPOCH FROM backend_start))::integer) || '.' ||
       to_hex(pid)
FROM pg_stat_activity;
</programlisting>

       </para>

       <tip>
        <para>
<!--
         If you set a nonempty value for <varname>log_line_prefix</varname>,
         you should usually make its last character be a space, to provide
         visual separation from the rest of the log line.  A punctuation
         character can be used too.
-->
<varname>log_line_prefix</varname>に空白文字以外の値を設定する場合、通常、ログ行の残りとの区切りを明確にするために、その最後の文字を空白文字にすべきです。
句読点用の文字も使用できます。
        </para>
       </tip>

       <tip>
        <para>
<!--
         <application>Syslog</application> produces its own
         time stamp and process ID information, so you probably do not want to
         include those escapes if you are logging to <application>syslog</application>.
-->
<application>Syslog</application>は独自にタイムスタンプとプロセスID情報を生成します。
ですのでおそらく、<application>Syslog</application>にログを保管する場合は、こうしたエスケープを含めるとは考えないでしょう。
        </para>
       </tip>

       <tip>
        <para>
<!--
         The <literal>%q</literal> escape is useful when including information that is
         only available in session (backend) context like user or database
         name.  For example:
-->
<literal>%q</literal>エスケープは、ユーザやデータベース名のように、セッション（バックエンド）コンテキストでのみ存在する情報を含める場合に有用です。
<literal>%q</literal>
<programlisting>
log_line_prefix = '%m [%p] %q%u@%d/%a '
</programlisting>
        </para>
       </tip>

       <note>
        <para>
<!--
         The <literal>%Q</literal> escape always reports a zero identifier
         for lines output by <xref linkend="guc-log-statement"/> because
         <varname>log_statement</varname> generates output before an
         identifier can be calculated, including invalid statements for
         which an identifier cannot be calculated.
-->
識別子が計算できない不正な文も含め、<varname>log_statement</varname>は識別子が計算可能になる前に出力を生成するため、<literal>%Q</literal>エスケープは、<xref linkend="guc-log-statement"/>が生成する行では常にゼロの識別子を報告します。
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-lock-waits" xreflabel="log_lock_waits">
      <term><varname>log_lock_waits</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_lock_waits</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_lock_waits</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls whether a log message is produced when a session waits
        longer than <xref linkend="guc-deadlock-timeout"/> to acquire a
        lock.  This is useful in determining if lock waits are causing
        poor performance.  The default is <literal>off</literal>.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[70.655271]》セッションがロックの獲得までの間に<xref linkend="guc-deadlock-timeout"/>より長く待機する場合にログメッセージを生成するかどうかを制御します。
これは、ロック待ちによって性能がでていないのかどうか確認する時に有用です。
デフォルトは<literal>off</literal>です。
スーパーユーザのみこの設定を変更できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-recovery-conflict-waits" xreflabel="log_recovery_conflict_waits">
      <term><varname>log_recovery_conflict_waits</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_recovery_conflict_waits</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_recovery_conflict_waits</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls whether a log message is produced when the startup process
        waits longer than <varname>deadlock_timeout</varname>
        for recovery conflicts.  This is useful in determining if recovery
        conflicts prevent the recovery from applying WAL.
-->
スタートアッププロセスが<varname>deadlock_timeout</varname>よりも長くリカバリコンフリクトを待つ場合にログメッセージを出力するかどうかを制御します。
リカバリコンフリクトによってリカバリがWALを適用するのを妨げられているかどうかを決定するのに有用です。
       </para>

       <para>
<!--
        The default is <literal>off</literal>.  This parameter can only be set
        in the <filename>postgresql.conf</filename> file or on the server
        command line.
-->
デフォルトは<literal>off</literal>です。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインのみで設定可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-parameter-max-length" xreflabel="log_parameter_max_length">
      <term><varname>log_parameter_max_length</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_parameter_max_length</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_parameter_max_length</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        If greater than zero, each bind parameter value logged with a
        non-error statement-logging message is trimmed to this many bytes.
        Zero disables logging of bind parameters for non-error statement logs.
        <literal>-1</literal> (the default) allows bind parameters to be
        logged in full.
        If this value is specified without units, it is taken as bytes.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[73.942094]》ゼロよりも大きければ、エラーではない時にバインドパラメータ値が、文とともにこの指定バイト数に短縮されて記録されます。
ゼロなら、エラーではない時のバインドパラメータ値と文の記録は行われません。
<literal>-1</literal>（デフォルトです）ならバインドパラメータはすべて記録されます。
この値が単位なしに指定されると、バイト単位と見なされます。
スーパーユーザのみがこの設定を変更できます。
       </para>

       <para>
<!--
        This setting only affects log messages printed as a result of
        <xref linkend="guc-log-statement"/>,
        <xref linkend="guc-log-duration"/>, and related settings.  Non-zero
        values of this setting add some overhead, particularly if parameters
        are sent in binary form, since then conversion to text is required.
-->
この設定は、<xref linkend="guc-log-statement"/>、<xref linkend="guc-log-duration"/>および関連設定の結果を表示するログメッセージにのみ影響します。
ゼロ以外の値の設定は、とりわけパラメータがバイナリ形式で送信される際に多少のオーバヘッドをもたらします。
テキストへの変換が必要になるからです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-parameter-max-length-on-error" xreflabel="log_parameter_max_length_on_error">
      <term><varname>log_parameter_max_length_on_error</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_parameter_max_length_on_error</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_parameter_max_length_on_error</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        If greater than zero, each bind parameter value reported in error
        messages is trimmed to this many bytes.
        Zero (the default) disables including bind parameters in error
        messages.
        <literal>-1</literal> allows bind parameters to be printed in full.
        If this value is specified without units, it is taken as bytes.
-->
ゼロよりも大きければ、エラー時のバインドパラメータ値が、エラーメッセージ中にこの指定バイト数に短縮されて記録されます。
ゼロ（デフォルトです）ならエラーメッセージ中のバインドパラメータは記録されません。
<literal>-1</literal>ならバインドパラメータはすべて記録されます。
この値が単位なしに指定されると、バイト単位と見なされます。
       </para>

       <para>
<!--
        Non-zero values of this setting add overhead, as
        <productname>PostgreSQL</productname> will need to store textual
        representations of parameter values in memory at the start of each
        statement, whether or not an error eventually occurs.  The overhead
        is greater when bind parameters are sent in binary form than when
        they are sent as text, since the former case requires data
        conversion while the latter only requires copying the string.
-->
ゼロ以外の値の設定は多少のオーバヘッドをもたらします。
エラーが起きるかどうかに関わらず、<productname>PostgreSQL</productname>は文を開始する際にテキスト形式のパラメータ値をメモリに保存する必要があるからです。
パラメータがバイナリ形式で送信される場合にテキスト形式で送信するよりもオーバヘッドが大きくなります。
前者はデータ変換が必要なのに対し、後者は単に文字列をコピーするだけだからです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-statement" xreflabel="log_statement">
      <term><varname>log_statement</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>log_statement</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_statement</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls which SQL statements are logged. Valid values are
        <literal>none</literal> (off), <literal>ddl</literal>, <literal>mod</literal>, and
        <literal>all</literal> (all statements). <literal>ddl</literal> logs all data definition
        statements, such as <command>CREATE</command>, <command>ALTER</command>, and
        <command>DROP</command> statements. <literal>mod</literal> logs all
        <literal>ddl</literal> statements, plus data-modifying statements
        such as <command>INSERT</command>,
        <command>UPDATE</command>, <command>DELETE</command>, <command>TRUNCATE</command>,
        and <command>COPY FROM</command>.
        <command>PREPARE</command>, <command>EXECUTE</command>, and
        <command>EXPLAIN ANALYZE</command> statements are also logged if their
        contained command is of an appropriate type.  For clients using
        extended query protocol, logging occurs when an Execute message
        is received, and values of the Bind parameters are included
        (with any embedded single-quote marks doubled).
-->
どのSQL文をログに記録するかを制御します。
有効な値は、<literal>none</literal>（off）、<literal>ddl</literal>、<literal>mod</literal>、および<literal>all</literal>（全てのメッセージ）です。
<literal>ddl</literal>は、<command>CREATE</command>、<command>ALTER</command>、および<command>DROP</command>文といった、データ定義文を全てログに記録します。
<literal>mod</literal>は、全ての<literal>ddl</literal>文に加え、<command>INSERT</command>、<command>UPDATE</command>、<command>DELETE</command>、<command>TRUNCATE</command>、および<command>COPY FROM</command>といった、データ変更文をログに記録します。
<command>PREPARE</command>、<command>EXECUTE</command>および<command>EXPLAIN ANALYZE</command>コマンドも、そこに含まれるコマンドが適切な種類であればログが録られます。
拡張問い合わせプロトコルを使用するクライアントでは、Executeメッセージを受け取った時にBindパラメータの値が（すべての単一引用符が二重にされた状態で）含まれていた場合、ログに記録されます。
       </para>

       <para>
<!--
        The default is <literal>none</literal>.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《機械翻訳》デフォルトは<literal>none</literal>です。
スーパーユーザーおよび適切な<literal>SET</literal>権限を持つユーザーのみがこの設定を変更できます。
       </para>

       <note>
        <para>
<!--
         Statements that contain simple syntax errors are not logged
         even by the <varname>log_statement</varname> = <literal>all</literal> setting,
         because the log message is emitted only after basic parsing has
         been done to determine the statement type.  In the case of extended
         query protocol, this setting likewise does not log statements that
         fail before the Execute phase (i.e., during parse analysis or
         planning).  Set <varname>log_min_error_statement</varname> to
         <literal>ERROR</literal> (or lower) to log such statements.
-->
ログメッセージの発行は、基本解析により文の種類が決まった後に行われますので、<varname>log_statement</varname> = <literal>all</literal>という設定を行ったとしても、単純な構文エラーを持つ文は記録されません。
拡張問い合わせプロトコルの場合も同様に、この設定ではExecute段階以前（つまり、解析や計画作成期間）に失敗した文は記録されません。
こうした文のログを記録するには、<varname>log_min_error_statement</varname>を<literal>ERROR</literal>（以下）に設定してください。
        </para>
        <para>
<!--
         Logged statements might reveal sensitive data and even contain
         plaintext passwords.
-->
《機械翻訳》ログに記録された文は、機密データを明らかにし、プレーンテキストのパスワードを含むことさえあります。
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-replication-commands" xreflabel="log_replication_commands">
      <term><varname>log_replication_commands</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_replication_commands</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_replication_commands</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Causes each replication command to be logged in the server log.
        See <xref linkend="protocol-replication"/> for more information about
        replication command. The default value is <literal>off</literal>.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[69.407895]》サーバログにレプリケーションコマンドを記録します。
レプリケーションコマンドの更なる情報は<xref linkend="protocol-replication"/>をご覧ください。
デフォルト値は<literal>off</literal>です。
スーパーユーザだけがこの設定を変更できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-temp-files" xreflabel="log_temp_files">
      <term><varname>log_temp_files</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>log_temp_files</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_temp_files</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls logging of temporary file names and sizes.
        Temporary files can be
        created for sorts, hashes, and temporary query results.
        If enabled by this setting, a log entry is emitted for each
        temporary file when it is deleted.
        A value of zero logs all temporary file information, while positive
        values log only files whose size is greater than or equal to
        the specified amount of data.
        If this value is specified without units, it is taken as kilobytes.
        The default setting is -1, which disables such logging.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[75.693312]》一時ファイルのファイル名とサイズのログ出力を制御します。
一時ファイルはソート処理やハッシュ処理、一時的な問い合わせの結果のために作成されます。
有効にすると、ログの項目はすべての一時ファイルそれぞれについて削除されたときに生成されます。
0を指定すると、すべての一時ファイル情報のログが残ります。
正の数を指定すると、指定した以上の容量のファイルのみがログに残ります。
この値が単位なしで指定された場合は、キロバイト単位であるとみなします。
デフォルトの設定は-1で、このログ出力を無効にします。
スーパーユーザのみがこの設定を変更できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-log-timezone" xreflabel="log_timezone">
      <term><varname>log_timezone</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>log_timezone</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_timezone</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Sets the time zone used for timestamps written in the server log.
        Unlike <xref linkend="guc-timezone"/>, this value is cluster-wide,
        so that all sessions will report timestamps consistently.
        The built-in default is <literal>GMT</literal>, but that is typically
        overridden in <filename>postgresql.conf</filename>; <application>initdb</application>
        will install a setting there corresponding to its system environment.
        See <xref linkend="datatype-timezones"/> for more information.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
サーバログに書き出す際に使用される時間帯を設定します。
<xref linkend="guc-timezone"/>と異なり、すべてのセッションで一貫性を持ってタイムスタンプが報告されるようにこの値はクラスタ全体に適用されます。
組み込まれているデフォルトは<literal>GMT</literal>ですが、<filename>postgresql.conf</filename>により通常は上書きされます。<application>initdb</application>によりこれらと関連した設定をシステム環境にインストールされます。
詳細は<xref linkend="datatype-timezones"/>を参照してください。
このパラメータは<filename>postgresql.conf</filename>ファイル内、またはサーバのコマンドラインのみで設定可能です。
       </para>
      </listitem>
     </varlistentry>

     </variablelist>
    </sect2>
     <sect2 id="runtime-config-logging-csvlog">
<!--
     <title>Using CSV-Format Log Output</title>
-->
     <title>CSV書式のログ出力の利用</title>

       <para>
<!--
        Including <literal>csvlog</literal> in the <varname>log_destination</varname> list
        provides a convenient way to import log files into a database table.
        This option emits log lines in comma-separated-values
        (<acronym>CSV</acronym>) format,
        with these columns:
        time stamp with milliseconds,
        user name,
        database name,
        process ID,
        client host:port number,
        session ID,
        per-session line number,
        command tag,
        session start time,
        virtual transaction ID,
        regular transaction ID,
        error severity,
        SQLSTATE code,
        error message,
        error message detail,
        hint,
        internal query that led to the error (if any),
        character count of the error position therein,
        error context,
        user query that led to the error (if any and enabled by
        <varname>log_min_error_statement</varname>),
        character count of the error position therein,
        location of the error in the PostgreSQL source code
        (if <varname>log_error_verbosity</varname> is set to <literal>verbose</literal>),
        application name, backend type, process ID of parallel group leader,
        and query id.
        Here is a sample table definition for storing CSV-format log output:
-->
<varname>log_destination</varname>リストに<literal>csvlog</literal>を含めることは、ログファイルをデータベーステーブルにインポートする簡便な方法を提供します。このオプションはカンマ区切り値書式（<acronym>CSV</acronym>）で以下の列を含むログ行を生成します。
ミリ秒単位のtimestamp、
ユーザ名、
データベース名、
プロセスID、
クライアントホスト：ポート番号、
セッションID、
セッション前行番号、
コマンドタグ、
セッション開始時間、
仮想トランザクションID、
通常トランザクションID、
エラーの深刻度、
SQLSTATEコード、
エラーメッセージ、
詳細エラーメッセージ、
ヒント、
エラーとなった内部的な問い合わせ（もしあれば）、
内部問い合わせにおけるエラー位置の文字数、
エラーの文脈、
エラーの原因となったユーザ問い合わせ(存在し<varname>log_min_error_statement</varname>で有効になっている場合)、
エラー位置の文字数、
PostgreSQLソースコード上のエラー発生場所（<varname>log_error_verbosity</varname>が<literal>verbose</literal>に設定されているならば）、
アプリケーション名、バックエンドタイプ、パラレルグループリーダのプロセスID、問い合わせID。
以下にcsvlog出力を格納するためのテーブル定義のサンプルを示します。

<programlisting>
CREATE TABLE postgres_log
(
  log_time timestamp(3) with time zone,
  user_name text,
  database_name text,
  process_id integer,
  connection_from text,
  session_id text,
  session_line_num bigint,
  command_tag text,
  session_start_time timestamp with time zone,
  virtual_transaction_id text,
  transaction_id bigint,
  error_severity text,
  sql_state_code text,
  message text,
  detail text,
  hint text,
  internal_query text,
  internal_query_pos integer,
  context text,
  query text,
  query_pos integer,
  location text,
  application_name text,
  backend_type text,
  leader_pid integer,
  query_id bigint,
  PRIMARY KEY (session_id, session_line_num)
);
</programlisting>
       </para>

       <para>
<!--
        To import a log file into this table, use the <command>COPY FROM</command>
        command:
-->
このテーブルにインポートするためには、<command>COPY FROM</command>コマンドを使用してください。

<programlisting>
COPY postgres_log FROM '/full/path/to/logfile.csv' WITH csv;
</programlisting>
<!--
        It is also possible to access the file as a foreign table, using
        the supplied <xref linkend="file-fdw"/> module.
-->
提供された<xref linkend="file-fdw"/>モジュールを使って外部テーブルとしてファイルをアクセスすることも可能です。
       </para>

       <para>
<!--
       There are a few things you need to do to simplify importing CSV log
       files:
-->
CSVログファイルをインポートする作業を単純にするためにいくつか必要な作業があります。

       <orderedlist>
         <listitem>
           <para>
<!--
            Set <varname>log_filename</varname> and
            <varname>log_rotation_age</varname> to provide a consistent,
            predictable naming scheme for your log files.  This lets you
            predict what the file name will be and know when an individual log
            file is complete and therefore ready to be imported.
-->
一貫性があり、予測可能なログファイル命名機構を提供するために、<varname>log_filename</varname>および<varname>log_rotation_age</varname>を設定してください。
これによりどのようなファイル名になると、個々のログファイルが完了しインポートする準備が整ったかが推測できるようになります。
         </para>
        </listitem>

        <listitem>
           <para>
<!--
            Set <varname>log_rotation_size</varname> to 0 to disable
            size-based log rotation, as it makes the log file name difficult
            to predict.
-->
ログファイル名の予測が困難になりますので、<varname>log_rotation_size</varname>を0にして容量を基にしたログの回転を無効にしてください。
           </para>
        </listitem>

        <listitem>
          <para>
<!--
           Set <varname>log_truncate_on_rotation</varname> to <literal>on</literal> so
           that old log data isn't mixed with the new in the same file.
-->
同じファイルに古いログデータと新しいログデータが混在しないようにするために、<varname>log_truncate_on_rotation</varname>を<literal>on</literal>に設定してください。
          </para>
        </listitem>

        <listitem>
          <para>
<!--
           The table definition above includes a primary key specification.
           This is useful to protect against accidentally importing the same
           information twice.  The <command>COPY</command> command commits all of the
           data it imports at one time, so any error will cause the entire
           import to fail.  If you import a partial log file and later import
           the file again when it is complete, the primary key violation will
           cause the import to fail.  Wait until the log is complete and
           closed before importing.  This procedure will also protect against
           accidentally importing a partial line that hasn't been completely
           written, which would also cause <command>COPY</command> to fail.
-->
上のテーブル定義には主キーの指定が含まれています。
これにより、同じ情報が2回インポートされる事故を防止するために有用です。
<command>COPY</command>コマンドは、一度にインポートするすべてのデータをコミットしますので、何か1つでもエラーがあればインポート全体が失敗します。
ログファイルの一部をインポートし、そのファイルが完了した後に再度インポートしようとした場合、主キー違反によりインポートが失敗します。
インポートする前に、ログファイルの完了を待ち、閉じるまで待機してください。
この手順は、<command>COPY</command>が失敗する原因となる、完全に書き込まれなかった欠落した行をインポートするという事故も防止します。
          </para>
        </listitem>
        </orderedlist>
      </para>
    </sect2>
     <sect2 id="runtime-config-logging-jsonlog">
     <title>Using JSON-Format Log Output</title>

     <para>
<!--
      Including <literal>jsonlog</literal> in the
      <varname>log_destination</varname> list provides a convenient way to
      import log files into many different programs. This option emits log
      lines in <acronym>JSON</acronym> format.
-->
《機械翻訳》<varname>log_destination</varname>リストに<literal>jsonlog</literal>を含めると、ログファイルをさまざまなプログラムにインポートするのに便利です。
このオプションは、<acronym>JSON</acronym>形式のログ行を出力します。
     </para>

     <para>
<!--
      String fields with null values are excluded from output.
      Additional fields may be added in the future. User applications that
      process <literal>jsonlog</literal> output should ignore unknown fields.
-->
《機械翻訳》NULL値を持つ文字列フィールドは出力から除外されます。
将来、追加のフィールドが追加される可能性があります。
<literal>jsonlog</literal>出力を処理するユーザーアプリケーションは不明なフィールドを無視する必要があります。
     </para>

     <para>
<!--
      Each log line is serialized as a JSON object with the set of keys and
      their associated values shown in <xref
      linkend="runtime-config-logging-jsonlog-keys-values"/>.
-->
《機械翻訳》各ログ行はJSONオブジェクトとしてシリアライズされ、一連のキーとそれに関連する値が<xref linkend="runtime-config-logging-jsonlog-keys-values"/>で示されます。
     </para>

     <table id="runtime-config-logging-jsonlog-keys-values">
      <title>Keys and Values of JSON Log Entries</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Key name</entry>
         <entry>Type</entry>
         <entry>Description</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>timestamp</literal></entry>
         <entry>string</entry>
         <entry>Time stamp with milliseconds</entry>
        </row>
        <row>
         <entry><literal>user</literal></entry>
         <entry>string</entry>
         <entry>User name</entry>
        </row>
        <row>
         <entry><literal>dbname</literal></entry>
         <entry>string</entry>
         <entry>Database name</entry>
        </row>
        <row>
         <entry><literal>pid</literal></entry>
         <entry>number</entry>
         <entry>Process ID</entry>
        </row>
        <row>
         <entry><literal>remote_host</literal></entry>
         <entry>string</entry>
         <entry>Client host</entry>
        </row>
        <row>
         <entry><literal>remote_port</literal></entry>
         <entry>number</entry>
         <entry>Client port</entry>
        </row>
        <row>
         <entry><literal>session_id</literal></entry>
         <entry>string</entry>
         <entry>Session ID</entry>
        </row>
        <row>
         <entry><literal>line_num</literal></entry>
         <entry>number</entry>
         <entry>Per-session line number</entry>
        </row>
        <row>
         <entry><literal>ps</literal></entry>
         <entry>string</entry>
         <entry>Current ps display</entry>
        </row>
        <row>
         <entry><literal>session_start</literal></entry>
         <entry>string</entry>
         <entry>Session start time</entry>
        </row>
        <row>
         <entry><literal>vxid</literal></entry>
         <entry>string</entry>
         <entry>Virtual transaction ID</entry>
        </row>
        <row>
         <entry><literal>txid</literal></entry>
         <entry>string</entry>
         <entry>Regular transaction ID</entry>
        </row>
        <row>
         <entry><literal>error_severity</literal></entry>
         <entry>string</entry>
         <entry>Error severity</entry>
        </row>
        <row>
         <entry><literal>state_code</literal></entry>
         <entry>string</entry>
         <entry>SQLSTATE code</entry>
        </row>
        <row>
         <entry><literal>message</literal></entry>
         <entry>string</entry>
         <entry>Error message</entry>
        </row>
        <row>
         <entry><literal>detail</literal></entry>
         <entry>string</entry>
         <entry>Error message detail</entry>
        </row>
        <row>
         <entry><literal>hint</literal></entry>
         <entry>string</entry>
         <entry>Error message hint</entry>
        </row>
        <row>
         <entry><literal>internal_query</literal></entry>
         <entry>string</entry>
         <entry>Internal query that led to the error</entry>
        </row>
        <row>
         <entry><literal>internal_position</literal></entry>
         <entry>number</entry>
         <entry>Cursor index into internal query</entry>
        </row>
        <row>
         <entry><literal>context</literal></entry>
         <entry>string</entry>
         <entry>Error context</entry>
        </row>
        <row>
         <entry><literal>statement</literal></entry>
         <entry>string</entry>
         <entry>Client-supplied query string</entry>
        </row>
        <row>
         <entry><literal>cursor_position</literal></entry>
         <entry>string</entry>
         <entry>Cursor index into query string</entry>
        </row>
        <row>
         <entry><literal>func_name</literal></entry>
         <entry>string</entry>
         <entry>Error location function name</entry>
        </row>
        <row>
         <entry><literal>file_name</literal></entry>
         <entry>string</entry>
         <entry>File name of error location</entry>
        </row>
        <row>
         <entry><literal>file_line_num</literal></entry>
         <entry>number</entry>
         <entry>File line number of the error location</entry>
        </row>
        <row>
         <entry><literal>application_name</literal></entry>
         <entry>string</entry>
         <entry>Client application name</entry>
        </row>
        <row>
         <entry><literal>backend_type</literal></entry>
         <entry>string</entry>
         <entry>Type of backend</entry>
        </row>
        <row>
         <entry><literal>leader_pid</literal></entry>
         <entry>number</entry>
         <entry>Process ID of leader for active parallel workers</entry>
        </row>
        <row>
         <entry><literal>query_id</literal></entry>
         <entry>number</entry>
         <entry>Query ID</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </sect2>

   <sect2>
<!--
    <title>Process Title</title>
-->
    <title>プロセスの表題</title>

    <para>
<!--
     These settings control how process titles of server processes are
     modified.  Process titles are typically viewed using programs like
     <application>ps</application> or, on Windows, <application>Process Explorer</application>.
     See <xref linkend="monitoring-ps"/> for details.
-->
これらの設定項目は、サーバプロセスの表題を変更します。
プロセスの表題は、典型的には<application>ps</application>、あるいはWindowsにおいては<application>Process Explorer</application>で見ることができます。
詳細については、<xref linkend="monitoring-ps"/>を参照してください。
    </para>

    <variablelist>
     <varlistentry id="guc-cluster-name" xreflabel="cluster_name">
      <term><varname>cluster_name</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>cluster_name</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>cluster_name</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Sets a name that identifies this database cluster (instance) for
        various purposes.  The cluster name appears in the process title for
        all server processes in this cluster.  Moreover, it is the default
        application name for a standby connection (see <xref
        linkend="guc-synchronous-standby-names"/>.)
-->
様々な目的のために、このデータベースクラスタ（インスタンス）を識別する名前を設定します。
クラスタ名はこのクラスタのすべてのサーバプロセスのプロセス表題に表れます。
更に、スタンバイ接続のデフォルトのアプリケーション名となります。
（<xref linkend="guc-synchronous-standby-names"/>参照。)
       </para>

       <para>
<!--
        The name can be any string of less
        than <symbol>NAMEDATALEN</symbol> characters (64 characters in a standard
        build). Only printable ASCII characters may be used in the
        <varname>cluster_name</varname> value. Other characters will be
        replaced with question marks (<literal>?</literal>).  No name is shown
        if this parameter is set to the empty string <literal>''</literal> (which is
        the default). This parameter can only be set at server start.
-->
クラスタ名は<symbol>NAMEDATALEN</symbol>文字(標準のビルドでは64文字)より少ない文字列です。
表示可能なASCII文字だけが<varname>cluster_name</varname>の値として設定できます。
他の文字は、疑問符(<literal>?</literal>)に置き換えられます。
空文字<literal>''</literal>(これがデフォルト値です)が設定されると、クラスタ名は表示されません。
このパラメータはサーバ起動時にのみ設定できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-update-process-title" xreflabel="update_process_title">
      <term><varname>update_process_title</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>update_process_title</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>update_process_title</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Enables updating of the process title every time a new SQL command
        is received by the server.
        This setting defaults to <literal>on</literal> on most platforms, but it
        defaults to <literal>off</literal> on Windows due to that platform's larger
        overhead for updating the process title.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[71.907216]》サーバが新しいSQLコマンドを受け取る時に毎回、プロセスタイトルを更新できるようにします。
この設定値はたいていのプラットフォームで<literal>on</literal>がデフォルトになっていますが、Windowsではプロセスタイトルを更新するオーバヘッドが大きいため、<literal>off</literal>がデフォルトになっています。
スーパーユーザのみがこの設定を変更することができます。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>
  </sect1>

   <sect1 id="runtime-config-statistics">
<!--
    <title>Run-time Statistics</title>
-->
    <title>実行時統計情報</title>

    <sect2 id="runtime-config-cumulative-statistics">
     <title>Cumulative Query and Index Statistics</title>

     <para>
<!--
      These parameters control the server-wide cumulative statistics system.
      When enabled, the data that is collected can be accessed via the
      <structname>pg_stat</structname> and <structname>pg_statio</structname>
      family of system views.  Refer to <xref linkend="monitoring"/> for more
      information.
-->
《マッチ度[71.477663]》これらのパラメータは、サーバ全体の統計情報収集機能を制御します。
統計情報収集が有効ならば、生成されるデータは<structname>pg_stat</structname>と<structname>pg_statio</structname>系のシステムビュー経由でアクセス可能です。
詳細は<xref linkend="monitoring"/>を参照してください。
     </para>

     <variablelist>

     <varlistentry id="guc-track-activities" xreflabel="track_activities">
      <term><varname>track_activities</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>track_activities</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>track_activities</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Enables the collection of information on the currently
        executing command of each session, along with its identifier and the
        time when that command began execution. This parameter is on by
        default. Note that even when enabled, this information is only
        visible to superusers, roles with privileges of the
        <literal>pg_read_all_stats</literal> role and the user owning the
        sessions being reported on (including sessions belonging to a role they
        have the privileges of), so it should not represent a security risk.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[74.918567]》各セッションで実行中のコマンドに関する情報と、そのコマンドの識別子および実行開始時刻の収集を有効にします。
このパラメータはデフォルトで有効です。
有効な場合であっても、すべてのユーザがこの情報を見ることができず、スーパーユーザ、<literal>pg_read_all_stats</literal>ロール権限を持つロール、報告対象のセッション（権限を持つロールに所属するセッションを含みます）の所有者のみから可視である点に注意してください。
このためセキュリティ上の危険性はありません。
スーパーユーザのみがこの設定を変更することができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-track-activity-query-size" xreflabel="track_activity_query_size">
      <term><varname>track_activity_query_size</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>track_activity_query_size</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>track_activity_query_size</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
       Specifies the amount of memory reserved to store the text of the
       currently executing command for each active session, for the
       <structname>pg_stat_activity</structname>.<structfield>query</structfield> field.
       If this value is specified without units, it is taken as bytes.
       The default value is 1024 bytes.
       This parameter can only be set at server start.
-->
<structname>pg_stat_activity</structname>.<structfield>query</structfield>フィールドに対し、それぞれの活動中のセッションで現在実行されているコマンドを追跡記録するため予約されるメモリ量を指定します。
この値が単位なしで指定された場合は、バイト単位であるとみなします。
デフォルトの値は1024バイトです。
このパラメータはサーバ起動時のみ設定可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-track-counts" xreflabel="track_counts">
      <term><varname>track_counts</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>track_counts</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>track_counts</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Enables collection of statistics on database activity.
        This parameter is on by default, because the autovacuum
        daemon needs the collected information.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[63.529412]》データベースの活動についての統計情報の収集を有効にします。
収集される情報を自動バキュームデーモンが必要とするため、このオプションはデフォルトで有効です。
スーパーユーザのみがこの設定を変更することができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-track-io-timing" xreflabel="track_io_timing">
      <term><varname>track_io_timing</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>track_io_timing</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>track_io_timing</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Enables timing of database I/O calls.  This parameter is off by
        default, as it will repeatedly query the operating system for
        the current time, which may cause significant overhead on some
        platforms.  You can use the <xref linkend="pgtesttiming"/> tool to
        measure the overhead of timing on your system.
        I/O timing information is
        displayed in <link linkend="monitoring-pg-stat-database-view">
        <structname>pg_stat_database</structname></link>, in the output of
        <xref linkend="sql-explain"/> when the <literal>BUFFERS</literal> option
        is used, in the output of <xref linkend="sql-vacuum"/> when
        the <literal>VERBOSE</literal> option is used, by autovacuum
        for auto-vacuums and auto-analyzes, when <xref
        linkend="guc-log-autovacuum-min-duration"/> is set and by
        <xref linkend="pgstatstatements"/>.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[72.209821]》データベースによるI/O呼び出しの記録を有効にします。
このパラメータはデフォルトで無効になっています。その理由は、現時点の時刻をオペレーティングシステムに繰り返し問い合わせるので、プラットフォームによっては深刻な負荷の原因になるからです。
使用しているシステムにおける負荷のタイミングを計測するため<xref linkend="pgtesttiming"/>ツールが使用できます。
I/O呼び出し情報は、<link linkend="monitoring-pg-stat-database-view"><structname>pg_stat_database</structname></link>に表示されます。
<literal>BUFFERS</literal>オプションが設定されている時は<xref linkend="sql-explain"/> の出力として、また<xref linkend="guc-log-autovacuum-min-duration"/>が設定されている時は<xref linkend="pgstatstatements"/>により表示されます。
スーパーユーザのみこの設定を変更できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-track-wal-io-timing" xreflabel="track_wal_io_timing">
      <term><varname>track_wal_io_timing</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>track_wal_io_timing</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>track_wal_io_timing</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Enables timing of WAL I/O calls. This parameter is off by default,
        as it will repeatedly query the operating system for the current time,
        which may cause significant overhead on some platforms.
        You can use the <application>pg_test_timing</application> tool to
        measure the overhead of timing on your system.
        I/O timing information is
        displayed in <link linkend="monitoring-pg-stat-wal-view">
        <structname>pg_stat_wal</structname></link>.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[77.037037]》データベースによるWAL I/O呼び出しの記録を有効にします。
このパラメータはデフォルトで無効になっています。その理由は、現時点の時刻をオペレーティングシステムに繰り返し問い合わせるので、プラットフォームによっては深刻な負荷の原因になるからです。
使用しているシステムにおける負荷のタイミングを計測するため<application>pg_test_timing</application>ツールが使用できます。
I/O呼び出し情報は、<link linkend="monitoring-pg-stat-wal-view"><structname>pg_stat_wal</structname></link>に表示されます。
スーパーユーザのみこの設定を変更できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-track-functions" xreflabel="track_functions">
      <term><varname>track_functions</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>track_functions</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>track_functions</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Enables tracking of function call counts and time used. Specify
        <literal>pl</literal> to track only procedural-language functions,
        <literal>all</literal> to also track SQL and C language functions.
        The default is <literal>none</literal>, which disables function
        statistics tracking.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change this setting.
-->
《マッチ度[72.868217]》関数の呼び出し数と費やされた時間の追跡を有効にします。
手続き言語関数のみを追跡するためには<literal>pl</literal>と指定してください。
SQL関数、C言語関数も追跡するためには<literal>all</literal>と指定してください。
デフォルトは、統計情報追跡機能を無効にする<literal>none</literal>です。
スーパーユーザのみがこの設定を変更できます。
       </para>

       <note>
        <para>
<!--
         SQL-language functions that are simple enough to be <quote>inlined</quote>
         into the calling query will not be tracked, regardless of this
         setting.
-->
呼び出す問い合わせ内に<quote>インライン化</quote>できる位単純なSQL言語関数は、この設定と関係なく、追跡されません。
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-stats-fetch-consistency" xreflabel="stats_fetch_consistency">
      <term><varname>stats_fetch_consistency</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>stats_fetch_consistency</varname> configuration parameter</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Determines the behavior when cumulative statistics are accessed
        multiple times within a transaction. When set to
        <literal>none</literal>, each access re-fetches counters from shared
        memory. When set to <literal>cache</literal>, the first access to
        statistics for an object caches those statistics until the end of the
        transaction unless <function>pg_stat_clear_snapshot()</function> is
        called. When set to <literal>snapshot</literal>, the first statistics
        access caches all statistics accessible in the current database, until
        the end of the transaction unless
        <function>pg_stat_clear_snapshot()</function> is called. The default
        is <literal>cache</literal>.
-->
《機械翻訳》トランザクション内で累積統計に複数回アクセスする場合の動作を決定します。
<literal>none</literal>に設定すると、各アクセスは共有メモリからカウンタを再フェッチします。
<literal>cache</literal>に設定すると、オブジェクトの統計への最初のアクセスは、<function>pg_stat_clear_snapshot()</function>が呼び出されない限り、トランザクションが終了するまでこれらの統計をキャッシュします。
<literal>snapshot</literal>に設定すると、最初の統計アクセスは、<function>pg_stat_clear_snapshot()</function>が呼び出されない限り、トランザクションが終了するまで現在のデータベースでアクセス可能なすべての統計をキャッシュします。
デフォルトは<literal>cache</literal>です。
       </para>
       <note>
        <para>
<!--
         <literal>none</literal> is most suitable for monitoring systems. If
         values are only accessed once, it is the most
         efficient. <literal>cache</literal> ensures repeat accesses yield the
         same values, which is important for queries involving
         e.g. self-joins. <literal>snapshot</literal> can be useful when
         interactively inspecting statistics, but has higher overhead,
         particularly if many database objects exist.
-->
《機械翻訳》<literal>none</literal>は、システムの監視に最も適しています。
値が一度しかアクセスされない場合、最も効率的です。
<literal>cache</literal>は、繰り返しアクセスによって同じ値が生成されることを保証します。
これは、自己結合などを含むクエリで重要です。
<literal>snapshot</literal>は、統計情報を対話的に検査する場合に便利ですが、特に多くのデータベースオブジェクトが存在する場合にはオーバーヘッドが高くなります。
        </para>
       </note>
      </listitem>
     </varlistentry>

     </variablelist>
    </sect2>

    <sect2 id="runtime-config-statistics-monitor">
<!--
     <title>Statistics Monitoring</title>
-->
     <title>統計情報の監視</title>
     <variablelist>

     <varlistentry id="guc-compute-query-id" xreflabel="compute_query_id">
      <term><varname>compute_query_id</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>compute_query_id</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>compute_query_id</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Enables in-core computation of a query identifier.
        Query identifiers can be displayed in the <link
        linkend="monitoring-pg-stat-activity-view"><structname>pg_stat_activity</structname></link>
        view, using <command>EXPLAIN</command>, or emitted in the log if
        configured via the <xref linkend="guc-log-line-prefix"/> parameter.
        The <xref linkend="pgstatstatements"/> extension also requires a query
        identifier to be computed.  Note that an external module can
        alternatively be used if the in-core query identifier computation
        method is not acceptable.  In this case, in-core computation
        must be always disabled.
        Valid values are <literal>off</literal> (always disabled),
        <literal>on</literal> (always enabled), <literal>auto</literal>,
        which lets modules such as <xref linkend="pgstatstatements"/>
        automatically enable it, and <literal>regress</literal> which
        has the same effect as <literal>auto</literal>, except that the
        query identifier is not shown in the <literal>EXPLAIN</literal> output
        in order to facilitate automated regression testing.
        The default is <literal>auto</literal>.
-->
組み込みの問い合わせ識別子の計算を有効にします。
問い合わせ識別子は、<link linkend="monitoring-pg-stat-activity-view"><structname>pg_stat_activity</structname></link>ビュー、<command>EXPLAIN</command>、あるいは<xref linkend="guc-log-line-prefix"/>パラメータが設定されていればログに出力されます。
<xref linkend="pgstatstatements"/>拡張も問い合わせ識別子の計算が必要です。
組み込みの計算が許容できなければ、外部モジュールを代わりに利用することができることに注意してください。
この場合、組み込みの計算は常に無効にしなければなりません。
有効な値は、<literal>off</literal>（常に無効）、<literal>on</literal>（常に有効）、<xref linkend="pgstatstatements"/>のようなモジュールによって自動的に有効になる<literal>auto</literal>、自動回帰テストを機能させるために、問い合わせ識別子が<literal>EXPLAIN</literal>出力に表示されないことを除けば<literal>auto</literal>と同じ効果を持つ<literal>regress</literal>です。
デフォルトは<literal>auto</literal>です。
       </para>
       <note>
        <para>
<!--
         To ensure that only one query identifier is calculated and
         displayed, extensions that calculate query identifiers should
         throw an error if a query identifier has already been computed.
-->
一つの問い合わせ識別子のみが計算されて表示されることを確実にするために、問い合わせ識別子を計算する拡張は、問い合わせ識別子がすでに計算済みのときにエラーを生じるようにすべきです。
        </para>
       </note>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><varname>log_statement_stats</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_statement_stats</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_statement_stats</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <term><varname>log_parser_stats</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_parser_stats</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_parser_stats</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <term><varname>log_planner_stats</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_planner_stats</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>log_planner_stats</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <term><varname>log_executor_stats</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>log_executor_stats</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
      <primary><varname>log_executor_stats</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        For each query, output performance statistics of the respective
        module to the server log. This is a crude profiling
        instrument, similar to the Unix <function>getrusage()</function> operating
        system facility.  <varname>log_statement_stats</varname> reports total
        statement statistics, while the others report per-module statistics.
        <varname>log_statement_stats</varname> cannot be enabled together with
        any of the per-module options.  All of these options are disabled by
        default.
        Only superusers and users with the appropriate <literal>SET</literal>
        privilege can change these settings.
-->
《マッチ度[77.397260]》各問い合わせに対し、対応するモジュールの性能に関する統計情報をサーバログに出力します。
これは、Unixの<function>getrusage()</function>オペレーティングシステム機能に類似した、雑なプロファイリング手段です。
<varname>log_statement_stats</varname>は文に関する統計情報全体を、この他はモジュール毎の統計情報を報告します。
<varname>log_statement_stats</varname>とモジュール毎のオプションを一緒に有効にすることはできません。
デフォルトでこれらのオプションはすべて無効です。
スーパーユーザのみがこの設定を変更することができます。
       </para>
      </listitem>
     </varlistentry>

     </variablelist>

    </sect2>
   </sect1>

   <sect1 id="runtime-config-autovacuum">
<!--
    <title>Automatic Vacuuming</title>
-->
    <title>自動Vacuum作業</title>

    <indexterm>
     <primary>autovacuum</primary>
     <secondary>configuration parameters</secondary>
    </indexterm>
    <indexterm>
     <primary>autovacuum</primary>
     <secondary>設定パラメータ</secondary>
    </indexterm>

     <para>
<!--
      These settings control the behavior of the <firstterm>autovacuum</firstterm>
      feature.  Refer to <xref linkend="autovacuum"/> for more information.
      Note that many of these settings can be overridden on a per-table
      basis; see <xref linkend="sql-createtable-storage-parameters"/>.
-->
以下に示す設定は<firstterm>自動バキューム</firstterm>機能の動作を制御します。
詳細は<xref linkend="autovacuum"/>を参照してください。
これらの設定の多くは、テーブル単位で変更できることに注意してください。
<xref linkend="sql-createtable-storage-parameters"/>を参照してください。
     </para>

    <variablelist>

     <varlistentry id="guc-autovacuum" xreflabel="autovacuum">
      <term><varname>autovacuum</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>autovacuum</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls whether the server should run the
        autovacuum launcher daemon.  This is on by default; however,
        <xref linkend="guc-track-counts"/> must also be enabled for
        autovacuum to work.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line; however, autovacuuming can be
        disabled for individual tables by changing table storage parameters.
-->
サーバがautovacuumランチャデーモンを実行すべきかどうかを管理します。
デフォルトでは有効です。
しかしautovacuumを作動させるためには<xref linkend="guc-track-counts"/>も有効でなければなりません。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
ただし、テーブルストレージパラメータを変更することにより、autovacuumは個々のテーブルに対して無効にできます。
       </para>
       <para>
<!--
        Note that even when this parameter is disabled, the system
        will launch autovacuum processes if necessary to
        prevent transaction ID wraparound.  See <xref
        linkend="vacuum-for-wraparound"/> for more information.
-->
このパラメータが無効であったとしてもシステムは、トランザクションIDの周回を防止する必要があれば、autovacuumプロセスを起動することに注意してください。
詳細は<xref linkend="vacuum-for-wraparound"/>を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-max-workers" xreflabel="autovacuum_max_workers">
      <term><varname>autovacuum_max_workers</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>autovacuum_max_workers</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_max_workers</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the maximum number of autovacuum processes (other than the
        autovacuum launcher) that may be running at any one time.  The default
        is three.  This parameter can only be set at server start.
-->
同時に実行することができるautovacuumプロセス（autovacuumランチャ以外）の最大数を指定します。
デフォルトは3です。
サーバ起動時のみで設定可能です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-naptime" xreflabel="autovacuum_naptime">
      <term><varname>autovacuum_naptime</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>autovacuum_naptime</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_naptime</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the minimum delay between autovacuum runs on any given
        database.  In each round the daemon examines the
        database and issues <command>VACUUM</command> and <command>ANALYZE</command> commands
        as needed for tables in that database.
        If this value is specified without units, it is taken as seconds.
        The default is one minute (<literal>1min</literal>).
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line.
-->
あるデータベースについて実行されるautovacuumデーモンの最小遅延を指定します。
それぞれの周期で、デーモンはそのデータベースを試験し、そしてそのデータベース内のテーブルで必要性が認められると、<command>VACUUM</command>および<command>ANALYZE</command>コマンドを発行します。
この値が単位なしで指定された場合は、秒単位であるとみなします。
デフォルトは1分（<literal>1min</literal>）です。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-vacuum-threshold" xreflabel="autovacuum_vacuum_threshold">
      <term><varname>autovacuum_vacuum_threshold</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>autovacuum_vacuum_threshold</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_vacuum_threshold</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the minimum number of updated or deleted tuples needed
        to trigger a <command>VACUUM</command> in any one table.
        The default is 50 tuples.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line;
        but the setting can be overridden for individual tables by
        changing table storage parameters.
-->
どのテーブルに対しても<command>VACUUM</command>を起動するために必要な、更新もしくは削除されたタプルの最小数を指定します。
デフォルトは50タプルです。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
ただし、この設定はテーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きすることができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-vacuum-insert-threshold" xreflabel="autovacuum_vacuum_insert_threshold">
      <term><varname>autovacuum_vacuum_insert_threshold</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>autovacuum_vacuum_insert_threshold</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_vacuum_insert_threshold</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the number of inserted tuples needed to trigger a
        <command>VACUUM</command> in any one table.
        The default is 1000 tuples.  If -1 is specified, autovacuum will not
        trigger a <command>VACUUM</command> operation on any tables based on
        the number of inserts.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line;
        but the setting can be overridden for individual tables by
        changing table storage parameters.
-->
あるテーブルで<command>VACUUM</command>を起動するきっかけとなるのに必要な挿入タプル数を設定します。
デフォルトは1000タプルです。
-1が指定されると、自動VACUUMが挿入タプル数に基づいて<command>VACUUM</command>操作を引き起こすことはなくなります。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
ただし、この設定はテーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きすることができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-analyze-threshold" xreflabel="autovacuum_analyze_threshold">
      <term><varname>autovacuum_analyze_threshold</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>autovacuum_analyze_threshold</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_analyze_threshold</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the minimum number of inserted, updated or deleted tuples
        needed to trigger an <command>ANALYZE</command> in any one table.
        The default is 50 tuples.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line;
        but the setting can be overridden for individual tables by
        changing table storage parameters.
-->
どのテーブルに対しても<command>ANALYZE</command>を起動するのに必要な、挿入、更新、もしくは削除されたタプルの最小数を指定します。
デフォルトは50タプルです。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
この設定はテーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きすることができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-vacuum-scale-factor" xreflabel="autovacuum_vacuum_scale_factor">
      <term><varname>autovacuum_vacuum_scale_factor</varname> (<type>floating point</type>)
      <indexterm>
       <primary><varname>autovacuum_vacuum_scale_factor</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_vacuum_scale_factor</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies a fraction of the table size to add to
        <varname>autovacuum_vacuum_threshold</varname>
        when deciding whether to trigger a <command>VACUUM</command>.
        The default is 0.2 (20% of table size).
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line;
        but the setting can be overridden for individual tables by
        changing table storage parameters.
-->
<command>VACUUM</command>を起動するか否かを決定するときに、<varname>autovacuum_vacuum_threshold</varname>に足し算するテーブル容量の割合を指定します。
デフォルトは0.2（テーブルサイズの20%）です。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されますが、テーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きすることができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-vacuum-insert-scale-factor" xreflabel="autovacuum_vacuum_insert_scale_factor">
      <term><varname>autovacuum_vacuum_insert_scale_factor</varname> (<type>floating point</type>)
      <indexterm>
       <primary><varname>autovacuum_vacuum_insert_scale_factor</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_vacuum_insert_scale_factor</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies a fraction of the table size to add to
        <varname>autovacuum_vacuum_insert_threshold</varname>
        when deciding whether to trigger a <command>VACUUM</command>.
        The default is 0.2 (20% of table size).
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line;
        but the setting can be overridden for individual tables by
        changing table storage parameters.
-->
<command>VACUUM</command>を起動するかどうか決める際の<varname>autovacuum_vacuum_insert_threshold</varname>に追加するテーブルサイズの割合を指定します。
デフォルトは0.2（テーブルサイズの20%）です。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されますが、テーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きすることができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-analyze-scale-factor" xreflabel="autovacuum_analyze_scale_factor">
      <term><varname>autovacuum_analyze_scale_factor</varname> (<type>floating point</type>)
      <indexterm>
       <primary><varname>autovacuum_analyze_scale_factor</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_analyze_scale_factor</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies a fraction of the table size to add to
        <varname>autovacuum_analyze_threshold</varname>
        when deciding whether to trigger an <command>ANALYZE</command>.
        The default is 0.1 (10% of table size).
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line;
        but the setting can be overridden for individual tables by
        changing table storage parameters.
-->
<command>ANALYZE</command>を起動するか否かを決定するときに、<varname>autovacuum_analyze_threshold</varname>に足し算するテーブル容量の割合を指定します。
デフォルトは0.1（テーブルサイズの10%）です。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインでのみで設定されます。
この設定はテーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きされます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-freeze-max-age" xreflabel="autovacuum_freeze_max_age">
      <term><varname>autovacuum_freeze_max_age</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>autovacuum_freeze_max_age</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_freeze_max_age</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the maximum age (in transactions) that a table's
        <structname>pg_class</structname>.<structfield>relfrozenxid</structfield> field can
        attain before a <command>VACUUM</command> operation is forced
        to prevent transaction ID wraparound within the table.
        Note that the system will launch autovacuum processes to
        prevent wraparound even when autovacuum is otherwise disabled.
-->
トランザクションID周回を防ぐために<command>VACUUM</command>操作が強制される前までにテーブルの<structname>pg_class</structname>.<structfield>relfrozenxid</structfield> フィールドが到達できる最大（トランザクションにおける）年代を指定します。
自動バキュームが無効であった時でも、システムは周回を防ぐために自動バキューム子プロセスを起動することに注意してください。
       </para>

       <para>
<!--
        Vacuum also allows removal of old files from the
        <filename>pg_xact</filename> subdirectory, which is why the default
        is a relatively low 200 million transactions.
        This parameter can only be set at server start, but the setting
        can be reduced for individual tables by
        changing table storage parameters.
        For more information see <xref linkend="vacuum-for-wraparound"/>.
-->
vacuumは同時に<filename>pg_xact</filename>サブディレクトリから古いファイルの削除を許可します。
これが、比較的低い2億トランザクションがデフォルトである理由です。
このパラメータはサーバ起動時にのみ設定可能です。
しかし、この設定はテーブルストレージパラメータの変更により、それぞれのテーブルで減らすことができます。
詳細は<xref linkend="vacuum-for-wraparound"/>を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-multixact-freeze-max-age" xreflabel="autovacuum_multixact_freeze_max_age">
      <term><varname>autovacuum_multixact_freeze_max_age</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>autovacuum_multixact_freeze_max_age</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_multixact_freeze_max_age</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the maximum age (in multixacts) that a table's
        <structname>pg_class</structname>.<structfield>relminmxid</structfield> field can
        attain before a <command>VACUUM</command> operation is forced to
        prevent multixact ID wraparound within the table.
        Note that the system will launch autovacuum processes to
        prevent wraparound even when autovacuum is otherwise disabled.
-->
トランザクションID周回を防ぐために<command>VACUUM</command>操作が強制される前までにテーブルの<structname>pg_class</structname>.<structfield>relminmxid</structfield> フィールドが到達できる最大（マルチトランザクションにおける）年代を指定します。
自動バキュームが無効であった時でも、システムは周回を防ぐために自動バキューム子プロセスを起動することに注意してください。
       </para>

       <para>
<!--
        Vacuuming multixacts also allows removal of old files from the
        <filename>pg_multixact/members</filename> and <filename>pg_multixact/offsets</filename>
        subdirectories, which is why the default is a relatively low
        400 million multixacts.
        This parameter can only be set at server start, but the setting can
        be reduced for individual tables by changing table storage parameters.
        For more information see <xref linkend="vacuum-for-multixact-wraparound"/>.
-->
またマルチトランザクションIDのvacuumは<filename>pg_multixact</filename>と<filename>pg_multixact/offsets</filename>サブディレクトリから古いファイルの削除します。
これがデフォルトが4億トランザクションをやや下回る理由です。
このパラメータはサーバ起動時にのみ設定可能です。
しかし、この設定はテーブルストレージパラメータの変更により、それぞれのテーブルで減らすことができます。
詳細は<xref linkend="vacuum-for-multixact-wraparound"/>を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-vacuum-cost-delay" xreflabel="autovacuum_vacuum_cost_delay">
      <term><varname>autovacuum_vacuum_cost_delay</varname> (<type>floating point</type>)
      <indexterm>
       <primary><varname>autovacuum_vacuum_cost_delay</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_vacuum_cost_delay</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the cost delay value that will be used in automatic
        <command>VACUUM</command> operations.  If -1 is specified, the regular
        <xref linkend="guc-vacuum-cost-delay"/> value will be used.
        If this value is specified without units, it is taken as milliseconds.
        The default value is 2 milliseconds.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line;
        but the setting can be overridden for individual tables by
        changing table storage parameters.
-->
自動<command>VACUUM</command>操作に使用されるコスト遅延値を指定します。
-1に指定されると、一定の <xref linkend="guc-vacuum-cost-delay"/>の値が使用されます。
この値が単位なしで指定された場合は、ミリ秒単位であるとみなします。
デフォルト値は2ミリ秒です。
このパラメータは<filename>postgresql.conf</filename>ファイル内、またはサーバのコマンドラインのみで設定可能です。
この設定はテーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きすることができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-autovacuum-vacuum-cost-limit" xreflabel="autovacuum_vacuum_cost_limit">
      <term><varname>autovacuum_vacuum_cost_limit</varname> (<type>integer</type>)
      <indexterm>
       <primary><varname>autovacuum_vacuum_cost_limit</varname></primary>
       <secondary>configuration parameter</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>autovacuum_vacuum_cost_limit</varname></primary>
       <secondary>設定パラメータ</secondary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Specifies the cost limit value that will be used in automatic
        <command>VACUUM</command> operations.  If -1 is specified (which is the
        default), the regular
        <xref linkend="guc-vacuum-cost-limit"/> value will be used.  Note that
        the value is distributed proportionally among the running autovacuum
        workers, if there is more than one, so that the sum of the limits for
        each worker does not exceed the value of this variable.
        This parameter can only be set in the <filename>postgresql.conf</filename>
        file or on the server command line;
        but the setting can be overridden for individual tables by
        changing table storage parameters.
-->
自動<command>VACUUM</command>操作に使用されるコスト限界値を指定します。
（デフォルトの）-1が指定されると、一定の <xref linkend="guc-vacuum-cost-limit"/>の値が使用されます。
この値は、実行中の自動バキュームワーカが複数存在する場合ワーカすべてに比例分配されることに注意してください。
したがって各ワーカの制限を足し合わせてもこの変数による制限を超えることはありません。
このパラメータは<filename>postgresql.conf</filename>ファイル、または、サーバのコマンドラインのみで設定可能です。
この設定はテーブルストレージパラメータの変更により、それぞれのテーブルに対して上書きすることができます。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect1>

   <sect1 id="runtime-config-client">
<!--
    <title>Client Connection Defaults</title>
-->
    <title>クライアント接続デフォルト</title>

    <sect2 id="runtime-config-client-statement">
<!--
     <title>Statement Behavior</title>
-->
     <title>文の動作</title>
     <variablelist>

     <varlistentry id="guc-client-min-messages" xreflabel="client_min_messages">
      <term><varname>client_min_messages</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>client_min_messages</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>client_min_messages</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Controls which
        <link linkend="runtime-config-severity-levels">message levels</link>
        are sent to the client.
        Valid values are <literal>DEBUG5</literal>,
        <literal>DEBUG4</literal>, <literal>DEBUG3</literal>, <literal>DEBUG2</literal>,
        <literal>DEBUG1</literal>, <literal>LOG</literal>, <literal>NOTICE</literal>,
        <literal>WARNING</literal>, and <literal>ERROR</literal>.
        Each level includes all the levels that follow it.  The later the level,
        the fewer messages are sent.  The default is
        <literal>NOTICE</literal>.  Note that <literal>LOG</literal> has a different
        rank here than in <xref linkend="guc-log-min-messages"/>.
-->
どの<link linkend="runtime-config-severity-levels">メッセージレベル</link>をクライアントに送るかを管理します。有効な値は、<literal>DEBUG5</literal>、<literal>DEBUG4</literal>、<literal>DEBUG3</literal>、<literal>DEBUG2</literal>、<literal>DEBUG1</literal>、<literal>LOG</literal>、<literal>NOTICE</literal>、<literal>WARNING</literal>および<literal>ERROR</literal>です。
それぞれのレベルはそれに続く全てのレベルを包含します。
レベルが後の方になるにつれ、より少ないメッセージが送られます。
デフォルトは<literal>NOTICE</literal>です。
ここでの<literal>LOG</literal>の優先順位が<xref linkend="guc-log-min-messages"/>の場合と異なることに注意してください。
       </para>
       <para>
<!--
        <literal>INFO</literal> level messages are always sent to the client.
-->
<literal>INFO</literal>レベルのメッセージは常にクライアントに送られます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-search-path" xreflabel="search_path">
      <term><varname>search_path</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>search_path</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>search_path</varname>設定パラメータ</primary>
      </indexterm>
      <indexterm><primary>path</primary><secondary>for schemas</secondary></indexterm>
      <indexterm><primary>パス</primary><secondary>スキーマへの</secondary></indexterm>
      </term>
      <listitem>
       <para>
<!--
        This variable specifies the order in which schemas are searched
        when an object (table, data type, function, etc.) is referenced by a
        simple name with no schema specified.  When there are objects of
        identical names in different schemas, the one found first
        in the search path is used.  An object that is not in any of the
        schemas in the search path can only be referenced by specifying
        its containing schema with a qualified (dotted) name.
-->
この変数は、オブジェクト（テーブル、データ型、関数など）がスキーマを指定されていない単純な名前で参照されている場合に、スキーマを検索する順番を指定します。
異なるスキーマに同じ名前のオブジェクトがある場合、検索パスで最初に見つかったものが使用されます。
検索パス内のどのスキーマにも存在しないオブジェクトを参照するには、修飾名（ドット付き）でそのオブジェクトが含まれるスキーマを指定する必要があります。
       </para>

       <para>
<!--
        The value for <varname>search_path</varname> must be a comma-separated
        list of schema names.  Any name that is not an existing schema, or is
        a schema for which the user does not have <literal>USAGE</literal>
        permission, is silently ignored.
-->
<varname>search_path</varname>の値は、スキーマの名前をカンマで区切った一覧でなければなりません。
存在していないスキーマ、またはユーザが<literal>USAGE</literal>権限を所有していないスキーマは警告なしに無視されます。
       </para>

       <para>
<!--
        If one of the list items is the special name
        <literal>$user</literal>, then the schema having the name returned by
        <function>CURRENT_USER</function> is substituted, if there is such a schema
        and the user has <literal>USAGE</literal> permission for it.
        (If not, <literal>$user</literal> is ignored.)
-->
もしそのようなスキーマが存在し、ユーザがそれにたいして<literal>USAGE</literal>権限を所有している場合、一覧内の項目の1つが特別な名前である<literal>$user</literal>の場合、<function>CURRENT_USER</function>と同じ名前を持つスキーマがあれば、そのスキーマが置換されます。
（このような名前空間がない場合は<literal>$user</literal>は無視されます。）
       </para>

       <para>
<!--
        The system catalog schema, <literal>pg_catalog</literal>, is always
        searched, whether it is mentioned in the path or not.  If it is
        mentioned in the path then it will be searched in the specified
        order.  If <literal>pg_catalog</literal> is not in the path then it will
        be searched <emphasis>before</emphasis> searching any of the path items.
-->
システムカタログのスキーマである<literal>pg_catalog</literal>は、パスでの指定の有無にかかわらず、常に検索されます。
パスで指定されている場合は、指定された順序で検索されます。
<literal>pg_catalog</literal>がパスに含まれていない場合、パスに含まれる項目を検索する<emphasis>前に</emphasis>検索が行われます
       </para>

       <!-- To further split hairs, funcname('foo') does not use the temporary
            schema, even when it considers typname='funcname'.  This paragraph
            refers to function names in a loose sense, "pg_proc.proname or
            func_name grammar production". -->
       <!-- 細かい話ですが、typnameが'funcname'である場合でも、funcname('foo')は一時スキーマを使いません。
            この段落では、関数名とは「pg_proc.pronameあるいは文法生成物のfunc_name」のどちらでも良いという意味で使用しています。-->
       <para>
<!--
        Likewise, the current session's temporary-table schema,
        <literal>pg_temp_<replaceable>nnn</replaceable></literal>, is always searched if it
        exists.  It can be explicitly listed in the path by using the
        alias <literal>pg_temp</literal><indexterm><primary>pg_temp</primary></indexterm>.  If it is not listed in the path then
        it is searched first (even before <literal>pg_catalog</literal>).  However,
        the temporary schema is only searched for relation (table, view,
        sequence, etc.) and data type names.  It is never searched for
        function or operator names.
-->
《マッチ度[87.454545]》同様に、現在のセッションの一時テーブルスキーマ<literal>pg_temp_<replaceable>nnn</replaceable></literal>も、存在すれば常に検索されます。
これは<literal>pg_temp</literal><indexterm><primary>pg_temp</primary></indexterm>という別名を使用してパスに明示的に列挙させることができます。
パスに列挙されていない場合、最初に（<literal>pg_catalog</literal>よりも前であっても）検索されます。
しかし、一時スキーマはリレーション（テーブル、ビュー、シーケンスなど）とデータ型名に対してのみ検索されます。
関数や演算子名に対してはまったく検索されません。
       </para>

       <para>
<!--
        When objects are created without specifying a particular target
        schema, they will be placed in the first valid schema named in
        <varname>search_path</varname>.  An error is reported if the search
        path is empty.
-->
対象となる特定のスキーマを指定せずにオブジェクトが作成された場合、それらのオブジェクトは<varname>search_path</varname>で名前を付けられた最初に有効となっているスキーマに配置されます。
検索パスが空の場合、エラーが報告されます。
       </para>

       <para>
<!--
        The default value for this parameter is
        <literal>"$user", public</literal>.
        This setting supports shared use of a database (where no users
        have private schemas, and all share use of <literal>public</literal>),
        private per-user schemas, and combinations of these.  Other
        effects can be obtained by altering the default search path
        setting, either globally or per-user.
-->
このパラメータのデフォルト値は<literal>"$user", public</literal>です。
この設定はデータベースの共有（どのユーザも非公開のスキーマを持たず、全員が<literal>public</literal>を共有）、ユーザごとの非公開のスキーマ、およびこれらの組み合わせがサポートします。
デフォルトの検索パスの設定を全体的またはユーザごとに変更することで、その他の効果を得ることもできます。
       </para>

       <para>
<!--
        For more information on schema handling, see
        <xref linkend="ddl-schemas"/>.  In particular, the default
        configuration is suitable only when the database has a single user or
        a few mutually-trusting users.
-->
スキーマの扱いについての詳細は、<xref linkend="ddl-schemas"/>をご覧ください。
とりわけ、デフォルトの設定はデータベースのユーザが、一人あるいはお互いに信頼できる少数のユーザだけである場合にのみ適切です。
       </para>

       <para>
<!--
        The current effective value of the search path can be examined
        via the <acronym>SQL</acronym> function
        <function>current_schemas</function>
        (see <xref linkend="functions-info"/>).
        This is not quite the same as
        examining the value of <varname>search_path</varname>, since
        <function>current_schemas</function> shows how the items
        appearing in <varname>search_path</varname> were resolved.
-->
<acronym>SQL</acronym>関数の<function>current_schemas</function> によって、検索パスの現在の有効な値を調べることができます（<xref linkend="functions-info"/>を参照してください）。
これは、<varname>search_path</varname> の値を調べるのとは異なります。
<function>current_schemas</function>は、<varname>search_path</varname>に現れる項目がどのように解決されたかを表すからです。
       </para>

      </listitem>
     </varlistentry>

     <varlistentry id="guc-row-security" xreflabel="row_security">
      <term><varname>row_security</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>row_security</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>row_security</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This variable controls whether to raise an error in lieu of applying a
        row security policy.  When set to <literal>on</literal>, policies apply
        normally.  When set to <literal>off</literal>, queries fail which would
        otherwise apply at least one policy.  The default is <literal>on</literal>.
        Change to <literal>off</literal> where limited row visibility could cause
        incorrect results; for example, <application>pg_dump</application> makes that
        change by default.  This variable has no effect on roles which bypass
        every row security policy, to wit, superusers and roles with
        the <literal>BYPASSRLS</literal> attribute.
-->
この設定値は、行セキュリティポリシーの適用によってエラーを生じさせるかどうかを制御します。
<literal>on</literal>に設定すると、通常通りポリシーが適用されます。
<literal>off</literal>にすると、少なくともひとつのポリシーが適用されたクエリは失敗します。
デフォルトは<literal>on</literal>です。
行の可視性が制限されている場合、<literal>off</literal>にすると不正な結果を招くことがあります。
たとえば、<application>pg_dump</application>はデフォルトで<literal>off</literal>にしています。
この設定値は、行セキュリティポリシーを迂回するロールには効果がありません。
それはすなわち、<literal>BYPASSRLS</literal>アトリビュートを持つスーパーユーザです。
       </para>

       <para>
<!--
        For more information on row security policies,
        see <xref linkend="sql-createpolicy"/>.
-->
行セキュリティポリシーについての更なる情報は<xref linkend="sql-createpolicy"/>をご覧ください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-default-table-access-method" xreflabel="default_table_access_method">
      <term><varname>default_table_access_method</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>default_table_access_method</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>default_table_access_method</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This parameter specifies the default table access method to use when
        creating tables or materialized views if the <command>CREATE</command>
        command does not explicitly specify an access method, or when
        <command>SELECT ... INTO</command> is used, which does not allow
        specifying a table access method. The default is <literal>heap</literal>.
-->
このパラメータは、テーブルあるいはマテリアライズドビューの作成時に<command>CREATE</command>コマンドが明示的にアクセスメソッドを指定しないか、あるいはテーブルアクセスメソッドを指定できない<command>SELECT ... INTO</command>が利用された時に使われるデフォルトのテーブルアクセスメソッドを指定します。
デフォルトは<literal>heap</literal>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-default-tablespace" xreflabel="default_tablespace">
      <term><varname>default_tablespace</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>default_tablespace</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>default_tablespace</varname>設定パラメータ</primary>
      </indexterm>
      <indexterm><primary>tablespace</primary><secondary>default</secondary></indexterm>
      <indexterm><primary>テーブル空間</primary><secondary>デフォルト</secondary></indexterm>
      </term>
      <listitem>
       <para>
<!--
        This variable specifies the default tablespace in which to create
        objects (tables and indexes) when a <command>CREATE</command> command does
        not explicitly specify a tablespace.
-->
この変数は、<command>CREATE</command>コマンドで明示的にテーブル空間を指定していない場合にオブジェクトの作成先となるデフォルトのテーブル空間を指定します。
       </para>

       <para>
<!--
        The value is either the name of a tablespace, or an empty string
        to specify using the default tablespace of the current database.
        If the value does not match the name of any existing tablespace,
        <productname>PostgreSQL</productname> will automatically use the default
        tablespace of the current database.  If a nondefault tablespace
        is specified, the user must have <literal>CREATE</literal> privilege
        for it, or creation attempts will fail.
-->
値はテーブル空間名、もしくは現在のデータベースのデフォルトのテーブル空間を使用することを意味する空文字列です。
この値が既存のテーブル空間名と一致しない場合、<productname>PostgreSQL</productname>は自動的に現在のデータベースのデフォルトのテーブル空間を使用します。
デフォルト以外のテーブル空間が指定された場合、ユーザはそのテーブル空間で<literal>CREATE</literal>権限を持たなければなりません。
さもなくば作成に失敗します。
       </para>

       <para>
<!--
        This variable is not used for temporary tables; for them,
        <xref linkend="guc-temp-tablespaces"/> is consulted instead.
-->
この変数は一時テーブル向けには使用されません。
一時テーブル向けには代わりに<xref linkend="guc-temp-tablespaces"/>が考慮されます。
       </para>

       <para>
<!--
        This variable is also not used when creating databases.
        By default, a new database inherits its tablespace setting from
        the template database it is copied from.
-->
また、この変数はデータベース作成時には使用されません。
デフォルトでは、新しいデータベースはコピー元のテンプレートデータベースからテーブル空間の設定を引き継ぎます。
       </para>

       <para>
<!--
        If this parameter is set to a value other than the empty string
        when a partitioned table is created, the partitioned table's
        tablespace will be set to that value, which will be used as
        the default tablespace for partitions created in the future,
        even if <varname>default_tablespace</varname> has changed since then.
-->
パーティションテーブルが作られたときにこのパラメータが空文字以外に設定されていると、<varname>default_tablespace</varname>がその後変更されたとしても、パーティションテーブルのテープル空間はその値になり、今後作られるパーティションのデフォルトテーブル空間として使われます。
       </para>

       <para>
<!--
        For more information on tablespaces,
        see <xref linkend="manage-ag-tablespaces"/>.
-->
テーブル空間に付いてより詳細な情報は<xref linkend="manage-ag-tablespaces"/>を参照してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-default-toast-compression" xreflabel="default_toast_compression">
      <term><varname>default_toast_compression</varname> (<type>enum</type>)
      <indexterm>
       <primary><varname>default_toast_compression</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>default_toast_compression</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This variable sets the default
        <link linkend="storage-toast">TOAST</link>
        compression method for values of compressible columns.
        (This can be overridden for individual columns by setting
        the <literal>COMPRESSION</literal> column option in
        <command>CREATE TABLE</command> or
        <command>ALTER TABLE</command>.)
        The supported compression methods are <literal>pglz</literal> and
        (if <productname>PostgreSQL</productname> was compiled with
        <option>&#45;-with-lz4</option>) <literal>lz4</literal>.
        The default is <literal>pglz</literal>.
-->
この変数は圧縮可能な列の値のデフォルト<link linkend="storage-toast">TOAST</link>圧縮方式を設定します。
（これは<command>CREATE TABLE</command>あるいは<command>ALTER TABLE</command>の<literal>COMPRESSION</literal>列オプションを設定することにより、置き換えることができます。）
サポートされている圧縮方式は、<literal>pglz</literal>と<literal>lz4</literal>（<productname>PostgreSQL</productname>が<option>--with-lz4</option>でコンパイルされている場合）です。
デフォルトは<literal>pglz</literal>です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-temp-tablespaces" xreflabel="temp_tablespaces">
      <term><varname>temp_tablespaces</varname> (<type>string</type>)
      <indexterm>
       <primary><varname>temp_tablespaces</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>temp_tablespaces</varname>設定パラメータ</primary>
      </indexterm>
      <indexterm><primary>tablespace</primary><secondary>temporary</secondary></indexterm>
      <indexterm><primary>テーブル空間</primary><secondary>一時的</secondary></indexterm>
      </term>
      <listitem>
       <para>
<!--
        This variable specifies tablespaces in which to create temporary
        objects (temp tables and indexes on temp tables) when a
        <command>CREATE</command> command does not explicitly specify a tablespace.
        Temporary files for purposes such as sorting large data sets
        are also created in these tablespaces.
-->
この変数は、<command>CREATE</command>コマンドで明示的にテーブル空間が指定されない場合に、生成する一時オブジェクト（一時テーブルと一時テーブル上のインデックス）を格納するテーブル空間（複数可）を指定します。
大規模データ集合のソートなどを目的とした一時ファイルもまた、このテーブル空間（複数可）に作成されます。
       </para>

       <para>
<!--
        The value is a list of names of tablespaces.  When there is more than
        one name in the list, <productname>PostgreSQL</productname> chooses a random
        member of the list each time a temporary object is to be created;
        except that within a transaction, successively created temporary
        objects are placed in successive tablespaces from the list.
        If the selected element of the list is an empty string,
        <productname>PostgreSQL</productname> will automatically use the default
        tablespace of the current database instead.
-->
この値はテーブル空間名のリストです。
リストに複数の名前が存在する場合、一時オブジェクトが作成される度に<productname>PostgreSQL</productname>は無作為にリストから要素を選択します。
トランザクションの内側は例外で、連続して作成される一時オブジェクトはそのリストで連続するテーブル空間に格納されます。
リスト内の選択された要素が空文字列だった場合、<productname>PostgreSQL</productname>は自動的に現在のデータベースのデフォルトのテーブル空間を代わりに使用します。
       </para>

       <para>
<!--
        When <varname>temp_tablespaces</varname> is set interactively, specifying a
        nonexistent tablespace is an error, as is specifying a tablespace for
        which the user does not have <literal>CREATE</literal> privilege.  However,
        when using a previously set value, nonexistent tablespaces are
        ignored, as are tablespaces for which the user lacks
        <literal>CREATE</literal> privilege.  In particular, this rule applies when
        using a value set in <filename>postgresql.conf</filename>.
-->
<varname>temp_tablespaces</varname>を対話式に設定する場合、存在しないテーブル空間を指定するとエラーになります。
ユーザが<literal>CREATE</literal>権限を持たないテーブル空間を指定した場合も同様です。
しかし事前に設定された値を使用する場合、存在しないテーブル空間は無視されます。
ユーザが<literal>CREATE</literal>権限を持たないテーブル空間も同様です。
具体的には、この規則は<filename>postgresql.conf</filename>内で設定した値を使用する場合に適用されます。
       </para>

       <para>
<!--
        The default value is an empty string, which results in all temporary
        objects being created in the default tablespace of the current
        database.
-->
デフォルト値は空文字列です。
この結果、すべての一時オブジェクトは現在のデータベースのデフォルトのテーブル空間内に作成されます。
       </para>

       <para>
<!--
        See also <xref linkend="guc-default-tablespace"/>.
-->
<xref linkend="guc-default-tablespace"/>も参照してください
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-check-function-bodies" xreflabel="check_function_bodies">
      <term><varname>check_function_bodies</varname> (<type>boolean</type>)
      <indexterm>
       <primary><varname>check_function_bodies</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>check_function_bodies</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        This parameter is normally on. When set to <literal>off</literal>, it
        disables validation of the routine body string during <xref
        linkend="sql-createfunction"/> and <xref
        linkend="sql-createprocedure"/>.  Disabling validation avoids side
        effects of the validation process, in particular preventing false
        positives due to problems such as forward references.
        Set this parameter
        to <literal>off</literal> before loading functions on behalf of other
        users; <application>pg_dump</application> does so automatically.
-->
このパラメータは通常オンです。
<literal>off</literal>に設定すると、<xref linkend="sql-createfunction"/>と<xref linkend="sql-createprocedure"/>の実行中の関数本体文字列の妥当性検証を無効にします。
妥当性検証を無効にするとその妥当性検証処理の副作用を避け、前方参照による問題から起こる偽陽性(false positive)を避けることができます。
関数をロードする前にこのパラメータを他のユーザとして<literal>off</literal>にします。
<application>pg_dump</application>はこれを自動的に行います。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="guc-default-transaction-isolation" xreflabel="default_transaction_isolation">
      <term><varname>default_transaction_isolation</varname> (<type>enum</type>)
      <indexterm>
       <primary>transaction isolation level</primary>
       <secondary>setting default</secondary>
      </indexterm>
      <indexterm>
       <primary>トランザクション分離レベル</primary>
       <secondary>デフォルト設定</secondary>
      </indexterm>
      <indexterm>
       <primary><varname>default_transaction_isolation</varname> configuration parameter</primary>
      </indexterm>
      <indexterm>
       <primary><varname>default_transaction_isolation</varname>設定パラメータ</primary>
      </indexterm>
      </term>
      <listitem>
       <para>
<!--
        Each SQL transaction has an isolation level, which can be
        either <quote>read uncommitted</quote>, <quote>read
        committed</quote>, <quote>repeatable read</quote>, or
        <quote>serializable</quote>.  This parameter controls the
        default isolation level of each new transaction. The default
        is <quote>read committed</quote>.
-->
SQLトランザクションはそれぞれ、<quote>read uncommitted</quote>、<quote>read committed</quote>、<quote>repeatable read</quote>、または<quote>serializable</quote>のいずれかの分離レベルを持ちます。
このパラメータは各新規トランザクションのデフォルトの分離レベルを制御します。
デフォルトは<quote>read committed</quote>です。
       </para>

       <para>
<!--
        Consult <xref linkend="mvcc"/> and <xref
        linkend="sql-set-transaction"/> for more information.
-->
より詳細は <xref linkend="mvcc"/> および <xref linkend="sql-set-transaction"/> を調べてください。
       </para>
      </listitem>
     </varlistentry>

<!-- split-config2-end -->
