<!-- doc/src/sgml/charset.sgml -->

<chapter id="charset">
<!--
 <title>Localization</title>
-->
 <title>ローカライゼーション</title>

 <para>
<!--
  This chapter describes the available localization features from the
  point of view of the administrator.
  <productname>PostgreSQL</productname> supports two localization
  facilities:
-->
本章では、管理者の立場から見た、利用可能なローカライゼーション機能について説明します。
<productname>PostgreSQL</productname>では、2つの手法でローカライゼーションをサポートします。

   <itemizedlist>
    <listitem>
     <para>
<!--
      Using the locale features of the operating system to provide
      locale-specific collation order, number formatting, translated
      messages, and other aspects.
      This is covered in <xref linkend="locale"/> and
      <xref linkend="collation"/>.
-->
ロケール固有の照合順序、数字の書式、翻訳されたメッセージなどを提供するためオペレーティングシステムのロケールの機能を使います。
これは<xref linkend="locale"/>と<xref linkend="collation"/>内で解説されています。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Providing a number of different character sets to support storing text
      in all kinds of languages, and providing character set translation
      between client and server.
      This is covered in <xref linkend="multibyte"/>.
-->
全ての種類の言語によるテキストの格納のサポート、およびクライアントサーバ間の文字集合翻訳の提供を行うため、多くの文字集合を提供します。
これは<xref linkend="multibyte"/>内で解説されています。
     </para>
    </listitem>
   </itemizedlist>
  </para>


 <sect1 id="locale">
<!--
  <title>Locale Support</title>
-->
  <title>ロケールのサポート</title>

  <indexterm zone="locale"><primary>locale</primary></indexterm>
  <indexterm zone="locale"><primary>ロケール</primary></indexterm>

  <para>
<!--
   <firstterm>Locale</firstterm> support refers to an application respecting
   cultural preferences regarding alphabets, sorting, number
   formatting, etc.  <productname>PostgreSQL</productname> uses the standard ISO
   C and <acronym>POSIX</acronym> locale facilities provided by the server operating
   system.  For additional information refer to the documentation of your
   system.
-->
<firstterm>ロケール</firstterm>のサポートはアルファベット、並べ替え、数字の書式など文化的嗜好を配慮したアプリケーションを対象にします。
<productname>PostgreSQL</productname>は、サーバのオペレーティングシステムが提供する、標準ISO Cと<acronym>POSIX</acronym>のロケール機能を使用します。
これ以上の情報についてはお使いのシステムのドキュメントを参照してください。
  </para>

  <sect2 id="locale-overview">
<!--
   <title>Overview</title>
-->
   <title>概要</title>

   <para>
<!--
    Locale support is automatically initialized when a database
    cluster is created using <command>initdb</command>.
    <command>initdb</command> will initialize the database cluster
    with the locale setting of its execution environment by default,
    so if your system is already set to use the locale that you want
    in your database cluster then there is nothing else you need to
    do.  If you want to use a different locale (or you are not sure
    which locale your system is set to), you can instruct
    <command>initdb</command> exactly which locale to use by
    specifying the <option>&#45;-locale</option> option. For example:
-->
ロケールのサポートは、<command>initdb</command>を使用してデータベースクラスタを作成する時に自動で初期化されます。
<command>initdb</command>は、デフォルトでその実行環境のロケール設定に従ってデータベースクラスタを初期化します。
そのため、システムがデータベースクラスタで使用したいロケールを使用するように既に設定してある場合は何も行う必要はありません。
違うロケールを使用したい場合（またはシステムのロケール設定が不明な場合）は、<command>initdb</command>の<option>--locale</option>オプションで希望のロケールを指定することができます。
以下に例を示します。
<screen>
initdb --locale=sv_SE
</screen>
   </para>

   <para>
<!--
    This example for Unix systems sets the locale to Swedish
    (<literal>sv</literal>) as spoken
    in Sweden (<literal>SE</literal>).  Other possibilities might include
    <literal>en_US</literal> (U.S. English) and <literal>fr_CA</literal> (French
    Canadian).  If more than one character set can be used for a
    locale then the specifications can take the form
    <replaceable>language_territory.codeset</replaceable>.  For example,
    <literal>fr_BE.UTF-8</literal> represents the French language (fr) as
    spoken in Belgium (BE), with a <acronym>UTF-8</acronym> character set
    encoding.
-->
Unixシステム用のこの例の設定はロケールをスウェーデン（<literal>SE</literal>）で使用されているスウェーデン語（<literal>sv</literal>）に合わせています。
他にも<literal>en_US</literal>（米国英語）や<literal>fr_CA</literal>（カナダのフランス語）などの設定もできます。
ロケールに複数の文字集合が使用可能であれば、<replaceable>language_territory.codeset</replaceable>のように記述することができます。
例えば、<literal>fr_BE.UTF-8</literal>はベルギー（BE）で使用されているフランス語（fr）で<acronym>UTF-8</acronym>の文字集合を表します。
   </para>

   <para>
<!--
    What locales are available on your
    system under what names depends on what was provided by the operating
    system vendor and what was installed.  On most Unix systems, the command
    <literal>locale -a</literal> will provide a list of available locales.
    Windows uses more verbose locale names, such as <literal>German_Germany</literal>
    or <literal>Swedish_Sweden.1252</literal>, but the principles are the same.
-->
お使いのシステムでどのロケールがどういう名前で使えるかはオペレーティングシステムのベンダがどのようなものを提供しているかと、何がインストールされているかに依存します。
ほとんどのUnixシステムでは、<literal>locale -a</literal>というコマンドで利用可能なロケールの一覧を入手できます。
Windowsは、<literal>German_Germany</literal>や<literal>Swedish_Sweden.1252</literal>のようなもっと冗長なロケール名を使用しますが、原理は同じです。
   </para>

   <para>
<!--
    Occasionally it is useful to mix rules from several locales, e.g.,
    use English collation rules but Spanish messages.  To support that, a
    set of locale subcategories exist that control only certain
    aspects of the localization rules:
-->
英語の照合順序規則でスペイン語のメッセージを使用する時など、時として複数のロケールの規則を併用すると便利です。
これをサポートするために、ロケールには以下のようなローカライゼーション規則の特定の箇所だけを管理する一連のサブカテゴリがあります。

    <informaltable>
     <tgroup cols="2">
      <colspec colname="col1" colwidth="1*"/>
      <colspec colname="col2" colwidth="3*"/>
      <tbody>
       <row>
        <entry><envar>LC_COLLATE</envar></entry>
<!--
        <entry>String sort order</entry>
-->
<entry>文字列の並べ替え順</entry>
       </row>
       <row>
        <entry><envar>LC_CTYPE</envar></entry>
<!--
        <entry>Character classification (What is a letter? Its upper-case equivalent?)</entry>
-->
<entry>文字の分類（文字とはどんなもの？大文字小文字を区別しない？）</entry>
       </row>
       <row>
        <entry><envar>LC_MESSAGES</envar></entry>
<!--
        <entry>Language of messages</entry>
-->
<entry>メッセージの言語</entry>
       </row>
       <row>
        <entry><envar>LC_MONETARY</envar></entry>
<!--
        <entry>Formatting of currency amounts</entry>
-->
<entry>通貨書式</entry>
       </row>
       <row>
        <entry><envar>LC_NUMERIC</envar></entry>
<!--
        <entry>Formatting of numbers</entry>
-->
<entry>数字の書式</entry>
       </row>
       <row>
        <entry><envar>LC_TIME</envar></entry>
<!--
        <entry>Formatting of dates and times</entry>
-->
<entry>日付と時刻の書式</entry>
       </row>
      </tbody>
     </tgroup>
    </informaltable>

<!--
    The category names translate into names of
    <command>initdb</command> options to override the locale choice
    for a specific category.  For instance, to set the locale to
    French Canadian, but use U.S. rules for formatting currency, use
    <literal>initdb &#45;-locale=fr_CA &#45;-lc-monetary=en_US</literal>.
-->
これらのカテゴリの名前は、特定のカテゴリについてのロケールの選択を上書きするための<command>initdb</command>オプションの名前としてそのまま使用できます。
例えば、ロケールをカナダのフランス語に設定しながら通貨書式については米国の規則を使用するには、<literal>initdb --locale=fr_CA --lc-monetary=en_US</literal>とします。
   </para>

   <para>
<!--
    If you want the system to behave as if it had no locale support,
    use the special locale name <literal>C</literal>, or equivalently
    <literal>POSIX</literal>.
-->
システムがロケールをサポートしていないように動作させたい場合は、特別なロケールの<literal>C</literal>、もしくは同等な<literal>POSIX</literal>を使用してください。
   </para>

   <para>
<!--
    Some locale categories must have their values
    fixed when the database is created.  You can use different settings
    for different databases, but once a database is created, you cannot
    change them for that database anymore. <literal>LC_COLLATE</literal>
    and <literal>LC_CTYPE</literal> are these categories.  They affect
    the sort order of indexes, so they must be kept fixed, or indexes on
    text columns would become corrupt.
    (But you can alleviate this restriction using collations, as discussed
    in <xref linkend="collation"/>.)
    The default values for these
    categories are determined when <command>initdb</command> is run, and
    those values are used when new databases are created, unless
    specified otherwise in the <command>CREATE DATABASE</command> command.
-->
一部のロケールカテゴリでは、その値がデータベース生成時に固定されていなければならないものがあります。
他のデータベースで他の設定を使用することができますが、一度データベースが生成されると、そのデータベースでは変更することができません。
<literal>LC_COLLATE</literal>と<literal>LC_CTYPE</literal>がこれらのカテゴリにあてはまります。
これらはインデックスのソート順に影響を及ぼすため、固定されていなければなりません。
さもないと、テキスト型の列上のインデックスは破壊されるでしょう。
（しかし<xref linkend="collation"/>内で述べられているように、照合順序を使用することで、この制限を緩和できます）
<command>initdb</command>が実行された時に、これらのカテゴリのデフォルト値は決定され、<command>CREATE DATABASE</command>コマンドで他を指定しない限り、新しいデータベースが作成されるときにこの値が使用されます。
   </para>

   <para>
<!--
    The other locale categories can be changed whenever desired
    by setting the server configuration parameters
    that have the same name as the locale categories (see <xref
    linkend="runtime-config-client-format"/> for details).  The values
    that are chosen by <command>initdb</command> are actually only written
    into the configuration file <filename>postgresql.conf</filename> to
    serve as defaults when the server is started.  If you remove these
    assignments from <filename>postgresql.conf</filename> then the
    server will inherit the settings from its execution environment.
-->
その他のロケールカテゴリは、いつでも、ロケールカテゴリと同じ名前の実行時パラメータを設定することで、希望値に変更できます
（詳細は<xref linkend="runtime-config-client-format"/>を参照してください）。
<command>initdb</command>で選択された値は、実際のところ、サーバの起動時にデフォルトとして動作するように<filename>postgresql.conf</filename>設定ファイルに書き込まれるだけです。
この代入文を<filename>postgresql.conf</filename>から削除すると、サーバは実行環境の設定をそのまま使用します。
   </para>

   <para>
<!--
    Note that the locale behavior of the server is determined by the
    environment variables seen by the server, not by the environment
    of any client.  Therefore, be careful to configure the correct locale settings
    before starting the server.  A consequence of this is that if
    client and server are set up in different locales, messages might
    appear in different languages depending on where they originated.
-->
サーバのロケールの動作はどのクライアントの環境にも依存せず、サーバが参照できる環境変数で決まります。
ですからサーバを稼働させる前に正しいロケール設定を行うように注意してください。
結果としてサーバとクライアントで異なるロケールが設定されていると、メッセージはそれらがどこから生じたかによって、異なる言語で表示されます。
   </para>

   <note>
    <para>
<!--
     When we speak of inheriting the locale from the execution
     environment, this means the following on most operating systems:
     For a given locale category, say the collation, the following
     environment variables are consulted in this order until one is
     found to be set: <envar>LC_ALL</envar>, <envar>LC_COLLATE</envar>
     (or the variable corresponding to the respective category),
     <envar>LANG</envar>.  If none of these environment variables are
     set then the locale defaults to <literal>C</literal>.
-->
実行環境のロケールをそのまま使用するということは、ほとんどのオペレーティングシステムでは次のような意味を持ちます。
指定されたロケールカテゴリ（例えば照合順序）について、設定するものが見つかるまで、以下の環境変数がこの順番で調べられます。<envar>LC_ALL</envar>、<envar>LC_COLLATE</envar>（またはそれぞれのカテゴリに対応する変数）、<envar>LANG</envar>。
これらのいずれの環境変数も設定されない場合に、ロケールはデフォルトで<literal>C</literal>に設定されます。
    </para>

    <para>
<!--
     Some message localization libraries also look at the environment
     variable <envar>LANGUAGE</envar> which overrides all other locale
     settings for the purpose of setting the language of messages.  If
     in doubt, please refer to the documentation of your operating
     system, in particular the documentation about
     <application>gettext</application>.
-->
メッセージの言語を設定する目的で、メッセージローカライゼーションライブラリの中には全てのロケール設定を上書きする環境変数<envar>LANGUAGE</envar>を検索するものがあります。
お使いのシステムでの挙動が不明ならばより詳細な情報を得るためお使いのオペレーティングシステムの文書、特に<application>gettext</application>の文書を参照してください。
    </para>
   </note>

   <para>
<!--
    To enable messages to be translated to the user's preferred language,
    <acronym>NLS</acronym> must have been selected at build time
    (<literal>configure &#45;-enable-nls</literal>).  All other locale support is
    built in automatically.
-->
ユーザの選択した言語にメッセージを翻訳できるようにするためには<acronym>NLS</acronym>を構築時に有効にする（<literal>configure --enable-nls</literal>）必要があります。
他のロケールサポートはすべて自動的に構築されます。
   </para>
  </sect2>

  <sect2 id="locale-behavior">
<!--
   <title>Behavior</title>
-->
   <title>動作</title>

   <para>
<!--
    The locale settings influence the following SQL features:
-->
ロケールの設定は以下のSQL機能に影響を与えます。

    <itemizedlist>
     <listitem>
      <para>
<!--
       Sort order in queries using <literal>ORDER BY</literal> or the standard
       comparison operators on textual data
       <indexterm><primary>ORDER BY</primary><secondary>and locales</secondary></indexterm>
-->
文字列データに対する<literal>ORDER BY</literal>または標準の比較演算子を使用した問い合わせにおける並べ替え順
<indexterm><primary>ORDER BY</primary><secondary>とロケール</secondary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       The <function>upper</function>, <function>lower</function>, and <function>initcap</function>
       functions
       <indexterm><primary>upper</primary><secondary>and locales</secondary></indexterm>
       <indexterm><primary>lower</primary><secondary>and locales</secondary></indexterm>
-->
<function>upper</function>、<function>lower</function>、<function>initcap</function>関数
<indexterm><primary>upper</primary><secondary>とロケール</secondary></indexterm>
<indexterm><primary>lower</primary><secondary>とロケール</secondary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Pattern matching operators (<literal>LIKE</literal>, <literal>SIMILAR TO</literal>,
       and POSIX-style regular expressions); locales affect both case
       insensitive matching and the classification of characters by
       character-class regular expressions
       <indexterm><primary>LIKE</primary><secondary>and locales</secondary></indexterm>
       <indexterm><primary>regular expressions</primary><secondary>and locales</secondary></indexterm>
-->
（<literal>LIKE</literal>、<literal>SIMILAR TO</literal>やPOSIX形式の正規表現といった）パターンマッチング演算子では
ロケールは大文字、小文字を区別せず正規表現の文字クラスによる文字の区別に影響を及ぼします。
<indexterm><primary>LIKE</primary><secondary>とロケール</secondary></indexterm>
<indexterm><primary>正規表現</primary><secondary>とロケール</secondary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       The <function>to_char</function> family of functions
       <indexterm><primary>to_char</primary><secondary>and locales</secondary></indexterm>
-->
一群の<function>to_char</function>関数
<indexterm><primary>to_char</primary><secondary>とロケール</secondary></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       The ability to use indexes with <literal>LIKE</literal> clauses
-->
<literal>LIKE</literal>節が付いたインデックスを使用する性能
      </para>
     </listitem>
    </itemizedlist>
   </para>

   <para>
<!--
    The drawback of using locales other than <literal>C</literal> or
    <literal>POSIX</literal> in <productname>PostgreSQL</productname> is its performance
    impact. It slows character handling and prevents ordinary indexes
    from being used by <literal>LIKE</literal>. For this reason use locales
    only if you actually need them.
-->
<literal>C</literal>や<literal>POSIX</literal>以外で、<productname>PostgreSQL</productname>でロケールを使用する際の欠点は実行速度です。
ロケールは文字の扱いを遅くし、さらに<literal>LIKE</literal>で通常のインデックスが使用されなくなります。この理由から、本当に必要な時のみロケールを使用してください。
   </para>

   <para>
<!--
    As a workaround to allow <productname>PostgreSQL</productname> to use indexes
    with <literal>LIKE</literal> clauses under a non-C locale, several custom
    operator classes exist. These allow the creation of an index that
    performs a strict character-by-character comparison, ignoring
    locale comparison rules. Refer to <xref linkend="indexes-opclass"/>
    for more information.  Another approach is to create indexes using
    the <literal>C</literal> collation, as discussed in
    <xref linkend="collation"/>.
-->
C以外のロケールにおいて、<productname>PostgreSQL</productname>が<literal>LIKE</literal>句を持つインデックスを使用できるようにする回避方法として、いくつかのカスタム演算子クラスがあります。
これらを用いると、文字と文字を厳密に比較するようなインデックスや、ロケールの比較規則を無視するようなインデックスを作成できます。
詳細は<xref linkend="indexes-opclass"/>を参照してください。
もうひとつの方法は、<xref linkend="collation"/>内で解説されているような<literal>C</literal>照合順序を使用してインデックスを作成することです。
   </para>
  </sect2>

  <sect2 id="locale-selecting-locales">
<!--
   <title>Selecting Locales</title>
-->
   <title>ロケールの選択</title>

   <para>
<!--
    Locales can be selected in different scopes depending on requirements.
    The above overview showed how locales are specified using
    <command>initdb</command> to set the defaults for the entire cluster.  The
    following list shows where locales can be selected.  Each item provides
    the defaults for the subsequent items, and each lower item allows
    overriding the defaults on a finer granularity.
-->
ロケールは、要件に応じて異なる範囲で選択できます。
前述の概要では、<command>initdb</command>を使用してロケールを指定し、クラスタ全体のデフォルトを設定する方法を説明しました。
次のリストは、ロケールを選択できる場所を示しています。
各項目は後続の項目のデフォルトを提供し、下位の各項目はより細かい粒度でデフォルトを上書きできます。
   </para>

   <orderedlist>
    <listitem>
     <para>
<!--
      As explained above, the environment of the operating system provides the
      defaults for the locales of a newly initialized database cluster.  In
      many cases, this is enough: if the operating system is configured for
      the desired language/territory, by default
      <productname>PostgreSQL</productname> will also behave according
      to that locale.
-->
上で説明したように、オペレーティングシステムの環境は、新しく初期化されたデータベースクラスタのデフォルトのロケールを提供します。
多くの場合、これで十分です。
オペレーティングシステムが目的の言語/地域に設定されている場合、<productname>PostgreSQL</productname>もデフォルトでそのロケールに従って動作します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      As shown above, command-line options for <command>initdb</command>
      specify the locale settings for a newly initialized database cluster.
      Use this if the operating system does not have the locale configuration
      you want for your database system.
-->
上記のように、<command>initdb</command>のコマンドラインオプションでは、新しく初期化されたデータベースクラスタのロケール設定を指定します。
オペレーティングシステムにデータベースシステムに必要なロケール設定がない場合に使用します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      A locale can be selected separately for each database.  The SQL command
      <command>CREATE DATABASE</command> and its command-line equivalent
      <command>createdb</command> have options for that.  Use this for example
      if a database cluster houses databases for multiple tenants with
      different requirements.
-->
ロケールはデータベースごとに個別に選択できます。
SQLコマンド<command>CREATE DATABASE</command>とそれに相当するコマンドライン<command>createdb</command>には、そのためのオプションがあります。
これは、データベース・クラスタに、異なる要件を持つ複数のテナントのデータベースが格納されている場合などに使用します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Locale settings can be made for individual table columns.  This uses an
      SQL object called <firstterm>collation</firstterm> and is explained in
      <xref linkend="collation"/>.  Use this for example to sort data in
      different languages or customize the sort order of a particular table.
-->
ロケール設定は、個々のテーブル列に対して行うことができます。
これは<firstterm>照合順序</firstterm>というSQLオブジェクトを使用します。
このオブジェクトは<xref linkend="collation"/>で説明されています。
たとえば、異なる言語でデータをソートしたり、特定のテーブルのソート順をカスタマイズする場合に使用します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Finally, locales can be selected for an individual query.  Again, this
      uses SQL collation objects.  This could be used to change the sort order
      based on run-time choices or for ad-hoc experimentation.
-->
最後に、個々の問い合わせに対してロケールを選択できます。
ここでも、SQL照合オブジェクトを使用します。
これは、実行時の選択に基づいて並べ替え順序を変更する場合や、アドホックな実験に使用できます。
     </para>
    </listitem>
   </orderedlist>
  </sect2>

  <sect2 id="locale-providers">
<!--
   <title>Locale Providers</title>
-->
   <title>ロケールプロバイダ</title>

   <para>
<!--
    A locale provider specifies which library defines the locale behavior for
    collations and character classifications.
-->
ロケールプロバイダは、照合と文字分類のロケール動作を定義するライブラリを指定します。
   </para>

   <para>
<!--
    The commands and tools that select the locale settings, as described
    above, each have an option to select the locale provider. Here is an
    example to initialize a database cluster using the ICU provider:
-->
前述のように、ロケール設定を選択するコマンドとツールには、それぞれロケールプロバイダを選択するオプションがあります。
次に、ICUプロバイダを使用してデータベースクラスタを初期化する例を示します。
<programlisting>
initdb --locale-provider=icu --icu-locale=en
</programlisting>
<!--
    See the description of the respective commands and programs for
    details.  Note that you can mix locale providers at different
    granularities, for example use <literal>libc</literal> by default for the
    cluster but have one database that uses the <literal>icu</literal>
    provider, and then have collation objects using either provider within
    those databases.
-->
詳細は、各コマンドおよびプログラムの説明を参照してください。
異なる粒度でロケールプロバイダを混在させることもできます。
たとえば、クラスタではデフォルトで<literal>libc</literal>を使用しますが、<literal>icu</literal>プロバイダを使用するデータベースが1つあり、これらのデータベース内でいずれかのプロバイダを使用する照合オブジェクトがあることに注意してください。
   </para>

   <para>
<!--
    Regardless of the locale provider, the operating system is still used to
    provide some locale-aware behavior, such as messages (see <xref
    linkend="guc-lc-messages"/>).
-->
ロケールプロバイダに関係なく、オペレーティングシステムは、メッセージなどのロケール認識動作を提供するために使用されます（<xref linkend="guc-lc-messages"/>を参照）。
   </para>

   <para>
<!--
    The available locale providers are listed below:
-->
利用可能なロケールプロバイダは次のとおりです。
   </para>

   <variablelist>
    <varlistentry>
     <term><literal>builtin</literal></term>
     <listitem>
      <para>
<!--
       The <literal>builtin</literal> provider uses built-in operations. Only
       the <literal>C</literal> and <literal>C.UTF-8</literal> locales are
       supported for this provider.
-->
<literal>builtin</literal>プロバイダは組み込みの操作を使用します。
このプロバイダでは、<literal>C</literal>および<literal>C.UTF-8</literal>ロケールのみがサポートされています。
      </para>
      <para>
<!--
       The <literal>C</literal> locale behavior is identical to the
       <literal>C</literal> locale in the libc provider. When using this
       locale, the behavior may depend on the database encoding.
-->
<literal>C</literal>ロケールプロバイダの動作は、libcプロバイダの<literal>C</literal>ロケールと同じです。
このロケールを使用する場合、動作はデータベースエンコーディングによって異なる場合があります。
      </para>
      <para>
<!--
       The <literal>C.UTF-8</literal> locale is available only for when the
       database encoding is <literal>UTF-8</literal>, and the behavior is
       based on Unicode. The collation uses the code point values only. The
       regular expression character classes are based on the "POSIX
       Compatible" semantics, and the case mapping is the "simple" variant.
-->
<literal>C.UTF-8</literal>ロケールは、データベースエンコーディングが<literal>UTF-8</literal>であり、動作がUnicodeに基づいている場合にのみ使用できます。
照合順序はコードポイント値のみを使用します。
正規表現文字クラスは"POSIX Compatible"セマンティクスに基づいており、ケースマッピングは"シンプル"亜種です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>icu</literal></term>
     <listitem>
      <para>
<!--
       The <literal>icu</literal> provider uses the external
       ICU<indexterm><primary>ICU</primary></indexterm>
       library. <productname>PostgreSQL</productname> must have been
       configured with support.
-->
<literal>icu</literal>プロバイダは、外部ICU<indexterm><primary>ICU</primary></indexterm>ライブラリを使用します。
<productname>PostgreSQL</productname>がICUサポート付きで設定されている必要があります。
      </para>
      <para>
<!--
       ICU provides collation and character classification behavior that is
       independent of the operating system and database encoding, which is
       preferable if you expect to transition to other platforms without any
       change in results. <literal>LC_COLLATE</literal> and
       <literal>LC_CTYPE</literal> can be set independently of the ICU
       locale.
-->
ICUでは、照合順序およびデータベースエンコーディングから独立したオペレーティングシステムおよび文字の分類動作が提供されます。これは、結果を変更せずに他のプラットフォームに移行する場合に適しています。
<literal>LC_COLLATE</literal>および<literal>LC_CTYPE</literal>は、ICUロケールから独立して設定できます。
      </para>
      <note>
       <para>
<!--
        For the ICU provider, results may depend on the version of the ICU
        library used, as it is updated to reflect changes in natural language
        over time.
-->
ICUプロバイダは時間の経過に伴う自然言語の変化を反映して更新されるため、結果は、使用されるICUライブラリのバージョンに依存する可能性があります。
       </para>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><literal>libc</literal></term>
     <listitem>
      <para>
<!--
       The <literal>libc</literal> provider uses the operating system's C
       library. The collation and character classification behavior is
       controlled by the settings <literal>LC_COLLATE</literal> and
       <literal>LC_CTYPE</literal>, so they cannot be set independently.
-->
<literal>libc</literal>プロバイダは、オペレーティングシステムのCライブラリを使用します。
照合順序と文字の分類の動作は、<literal>LC_COLLATE</literal>と<literal>LC_CTYPE</literal>の設定によって制御されるため、個別に設定することはできません。
      </para>
      <note>
       <para>
<!--
        The same locale name may have different behavior on different
        platforms when using the libc provider.
-->
同じロケール名でも、libcプロバイダを使用する場合、プラットフォームによって動作が異なる場合があります。
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 id="icu-locales">
<!--
   <title>ICU Locales</title>
-->
   <title>ICUロケール</title>

   <sect3 id="icu-locale-names">
<!--
    <title>ICU Locale Names</title>
-->
    <title>ICUロケール名</title>

    <para>
<!--
     The ICU format for the locale name is a <link
     linkend="icu-language-tag">Language Tag</link>.
-->
ロケール名のICU形式は<link linkend="icu-language-tag">言語タグ</link>です。

<programlisting>
CREATE COLLATION mycollation1 (provider = icu, locale = 'ja-JP');
CREATE COLLATION mycollation2 (provider = icu, locale = 'fr');
</programlisting>
    </para>
   </sect3>

   <sect3 id="icu-canonicalization">
<!--
    <title>Locale Canonicalization and Validation</title>
-->
    <title>ロケールの正規化と検証</title>
    <para>
<!--
     When defining a new ICU collation object or database with ICU as the
     provider, the given locale name is transformed ("canonicalized") into a
     language tag if not already in that form. For instance,
-->
ICUをプロバイダとして使用して新しいICU照合順序オブジェクトまたはデータベースを定義する場合、指定されたロケール名がその形式でない場合は、言語タグに変換 ("正規化") されます。
例えば、

<screen>
CREATE COLLATION mycollation3 (provider = icu, locale = 'en-US-u-kn-true');
NOTICE:  using standard form "en-US-u-kn" for locale "en-US-u-kn-true"
CREATE COLLATION mycollation4 (provider = icu, locale = 'de_DE.utf8');
NOTICE:  using standard form "de-DE" for locale "de_DE.utf8"
</screen>

<!--
     If you see this notice, ensure that the <symbol>provider</symbol> and
     <symbol>locale</symbol> are the expected result. For consistent results
     when using the ICU provider, specify the canonical <link
     linkend="icu-language-tag">language tag</link> instead of relying on the
     transformation.
-->
この通知が表示された場合は、<symbol>provider</symbol>と<symbol>locale</symbol>が期待通りであることを確認してください。
ICUプロバイダを使用するときに一貫した結果を得るには、変換に依存するのではなく、標準の<link linkend="icu-language-tag">言語タグ</link>を指定してください。
    </para>

    <para>
<!--
     A locale with no language name, or the special language name
     <literal>root</literal>, is transformed to have the language
     <literal>und</literal> ("undefined").
-->
言語名のないロケール、または特別言語名<literal>root</literal>は、言語<literal>und</literal>("undefined")を持つように変換されます。
    </para>

    <para>
<!--
     ICU can transform most libc locale names, as well as some other formats,
     into language tags for easier transition to ICU. If a libc locale name is
     used in ICU, it may not have precisely the same behavior as in libc.
-->
ICUでは、ほとんどのlibcロケール名とその他の形式を言語タグに変換して、ICUへの移行を容易にすることができます。
ICUでlibcロケール名を使用すると、libcでの動作とまったく同じであるとは限りません。
    </para>

    <para>
<!--
     If there is a problem interpreting the locale name, or if the locale name
     represents a language or region that ICU does not recognize, you will see
     the following warning:
-->
ロケール名の解釈に問題がある場合、またはロケール名をICUが認識しない言語または地域を表す場合は、次の警告が表示されます。

<screen>
CREATE COLLATION nonsense (provider = icu, locale = 'nonsense');
WARNING:  ICU locale "nonsense" has unknown language "nonsense"
HINT:  To disable ICU locale validation, set parameter icu_validation_level to DISABLED.
CREATE COLLATION
</screen>

<!--
     <xref linkend="guc-icu-validation-level"/> controls how the message is
     reported. Unless set to <literal>ERROR</literal>, the collation will
     still be created, but the behavior may not be what the user intended.
-->
<xref linkend="guc-icu-validation-level"/>は、メッセージがどのように報告されるかを制御します。
<literal>ERROR</literal>に設定されていない限り、照合順序は作成されますが、ユーザが意図した動作とは異なる可能性があります。
    </para>
   </sect3>

   <sect3 id="icu-language-tag">
<!--
    <title>Language Tag</title>
-->
    <title>言語タグ</title>

    <para>
<!--
     A language tag, defined in BCP 47, is a standardized identifier used to
     identify languages, regions, and other information about a locale.
-->
BCP 47で定義されている言語タグは、言語、識別子、およびロケールに関するその他の情報を識別するために使用される標準化された地域です。
    </para>

    <para>
<!--
     Basic language tags are simply
     <replaceable>language</replaceable><literal>-</literal><replaceable>region</replaceable>;
     or even just <replaceable>language</replaceable>. The
     <replaceable>language</replaceable> is a language code
     (e.g. <literal>fr</literal> for French), and
     <replaceable>region</replaceable> is a region code
     (e.g. <literal>CA</literal> for Canada). Examples:
     <literal>ja-JP</literal>, <literal>de</literal>, or
     <literal>fr-CA</literal>.
-->
基本言語タグは、単に<replaceable>language</replaceable><literal>-</literal><replaceable>region</replaceable>、または単に<replaceable>language</replaceable>です。
<replaceable>language</replaceable>は言語コード（例:<literal>fr</literal>はフランス語を表します）で、<replaceable>region</replaceable>は地域コード（例:<literal>ca</literal>はカナダを表します）です。
例:<literal>ja-JP</literal>、<literal>de</literal>、または<literal>fr-CA</literal>。
    </para>

    <para>
<!--
     Collation settings may be included in the language tag to customize
     collation behavior. ICU allows extensive customization, such as
     sensitivity (or insensitivity) to accents, case, and punctuation;
     treatment of digits within text; and many other options to satisfy a
     variety of uses.
-->
照合順序設定を言語タグに含めて、照合順序の動作をカスタマイズすることができます。
ICUでは、アクセント、大文字小文字、句読点に対する感度（または非感度）、テキスト内の数字の扱いなど、さまざまな用途に対応するための多くのオプションを含む、照合順序の広範なカスタマイズが可能です。
    </para>

    <para>
<!--
     To include this additional collation information in a language tag,
     append <literal>-u</literal>, which indicates there are additional
     collation settings, followed by one or more
     <literal>-</literal><replaceable>key</replaceable><literal>-</literal><replaceable>value</replaceable>
     pairs. The <replaceable>key</replaceable> is the key for a <link
     linkend="icu-collation-settings">collation setting</link> and
     <replaceable>value</replaceable> is a valid value for that setting. For
     boolean settings, the <literal>-</literal><replaceable>key</replaceable>
     may be specified without a corresponding
     <literal>-</literal><replaceable>value</replaceable>, which implies a
     value of <literal>true</literal>.
-->
言語タグにこの追加の照合順序情報を含めるには、追加の照合順序設定があることを示す<literal>-u</literal>を追加し、その後に1つ以上の<literal>-</literal><replaceable>key</replaceable><literal>-</literal><replaceable>value</replaceable>ペアを続けます。
<replaceable>key</replaceable>は<link linkend="icu-collation-settings">照合順序設定</link>のキーで、<replaceable>value</replaceable>はその設定の有効な値です。
ブール設定の場合、<literal>-</literal><replaceable>key</replaceable>を指定するだけで、対応する<literal>-</literal><replaceable>value</replaceable>を指定しないことができ、これは<literal>true</literal>の値を意味します。
    </para>

    <para>
<!--
     For example, the language tag <literal>en-US-u-kn-ks-level2</literal>
     means the locale with the English language in the US region, with
     collation settings <literal>kn</literal> set to <literal>true</literal>
     and <literal>ks</literal> set to <literal>level2</literal>. Those
     settings mean the collation will be case-insensitive and treat a sequence
     of digits as a single number:
-->
例えば、言語タグ<literal>en-US-u-kn-ks-level2</literal>とは、米国の英語言語を持つロケールを意味し、照合順序設定<literal>kn</literal>は<literal>true</literal>に設定され、<literal>ks</literal>は<literal>レベル2</literal>に設定されています。
これらの設定は、照合順序が大文字小文字を区別せず、続きの数字を単一の数値として扱うことを意味します。

<screen>
CREATE COLLATION mycollation5 (provider = icu, deterministic = false, locale = 'en-US-u-kn-ks-level2');
SELECT 'aB' = 'Ab' COLLATE mycollation5 as result;
 result
--------
 t
(1 row)

SELECT 'N-45' &lt; 'N-123' COLLATE mycollation5 as result;
 result
--------
 t
(1 row)
</screen>
    </para>

    <para>
<!--
     See <xref linkend="icu-custom-collations"/> for details and additional
     examples of using language tags with custom collation information for the
     locale.
-->
ロケールのためのカスタム照合順序情報を持つ言語タグの使用の詳細と追加の例については、<xref linkend="icu-custom-collations"/>を参照してください。
    </para>
   </sect3>
  </sect2>

  <sect2 id="locale-problems">
<!--
   <title>Problems</title>
-->
   <title>問題点</title>

   <para>
<!--
    If locale support doesn't work according to the explanation above,
    check that the locale support in your operating system is
    correctly configured.  To check what locales are installed on your
    system, you can use the command <literal>locale -a</literal> if
    your operating system provides it.
-->
上記の説明に従ってロケールのサポートが正常に動作しない場合、オペレーティングシステムのロケールサポートが正確に設定されているか確認してください。
指定されたロケールがインストールされているかどうか確認するために、オペレーティングシステムが提供していれば、<literal>locale -a</literal>コマンドを使用することができます。
   </para>

   <para>
<!--
    Check that <productname>PostgreSQL</productname> is actually using the locale
    that you think it is.  The <envar>LC_COLLATE</envar> and <envar>LC_CTYPE</envar>
    settings are determined when a database is created, and cannot be
    changed except by creating a new database.  Other locale
    settings including <envar>LC_MESSAGES</envar> and <envar>LC_MONETARY</envar>
    are initially determined by the environment the server is started
    in, but can be changed on-the-fly.  You can check the active locale
    settings using the <command>SHOW</command> command.
-->
<productname>PostgreSQL</productname>が想定しているロケールを実際に使用しているかどうかを確認してください。
<envar>LC_COLLATE</envar>と<envar>LC_CTYPE</envar>の設定はデータベース作成時に決定され、新しいデータベースを作成する方法以外に変更することはできません。
<envar>LC_MESSAGES</envar>や<envar>LC_MONETARY</envar>など他のロケール設定はサーバ起動時の環境変数によって初めに決定されますが、その場で変更することもできます。
<command>SHOW</command>コマンドを使用して、使用中のロケール設定を確認できます。
   </para>

   <para>
<!--
    The directory <filename>src/test/locale</filename> in the source
    distribution contains a test suite for
    <productname>PostgreSQL</productname>'s locale support.
-->
ソース配布物の<filename>src/test/locale</filename>ディレクトリには、<productname>PostgreSQL</productname>のロケールサポート用のテストスイートがあります。
   </para>

   <para>
<!--
    Client applications that handle server-side errors by parsing the
    text of the error message will obviously have problems when the
    server's messages are in a different language.  Authors of such
    applications are advised to make use of the error code scheme
    instead.
-->
エラーメッセージ内のテキストを解析してサーバ側のエラーを扱っているクライアントアプリケーションでは、サーバのメッセージが異なる言語で記載されると、明らかに問題になります。
こうしたアプリケーションの作者には、エラーコードスキームで代替させることを推奨します。
   </para>

   <para>
<!--
    Maintaining catalogs of message translations requires the on-going
    efforts of many volunteers that want to see
    <productname>PostgreSQL</productname> speak their preferred language well.
    If messages in your language are currently not available or not fully
    translated, your assistance would be appreciated.  If you want to
    help, refer to <xref linkend="nls"/> or write to the developers'
    mailing list.
-->
メッセージ翻訳のカタログのメンテナンスには<productname>PostgreSQL</productname>に選択した言語を話させてみたいという数多くのボランティアのたゆみのない努力を必要としています。
もしあなたの言語が現在使えなかったり完全に翻訳されていない場合、助力をよろしくお願いします。
もし助力していただけるのであれば、<xref linkend="nls"/>を参照するか開発グループのメーリングリストに投稿してください。
   </para>
  </sect2>
 </sect1>


 <sect1 id="collation">
<!--
  <title>Collation Support</title>
-->
  <title>照合順序サポート</title>

  <indexterm zone="collation"><primary>collation</primary></indexterm>

  <para>
<!--
   The collation feature allows specifying the sort order and character
   classification behavior of data per-column, or even per-operation.
   This alleviates the restriction that the
   <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol> settings
   of a database cannot be changed after its creation.
-->
照合順序機能は、ソート順番と列ごともしくは操作ごとのデータの文字区別の振る舞いを指定することを可能にします。
これにより、作成後のデータベースの<symbol>LC_COLLATE</symbol>と<symbol>LC_CTYPE</symbol>の設定を変更できない制限が緩和されます。
  </para>

  <sect2 id="collation-concepts">
<!--
   <title>Concepts</title>
-->
   <title>概念</title>

   <para>
<!--
    Conceptually, every expression of a collatable data type has a
    collation.  (The built-in collatable data types are
    <type>text</type>, <type>varchar</type>, and <type>char</type>.
    User-defined base types can also be marked collatable, and of course
    a <glossterm linkend="glossary-domain">domain</glossterm> over a
    collatable data type is collatable.)  If the
    expression is a column reference, the collation of the expression is the
    defined collation of the column.  If the expression is a constant, the
    collation is the default collation of the data type of the
    constant.  The collation of a more complex expression is derived
    from the collations of its inputs, as described below.
-->
概念的に照合可能なデータ型のそれぞれの式は、照合順序を保持しています
（組み込みの照合可能なデータ型は<type>text</type>、<type>varchar</type>、 <type>char</type>です。
ユーザ定義の基本型は照合可能とマーキングできます。もちろん照合可能なデータ型上の<glossterm linkend="glossary-domain">ドメイン</glossterm>は照合可能となります）。
もし、式が列参照である場合は、式の照合順序は列の定義された照合順序となります。
もし、式が定数である場合は、照合順序は定数のデータ型のデフォルトの照合順序となります。
より複雑な式の照合順序は、下記に示すように、その入力の照合順序から引き出されます。
   </para>

   <para>
<!--
    The collation of an expression can be the <quote>default</quote>
    collation, which means the locale settings defined for the
    database.  It is also possible for an expression's collation to be
    indeterminate.  In such cases, ordering operations and other
    operations that need to know the collation will fail.
-->
式の照合順序は、<quote>default</quote>照合順序となります。これはデータベースに対して定義されたロケール設定を意味しています。
式の照合順序は非決定となることもあります。そのような場合に、照合順序が必要となるような順序操作や他の操作は失敗するでしょう。
   </para>

   <para>
<!--
    When the database system has to perform an ordering or a character
    classification, it uses the collation of the input expression.  This
    happens, for example, with <literal>ORDER BY</literal> clauses
    and function or operator calls such as <literal>&lt;</literal>.
    The collation to apply for an <literal>ORDER BY</literal> clause
    is simply the collation of the sort key.  The collation to apply for a
    function or operator call is derived from the arguments, as described
    below.  In addition to comparison operators, collations are taken into
    account by functions that convert between lower and upper case
    letters, such as <function>lower</function>, <function>upper</function>, and
    <function>initcap</function>; by pattern matching operators; and by
    <function>to_char</function> and related functions.
-->
データベースシステムが並べ替えや文字区別を行う場合、データベースは入力の照合順序を使用します。
これは、たとえば<literal>ORDER BY</literal>句や <literal>&lt;</literal> 演算子や関数を使用する際に発生します。
<literal>ORDER BY</literal>句に適用する照合順序は、単純にソートキーの照合順序です。
関数や演算子の呼び出しに対して適用される照合順序は、以下に述べるように引数により決まります。
比較演算子に加えて、照合順序は<function>lower</function>、<function>upper</function>、<function>initcap</function>といった小文字と大文字を変換する関数やパターンマッチングの演算子、<function>to_char</function>関連の関数で考慮されています。
   </para>

   <para>
<!--
    For a function or operator call, the collation that is derived by
    examining the argument collations is used at run time for performing
    the specified operation.  If the result of the function or operator
    call is of a collatable data type, the collation is also used at parse
    time as the defined collation of the function or operator expression,
    in case there is a surrounding expression that requires knowledge of
    its collation.
-->
関数や演算子の呼び出しに対して、引数の照合順序検査により得られた照合順序は実行時に特定の操作を行うために使用されます。
もし関数や演算子の呼び出しの結果が照合順序可能なデータ型であった場合、照合順序は関数もしくは演算子式の定義済みの照合順序として
解析時にも試用されます。このとき照合順序の知識が必要となるような囲み式があります。
   </para>

   <para>
<!--
    The <firstterm>collation derivation</firstterm> of an expression can be
    implicit or explicit.  This distinction affects how collations are
    combined when multiple different collations appear in an
    expression.  An explicit collation derivation occurs when a
    <literal>COLLATE</literal> clause is used; all other collation
    derivations are implicit.  When multiple collations need to be
    combined, for example in a function call, the following rules are
    used:
-->
式の<firstterm>照合順序の導出</firstterm>は暗黙でも明示的にでも可能です。
この区別は、複数の異なる照合順序が式中に現れるときに照合順序がどのように組み合わされるか、に影響を与えます。
明示的な照合順序の導出は、<literal>COLLATE</literal>句が使用されたときに発生します。
他の全ての照合順序は暗黙となります。例えば関数呼び出しの中では、次の規則が用いられます。

    <orderedlist>
     <listitem>
      <para>
<!--
       If any input expression has an explicit collation derivation, then
       all explicitly derived collations among the input expressions must be
       the same, otherwise an error is raised.  If any explicitly
       derived collation is present, that is the result of the
       collation combination.
-->
入力式に明示的な照合順序の導出がある場合、入力式の中の明示的に導出された全ての照合順序が同一でなくてはなりません。
そうでない場合はエラーが発生します。もし明示的に導出された照合順序がある場合は、それは照合順序の組み合わせの結果となります。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Otherwise, all input expressions must have the same implicit
       collation derivation or the default collation.  If any non-default
       collation is present, that is the result of the collation combination.
       Otherwise, the result is the default collation.
-->
そうでない場合は、全ての入力式は同一の暗黙の照合順序の導出またはデフォルトの照合順序を持たなくてはなりません。
もしデフォルトではない照合順序がある場合は、それは照合順序の組み合わせの結果となります。
もしそうでない場合は、結果はデフォルトの照合順序となります。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       If there are conflicting non-default implicit collations among the
       input expressions, then the combination is deemed to have indeterminate
       collation.  This is not an error condition unless the particular
       function being invoked requires knowledge of the collation it should
       apply.  If it does, an error will be raised at run-time.
-->
入力式内でデフォルトではない暗黙の照合順序が衝突している場合、決定不能な照合順序であるとみなされます。
これは、もし呼び出された特定の関数が適用するべき照合順序を知っておく必要がないかぎりエラーの条件ではありません。
もし知っておく必要がある場合は、実行時にエラーとなります。
      </para>
     </listitem>
    </orderedlist>

<!--
    For example, consider this table definition:
-->
例えば、このテーブル定義を考えてみます。
<programlisting>
CREATE TABLE test1 (
    a text COLLATE "de_DE",
    b text COLLATE "es_ES",
    ...
);
</programlisting>

<!--
    Then in
-->
このとき
<programlisting>
SELECT a &lt; 'foo' FROM test1;
</programlisting>
<!--
    the <literal>&lt;</literal> comparison is performed according to
    <literal>de_DE</literal> rules, because the expression combines an
    implicitly derived collation with the default collation.  But in
-->
<literal>&lt;</literal> の比較は<literal>de_DE</literal>の規則により実行されます。
というのも式は暗黙的に導出されたデフォルトの照合順序と組み合わせます。しかし、
<programlisting>
SELECT a &lt; ('foo' COLLATE "fr_FR") FROM test1;
</programlisting>
<!--
    the comparison is performed using <literal>fr_FR</literal> rules,
    because the explicit collation derivation overrides the implicit one.
    Furthermore, given
-->
このとき比較は、明示的な照合順序の導出は暗黙の照合順序をオーバーライドするため<literal>fr_FR</literal>規則が用いられます。
さらに、次の例では
<programlisting>
SELECT a &lt; b FROM test1;
</programlisting>
<!--
    the parser cannot determine which collation to apply, since the
    <structfield>a</structfield> and <structfield>b</structfield> columns have conflicting
    implicit collations.  Since the <literal>&lt;</literal> operator
    does need to know which collation to use, this will result in an
    error.  The error can be resolved by attaching an explicit collation
    specifier to either input expression, thus:
-->
パーサはどの照合順序を適用するか決定できません。というのも<structfield>a</structfield>と<structfield>b</structfield>列は暗黙の衝突する照合順序を持つためです。
<literal>&lt;</literal> 演算子がどちらの照合順序を使用するか知る必要があるため、エラーとなります。
このエラーは、どちらかの入力式に明示的な照合順序の指定を付加することで解決できます。
つまり、以下のようになります。
<programlisting>
SELECT a &lt; b COLLATE "de_DE" FROM test1;
</programlisting>
<!--
    or equivalently
-->
もしくは以下でも同じです。
<programlisting>
SELECT a COLLATE "de_DE" &lt; b FROM test1;
</programlisting>
<!--
    On the other hand, the structurally similar case
-->
一方で、以下のように構造的に似たケースとして
<programlisting>
SELECT a || b FROM test1;
</programlisting>
<!--
    does not result in an error, because the <literal>||</literal> operator
    does not care about collations: its result is the same regardless
    of the collation.
-->
これはエラーとなりません。というのも <literal>||</literal> 演算子は、照合順序には関係がないためです。
この結果は照合順序と関係なく同じになります。
   </para>

   <para>
<!--
    The collation assigned to a function or operator's combined input
    expressions is also considered to apply to the function or operator's
    result, if the function or operator delivers a result of a collatable
    data type.  So, in
-->
もし関数や演算子が照合順序可能なデータ型の結果を出力する場合は、関数に割り当てられた照合順序、もしくは演算子の組み合わされた入力式は、関数もしくは演算子の結果に対しても
適用されると考えられます。よって、以下の例では
<programlisting>
SELECT * FROM test1 ORDER BY a || 'foo';
</programlisting>
<!--
    the ordering will be done according to <literal>de_DE</literal> rules.
    But this query:
-->
順序は<literal>de_DE</literal>規則に基づき実行されますが、以下の問い合わせでは
<programlisting>
SELECT * FROM test1 ORDER BY a || b;
</programlisting>
<!--
    results in an error, because even though the <literal>||</literal> operator
    doesn't need to know a collation, the <literal>ORDER BY</literal> clause does.
    As before, the conflict can be resolved with an explicit collation
    specifier:
-->
エラーとなります。というのも <literal>||</literal> 演算子が照合順序を知る必要がなかったとしても
<literal>ORDER BY</literal>句が照合順序を知る必要があるためです。
以前と同様、この衝突は明示的に照合順序を指定することにより解決できます。
<programlisting>
SELECT * FROM test1 ORDER BY a || b COLLATE "fr_FR";
</programlisting>
   </para>
  </sect2>

  <sect2 id="collation-managing">
<!--
   <title>Managing Collations</title>
-->
   <title>照合順序の管理</title>

   <para>
<!--
    A collation is an SQL schema object that maps an SQL name to locales
    provided by libraries installed in the operating system.  A collation
    definition has a <firstterm>provider</firstterm> that specifies which
    library supplies the locale data.  One standard provider name
    is <literal>libc</literal>, which uses the locales provided by the
    operating system C library.  These are the locales used by most tools
    provided by the operating system.  Another provider
    is <literal>icu</literal>, which uses the external
    ICU<indexterm><primary>ICU</primary></indexterm> library.  ICU locales can only be
    used if support for ICU was configured when PostgreSQL was built.
-->
照合順序は、SQL名称を、オペレーティングシステム中にインストールされたライブラリによって提供されるロケールにマッピングするSQLスキーマオブジェクトです。
照合順序の定義には、ロケールデータを提供するライブラリを指定する<firstterm>プロバイダ</firstterm>(provider)が含まれます。
標準プロバイダの一つは<literal>libc</literal>で、オペレーティングシステムのCライブラリが提供するロケールを使用します。
オペレーティングシステムが提供するほとんどのツールが、このロケールを使用します。
他のプロバイダとしては<literal>icu</literal>があり、外部のICU<indexterm><primary>ICU</primary></indexterm>ライブラリを使います。
ICUロケールは、PostgreSQLがビルドされた際にICUサポートが設定されていた場合にのみ利用可能です。
   </para>

   <para>
<!--
    A collation object provided by <literal>libc</literal> maps to a
    combination of <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol>
    settings, as accepted by the <literal>setlocale()</literal> system library call.  (As
    the name would suggest, the main purpose of a collation is to set
    <symbol>LC_COLLATE</symbol>, which controls the sort order.  But
    it is rarely necessary in practice to have an
    <symbol>LC_CTYPE</symbol> setting that is different from
    <symbol>LC_COLLATE</symbol>, so it is more convenient to collect
    these under one concept than to create another infrastructure for
    setting <symbol>LC_CTYPE</symbol> per expression.)  Also,
    a <literal>libc</literal> collation
    is tied to a character set encoding (see <xref linkend="multibyte"/>).
    The same collation name may exist for different encodings.
-->
<literal>libc</literal>が提供する照合順序は、<literal>setlocale()</literal>システムライブラリの呼び出しが許可する<symbol>LC_COLLATE</symbol>と<symbol>LC_CTYPE</symbol>の組み合わせ設定にマッピングします。
（名称から推測されるように、照合順序の主な目的はソート順序を制御する<symbol>LC_COLLATE</symbol>を設定することです。
しかし実際には<symbol>LC_CTYPE</symbol>の設定を<symbol>LC_COLLATE</symbol>と異なるようにする必要はほとんどありません。
そのため、式ごとに<symbol>LC_CTYPE</symbol>を設定するような別の機構を作成するより、これらの設定を収集する方が、より便利です。）
また、<literal>libc</literal>の照合順序は文字集合エンコーディングと結びついています（<xref linkend="multibyte"/>を参照してください）。
同一の照合順序名称が異なるエンコーディングに対して存在しています。
   </para>

   <para>
<!--
    A collation object provided by <literal>icu</literal> maps to a named
    collator provided by the ICU library.  ICU does not support
    separate <quote>collate</quote> and <quote>ctype</quote> settings, so
    they are always the same.  Also, ICU collations are independent of the
    encoding, so there is always only one ICU collation of a given name in
    a database.
-->
<literal>icu</literal>が提供する照合順序オブジェクトは、ICUライブラリが提供する照合順序機能(collator)にマップします。
ICUは<quote>collate</quote>と<quote>ctype</quote>を別々に設定する機能を提供しないので、それら常に同じものになります。
また、ICUの照合順序はエンコーディングからは独立しています。
ですから、データベース中のある名前のICU照合順序は、常にただひとつだけです。
   </para>

   <sect3 id="collation-managing-standard">
<!--
    <title>Standard Collations</title>
-->
    <title>標準の照合順序</title>

   <para>
<!--
    On all platforms, the following collations are supported:
-->
すべてのプラットフォームで、次の照合順序がサポートされています。

    <variablelist>
     <varlistentry>
      <term><literal>unicode</literal></term>
      <listitem>
       <para>
<!--
        This SQL standard collation sorts using the Unicode Collation
        Algorithm with the Default Unicode Collation Element Table.  It is
        available in all encodings.  ICU support is required to use this
        collation, and behavior may change if Postgres is built with a
        different version of ICU.  (This collation has the same behavior as
        the ICU root locale; see <xref
        linkend="collation-managing-predefined-icu-und-x-icu"/>.)
-->
この標準SQL照合順序は、デフォルトUnicode照合基本テーブルを使用してUnicode照合アルゴリズムで並べ替えます。
すべてのエンコーディングで使用できます。
この照合順序を使用するにはICUサポートが必要であり、PostgresがICUの別のバージョンで構築されている場合は動作が変更される可能性があります（この照合順序はICUルートロケールと同じ動作をします。
（この照合順序は、ICUルートロケールと同じ動作をします。<xref linkend="collation-managing-predefined-icu-und-x-icu"/>を参照してください。）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>ucs_basic</literal></term>
      <listitem>
       <para>
<!--
        This SQL standard collation sorts using the Unicode code point values
        rather than natural language order, and only the ASCII letters
        <quote><literal>A</literal></quote> through
        <quote><literal>Z</literal></quote> are treated as letters.  The
        behavior is efficient and stable across all versions.  Only available
        for encoding <literal>UTF8</literal>.  (This collation has the same
        behavior as the libc locale specification <literal>C</literal> in
        <literal>UTF8</literal> encoding.)
-->
この標準SQL照合順序による並べ替えでは、自然言語の並び順ではなく、Unicodeのコードポイント値を使用してソートされ、ASCII文字<quote><literal>A</literal></quote>から<quote><literal>Z</literal></quote>のみが文字として扱われます。
動作は効率的で、すべてのバージョンにわたって安定です。
エンコーディング<literal>UTF8</literal>でのみ使用可能です。
（この照合順序は、<literal>UTF8</literal>エンコーディングのlibcロケール指定<literal>C</literal>と同じ動作をします。）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>pg_c_utf8</literal></term>
      <listitem>
       <para>
<!--
        This collation sorts by Unicode code point values rather than natural
        language order.  For the functions <function>lower</function>,
        <function>initcap</function>, and <function>upper</function>, it uses
        Unicode simple case mapping.  For pattern matching (including regular
        expressions), it uses the POSIX Compatible variant of Unicode <ulink
        url="https://www.unicode.org/reports/tr18/#Compatibility_Properties">Compatibility
        Properties</ulink>.  Behavior is efficient and stable within a
        <productname>Postgres</productname> major version.  This collation is
        only available for encoding <literal>UTF8</literal>.
-->
この照合順序による並べ替えでは、自然言語の並び順ではなく、Unicodeのコードポイント値を使用してソートされます。
関数<function>lower</function>、<function>initcap</function>、<function>upper</function>には、Unicodeシンプルケースマッピングを使用します。
パターンマッチ（正規表現を含む）の場合は、POSIX互換のUnicode<ulink url="https://www.unicode.org/reports/tr18/#Compatibility_Properties">互換亜種プロパティを使用します</ulink>。
動作は効率的で、<productname>Postgres</productname>のメジャーバージョン内で安定です。
この照合順序は、エンコーディング<literal>UTF8</literal>でのみ使用できます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>C</literal> (equivalent to <literal>POSIX</literal>)</term>
      <listitem>
       <para>
<!--
        The <literal>C</literal> and <literal>POSIX</literal> collations are
        based on <quote>traditional C</quote> behavior.  They sort by byte
        values rather than natural language order, and only the ASCII letters
        <quote><literal>A</literal></quote> through
        <quote><literal>Z</literal></quote> are treated as letters.  The
        behavior is efficient and stable across all versions for a given
        database encoding, but behavior may vary between different database
        encodings.
-->
<literal>C</literal>と<literal>POSIX</literal>の照合は、<quote>従来のC</quote>の動作に基づいています。
自然言語の並び順ではなく、バイト値を使用してソートされ、ASCII文字<quote><literal>A</literal></quote>から<quote><literal>Z</literal></quote>のみが文字として扱われます。
動作は効率的で、すべてのバージョンで特定のデータベースエンコーディングに対して安定ですが、動作はデータベースのエンコーディングによって異なる場合があります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>default</literal></term>
      <listitem>
       <para>
<!--
        The <literal>default</literal> collation selects the locale specified
        at database creation time.
-->
<literal>default</literal>照合順序は、データベース作成時に指定したロケールを選択します。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

   <para>
<!--
    Additional collations may be available depending on operating system
    support.  The efficiency and stability of these additional collations
    depend on the collation provider, the provider version, and the locale.
-->
オペレーティングシステムサポートによっては、追加の照合を使用できる場合があります。
これらの追加の照合の効率性と安定度は、照合順序プロバイダ、プロバイダバージョン、およびロケールによって異なります。
   </para>
  </sect3>

  <sect3 id="collation-managing-predefined">
<!--
   <title>Predefined Collations</title>
-->
   <title>定義済みの照合順序</title>

   <para>
<!--
    If the operating system provides support for using multiple locales
    within a single program (<function>newlocale</function> and related functions),
    or if support for ICU is configured,
    then when a database cluster is initialized, <command>initdb</command>
    populates the system catalog <literal>pg_collation</literal> with
    collations based on all the locales it finds in the operating
    system at the time.
-->
オペレーティングシステムが単一のプログラム内(<function>newlocale</function>や関連する関数)で複数のロケールを使用することをサポートしているか、ICUサポートが組み込み済みの場合、データベースクラスタが初期化されると<command>initdb</command>は、オペレーティングシステム上で見つけた全てのロケールに基づく照合順序をシステムカタログの<literal>pg_collation</literal>に書き込みます。
   </para>

   <para>
<!--
    To inspect the currently available locales, use the query <literal>SELECT
    * FROM pg_collation</literal>, or the command <command>\dOS+</command>
    in <application>psql</application>.
-->
現在利用可能なロケールを調べるには、<literal>SELECT * FROM pg_collation</literal>という問い合わせを使うか、<application>psql</application>内で<command>\dOS+</command>コマンドを使用します。
   </para>

  <sect4 id="collation-managing-predefined-libc">
<!--
   <title>libc Collations</title>
-->
   <title>libc照合順序</title>

   <para>
<!--
    For example, the operating system might
    provide a locale named <literal>de_DE.utf8</literal>.
    <command>initdb</command> would then create a collation named
    <literal>de_DE.utf8</literal> for encoding <literal>UTF8</literal>
    that has both <symbol>LC_COLLATE</symbol> and
    <symbol>LC_CTYPE</symbol> set to <literal>de_DE.utf8</literal>.
    It will also create a collation with the <literal>.utf8</literal>
    tag stripped off the name.  So you could also use the collation
    under the name <literal>de_DE</literal>, which is less cumbersome
    to write and makes the name less encoding-dependent.  Note that,
    nevertheless, the initial set of collation names is
    platform-dependent.
-->
例えば、オペレーティングシステムが<literal>de_DE.utf8</literal>という名称のロケールを提供するとします。
<command>initdb</command>は、<literal>de_DE.utf8</literal>に設定された<symbol>LC_COLLATE</symbol>と<symbol>LC_CTYPE</symbol>の両方を持つ<literal>UTF8</literal>エンコーディングの<literal>de_DE.utf8</literal>という名称の照合順序を作成します。
同時に照合順序の名称から<literal>.utf8</literal>タグを削除した照合順序も作成します。
そのため、<literal>de_DE</literal>という名前の照合を使用することもできます。
これは手間を省き、名称がエンコーディングに依存しにくいようになります。
それにもかかわらず、照合順序名称の初期値はプラットフォーム依存となることに気をつけてください。
   </para>

   <para>
<!--
    The default set of collations provided by <literal>libc</literal> map
    directly to the locales installed in the operating system, which can be
    listed using the command <literal>locale -a</literal>.  In case
    a <literal>libc</literal> collation is needed that has different values
    for <symbol>LC_COLLATE</symbol> and <symbol>LC_CTYPE</symbol>, or if new
    locales are installed in the operating system after the database system
    was initialized, then a new collation may be created using
    the <xref linkend="sql-createcollation"/> command.
    New operating system locales can also be imported en masse using
    the <link linkend="functions-admin-collation"><function>pg_import_system_collations()</function></link> function.
-->
<literal>libc</literal>が提供するデフォルトの照合順序の集合は、直接オペレーティングシステム内にインストールされたロケールにマップされ、コマンド<literal>locale -a</literal>で参照できます。
<symbol>LC_COLLATE</symbol>と<symbol>LC_CTYPE</symbol>で違う値を持つ<literal>libc</literal>照合順序が必要な場合、あるいはデータベースシステムが初期化された後に新しいロケールがインストールされた場合は、新しい照合順序を<xref linkend="sql-createcollation"/>コマンドで作成できます。
また、新しいオペレーティングシステムロケールは、<link linkend="functions-admin-collation"><function>pg_import_system_collations()</function></link>関数でインポートできます。
   </para>

   <para>
<!--
    Within any particular database, only collations that use that
    database's encoding are of interest.  Other entries in
    <literal>pg_collation</literal> are ignored.  Thus, a stripped collation
    name such as <literal>de_DE</literal> can be considered unique
    within a given database even though it would not be unique globally.
    Use of the stripped collation names is recommended, since it will
    make one fewer thing you need to change if you decide to change to
    another database encoding.  Note however that the <literal>default</literal>,
    <literal>C</literal>, and <literal>POSIX</literal> collations can be used regardless of
    the database encoding.
-->
どのようなデータベース内でも、データベースのエンコーディングを使用している照合順序のみが興味の対象となります。
<literal>pg_collation</literal>内の他のエントリは無視されます。
よって<literal>de_DE</literal>といったようなエンコーディング名が省かれた照合順序は、一般的には一意でなくてもデータベース内では一意であるとみなされます。
エンコーディング名が省かれた照合順序を使用することを推奨します。
というのも、データベースのエンコーディングを変更するときに、変えなければならないものを１つ減らせるからです。
しかし、<literal>default</literal>、<literal>C</literal>そして<literal>POSIX</literal>照合順序は、データベースのエンコーディングに関係なく使用可能であることに注意してください。
   </para>

   <para>
<!--
    <productname>PostgreSQL</productname> considers distinct collation
    objects to be incompatible even when they have identical properties.
    Thus for example,
-->
<productname>PostgreSQL</productname>は、異なる照合順序オブジェクトは、それらが同じプロパティを持っていても互換性がないものとみなします。
例えば、
<programlisting>
SELECT a COLLATE "C" &lt; b COLLATE "POSIX" FROM test1;
</programlisting>
<!--
    will draw an error even though the <literal>C</literal> and <literal>POSIX</literal>
    collations have identical behaviors.  Mixing stripped and non-stripped
    collation names is therefore not recommended.
-->
は、<literal>C</literal>と<literal>POSIX</literal>照合順序が同じ動作であってもエラーとなります。
よってエンコーディング名が省かれた照合順序を混ぜて使用することは推奨されません。
   </para>
  </sect4>

  <sect4 id="collation-managing-predefined-icu">
<!--
   <title>ICU Collations</title>
-->
   <title>ICU照合順序</title>

   <para>
<!--
    With ICU, it is not sensible to enumerate all possible locale names.  ICU
    uses a particular naming system for locales, but there are many more ways
    to name a locale than there are actually distinct locales.
    <command>initdb</command> uses the ICU APIs to extract a set of distinct
    locales to populate the initial set of collations.  Collations provided by
    ICU are created in the SQL environment with names in BCP 47 language tag
    format, with a <quote>private use</quote>
    extension <literal>-x-icu</literal> appended, to distinguish them from
    libc locales.
-->
ICUにおいては、すべての可能なロケール名を列挙するのは賢明ではありません。
ICUはロケールの固有の名前付けシステムを使っています。
しかし、実際の個別のロケール名以上の名前を付ける多くの方法があります。
<command>initdb</command>はICUのAPIを使い、照合順序の初期集合を入力するための
個別のロケールの集合を取り出します。
ICUが提供する照合順序は、libcロケールと区別するために、SQL環境において、<quote>私的利用</quote>拡張<literal>-x-icu</literal>を追加したBCP 47言語タグ形式の名前で作成されます。
   </para>

   <para>
<!--
    Here are some example collations that might be created:
-->
以下は作成されるかもしれない照合順序の例です。

    <variablelist>
     <varlistentry id="collation-managing-predefined-icu-de-x-icu">
      <term><literal>de-x-icu</literal></term>
      <listitem>
<!--
       <para>German collation, default variant</para>
-->
       <para>ドイツ語照合順序、デフォルトの亜種</para>
      </listitem>
     </varlistentry>

     <varlistentry id="collation-managing-predefined-icu-de-at-x-icu">
      <term><literal>de-AT-x-icu</literal></term>
      <listitem>
<!--
       <para>German collation for Austria, default variant</para>
-->
       <para>オーストリアのドイツ語照合順序、デフォルトの亜種</para>
       <para>
<!--
        (There are also, say, <literal>de-DE-x-icu</literal>
        or <literal>de-CH-x-icu</literal>, but as of this writing, they are
        equivalent to <literal>de-x-icu</literal>.)
-->
（他に、<literal>de-DE-x-icu</literal>あるいは<literal>de-CH-x-icu</literal>というのがあります。
しかし、本稿執筆時点では、それらは<literal>de-x-icu</literal>と同じです。）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="collation-managing-predefined-icu-und-x-icu">
<!--
      <term><literal>und-x-icu</literal> (for <quote>undefined</quote>)</term>
-->
      <term><literal>und-x-icu</literal> (<quote>undefined</quote>用)</term>
      <listitem>
       <para>
<!--
        ICU <quote>root</quote> collation.  Use this to get a reasonable
        language-agnostic sort order.
-->
ICU<quote>root</quote>照合順序。
言語に依存しない適当なソート順を得るために使用してください。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

   <para>
<!--
    Some (less frequently used) encodings are not supported by ICU.  When the
    database encoding is one of these, ICU collation entries
    in <literal>pg_collation</literal> are ignored.  Attempting to use one
    will draw an error along the lines of <quote>collation "de-x-icu" for
    encoding "WIN874" does not exist</quote>.
-->
ある種の（利用頻度が低い）エンコーディングをICUはサポートしません。
データベースエンコーディングがこのようなものであった場合、<literal>pg_collation</literal>中のICU照合順序は無視されます。
このようなものを使おうとすると、<quote>collation "de-x-icu" for encoding "WIN874" does not exist</quote>というメッセージを伴ったエラーが発生します。
   </para>
  </sect4>
  </sect3>

  <sect3 id="collation-create">
<!--
   <title>Creating New Collation Objects</title>
-->
   <title>新しい照合順序オブジェクトの作成</title>

   <para>
<!--
    If the standard and predefined collations are not sufficient, users can
    create their own collation objects using the SQL
    command <xref linkend="sql-createcollation"/>.
-->
標準の定義済み照合順序が十分でない場合は、ユーザはSQLコマンド<xref linkend="sql-createcollation"/>で照合順序オブジェクトを作成できます。
   </para>

   <para>
<!--
    The standard and predefined collations are in the
    schema <literal>pg_catalog</literal>, like all predefined objects.
    User-defined collations should be created in user schemas.  This also
    ensures that they are saved by <command>pg_dump</command>.
-->
すべての定義済みオブジェクト同様、標準の定義済み照合順序は<literal>pg_catalog</literal>スキーマにあります。
ユーザ定義の照合順序はユーザのスキーマに作成するべきです。
これはまた、<command>pg_dump</command>の保存対象になることを確実にします。
   </para>

   <sect4 id="collation-managing-create-libc">
<!--
    <title>libc Collations</title>
-->
    <title>libc照合順序</title>

    <para>
<!--
     New libc collations can be created like this:
-->
以下のようにして新しいlibc照合順序を作成できます。
<programlisting>
CREATE COLLATION german (provider = libc, locale = 'de_DE');
</programlisting>
<!--
     The exact values that are acceptable for the <literal>locale</literal>
     clause in this command depend on the operating system.  On Unix-like
     systems, the command <literal>locale -a</literal> will show a list.
-->
コマンド中の<literal>locale</literal>句に使用できる正確な値は、オペレーティングシステムに依存します。
Unix系のシステムでは、<literal>locale -a</literal>コマンドでこのリストを表示できるでしょう。
    </para>

    <para>
<!--
     Since the predefined libc collations already include all collations
     defined in the operating system when the database instance is
     initialized, it is not often necessary to manually create new ones.
     Reasons might be if a different naming system is desired (in which case
     see also <xref linkend="collation-copy"/>) or if the operating system has
     been upgraded to provide new locale definitions (in which case see
     also <link linkend="functions-admin-collation"><function>pg_import_system_collations()</function></link>).
-->
定義済みのlibc照合順序は、データベースインスタンスが初期化された際に、オペレーティングシステムで定義されたすべての照合順序をすでに含んでいるので、新しいものを手動で作る必要はあまりないでしょう。
そうしたことをする理由があるとすれば、異なる命名規則が必要である（この場合は、<xref linkend="collation-copy"/>も参照してください）、あるいはオペレーティングシステムが更新されて、新しいロケールの定義が提供されるようになった場合です。（この場合は<link linkend="functions-admin-collation"><function>pg_import_system_collations()</function></link>も参照してください。）
    </para>
   </sect4>

   <sect4 id="collation-managing-create-icu">
<!--
    <title>ICU Collations</title>
-->
    <title>ICU照合順序</title>

    <para>
<!--
     ICU collations can be created like:
-->
ICU照合順序は次のように作成できます。

<programlisting>
CREATE COLLATION german (provider = icu, locale = 'de-DE');
</programlisting>

<!--
     ICU locales are specified as a BCP 47 <link
     linkend="icu-language-tag">Language Tag</link>, but can also accept most
     libc-style locale names. If possible, libc-style locale names are
     transformed into language tags.
-->
ICUロケールはBCP 47<link linkend="icu-language-tag">言語タグ</link>として指定されますが、ほとんどのlibcスタイルのロケール名も受け入れます。
可能な場合、libcスタイルのロケール名は言語タグに変換されます。
    </para>
    <para>
<!--
     New ICU collations can customize collation behavior extensively by
     including collation attributes in the language tag. See <xref
     linkend="icu-custom-collations"/> for details and examples.
-->
新しいカスタマイズICU照合順序では、照合順序タグに照合順序属性を含めることで、言語の動作を広範囲にICU化できます。
詳細と例については、<xref linkend="icu-custom-collations"/>を参照してください。
    </para>
   </sect4>
   <sect4 id="collation-copy">
<!--
   <title>Copying Collations</title>
-->
   <title>照合順序の複製</title>

   <para>
<!--
    The command <xref linkend="sql-createcollation"/> can also be used to
    create a new collation from an existing collation, which can be useful to
    be able to use operating-system-independent collation names in
    applications, create compatibility names, or use an ICU-provided collation
    under a more readable name.  For example:
-->
コマンド<xref linkend="sql-createcollation"/>は、既存の照合順序から新しい照合順序を作る際にも利用できます。
これは、オペレーティングシステムから独立した照合順序名をアプリケーションで使用可能にしたり、互換性のある名称を作成したり、ICUが提供する照合順序を、よりわかりやすい名称で利用するのに役立ちます。
例を示します。
<programlisting>
CREATE COLLATION german FROM "de_DE";
CREATE COLLATION french FROM "fr-x-icu";
</programlisting>
   </para>
   </sect4>
   </sect3>

   <sect3 id="collation-nondeterministic">
<!--
    <title>Nondeterministic Collations</title>
-->
    <title>非決定論的な照合順序</title>

    <para>
<!--
     A collation is either <firstterm>deterministic</firstterm> or
     <firstterm>nondeterministic</firstterm>.  A deterministic collation uses
     deterministic comparisons, which means that it considers strings to be
     equal only if they consist of the same byte sequence.  Nondeterministic
     comparison may determine strings to be equal even if they consist of
     different bytes.  Typical situations include case-insensitive comparison,
     accent-insensitive comparison, as well as comparison of strings in
     different Unicode normal forms.  It is up to the collation provider to
     actually implement such insensitive comparisons; the deterministic flag
     only determines whether ties are to be broken using bytewise comparison.
     See also <ulink url="https://www.unicode.org/reports/tr10">Unicode Technical
     Standard 10</ulink> for more information on the terminology.
-->
照合順序は<firstterm>決定論的</firstterm>もしくは<firstterm>非決定論的</firstterm>のどちらかです。
決定論的な照合順序は決定論的な比較を使用します。
つまり、同じバイト列で構成される場合に限り等しい文字列とみなします。
非決定論的な比較は、異なるバイト値で構成される文字列の場合でさえ文字列が等しいと判定するかもしれません。
一般的な状況では、大文字小文字を区別しない比較、アクセントを区別しない比較および異なるUnicode正規化形式による文字列の比較が含まれます。
このような区別しない比較を実際に実装するかは照合順序のプロバイダ次第です。
deterministicフラグはバイト単位の比較を用いて分解されるかどうかのみを決定します。
用語の詳細については、<ulink url="https://www.unicode.org/reports/tr10">Unicode Technical Standard 10</ulink>を参照してください。
    </para>

    <para>
<!--
     To create a nondeterministic collation, specify the property
     <literal>deterministic = false</literal> to <command>CREATE
     COLLATION</command>, for example:
-->
非決定論的な照合順序を作るためには<command>CREATE COLLATION</command>に<literal>deterministic = false</literal>プロパティを指定します。
以下に例を示します。
<programlisting>
CREATE COLLATION ndcoll (provider = icu, locale = 'und', deterministic = false);
</programlisting>
<!--
     This example would use the standard Unicode collation in a
     nondeterministic way.  In particular, this would allow strings in
     different normal forms to be compared correctly.  More interesting
     examples make use of the ICU customization facilities explained above.
     For example:
-->
この例では非決定論的な方法で標準のUnicode照合順序を使えます。
具体的には、これは異なる正規形の文字列を正しく比較できるでしょう。
より興味深い例は上述したICUカスタマイズ機能を用いた場合です。
以下に例を示します。
<programlisting>
CREATE COLLATION case_insensitive (provider = icu, locale = 'und-u-ks-level2', deterministic = false);
CREATE COLLATION ignore_accents (provider = icu, locale = 'und-u-ks-level1-kc-true', deterministic = false);
</programlisting>
    </para>

    <para>
<!--
     All standard and predefined collations are deterministic, all
     user-defined collations are deterministic by default.  While
     nondeterministic collations give a more <quote>correct</quote> behavior,
     especially when considering the full power of Unicode and its many
     special cases, they also have some drawbacks.  Foremost, their use leads
     to a performance penalty.  Note, in particular, that B-tree cannot use
     deduplication with indexes that use a nondeterministic collation.  Also,
     certain operations are not possible with nondeterministic collations,
     such as pattern matching operations.  Therefore, they should be used
     only in cases where they are specifically wanted.
-->
すべての標準および事前に定義された照合順序は決定論的であり、すべてのユーザ定義の照合順序はデフォルトで決定論的です。
特にUnicodeの全機能およびその特別な場合を考えた際、非決定論的な照合順序はより多くの<quote>正しい</quote>振る舞いを与えると同時に、いくつかの欠点もあります。
第一にそれらを使用するとパフォーマンスが低下します。
B-treeは非決定的照合順序を使用したインデックスでは重複排除には使用できないことに特に注意してください。
また、パターンマッチング操作などで非決定論的な照合順序による操作ができないことも避けられません。
したがって、これらは明確に必要とされる場合のみに使用されるべきです。
    </para>

    <tip>
     <para>
<!--
      To deal with text in different Unicode normalization forms, it is also
      an option to use the functions/expressions
      <function>normalize</function> and <literal>is normalized</literal> to
      preprocess or check the strings, instead of using nondeterministic
      collations.  There are different trade-offs for each approach.
-->
異なるUnicode正規化形式のテキストを処理する場合、非決定論的な照合を使用する代わりに<function>normalize</function>および<literal>is normalized</literal>関数もしくは式を使用して文字列の前処理もしくはチェックをするオプションもあります。
それぞれのアプローチで異なるトレードオフがあります。
     </para>
    </tip>
   </sect3>
  </sect2>

  <sect2 id="icu-custom-collations">
<!--
   <title>ICU Custom Collations</title>
-->
   <title>ICU照合順序カスタム</title>

   <para>
<!--
    ICU allows extensive control over collation behavior by defining new
    collations with collation settings as a part of the language tag. These
    settings can modify the collation order to suit a variety of needs. For
    instance:
-->
ICUは、言語タグの一部として照合順序設定を持つ新しい照合順序を定義することで、照合順序の動作を広範囲に制御することができます。
これらの設定は、さまざまなニーズに合わせて照合順序を変更できます。
インスタンスの場合:

<programlisting>
-- ignore differences in accents and case
CREATE COLLATION ignore_accent_case (provider = icu, deterministic = false, locale = 'und-u-ks-level1');
SELECT 'Å' = 'A' COLLATE ignore_accent_case; -- true
SELECT 'z' = 'Z' COLLATE ignore_accent_case; -- true

-- upper case letters sort before lower case.
CREATE COLLATION upper_first (provider = icu, locale = 'und-u-kf-upper');
SELECT 'B' &lt; 'b' COLLATE upper_first; -- true

-- treat digits numerically and ignore punctuation
CREATE COLLATION num_ignore_punct (provider = icu, deterministic = false, locale = 'und-u-ka-shifted-kn');
SELECT 'id-45' &lt; 'id-123' COLLATE num_ignore_punct; -- true
SELECT 'w;x*y-z' = 'wxyz' COLLATE num_ignore_punct; -- true
</programlisting>

<!--
    Many of the available options are described in <xref
    linkend="icu-collation-settings"/>, or see <xref
    linkend="icu-external-references"/> for more details.
-->
利用可能なオプションの多くは<xref linkend="icu-collation-settings"/>で説明されています。
詳細は<xref linkend="icu-external-references"/>を参照してください。
   </para>

   <sect3 id="icu-collation-comparison-levels">
<!--
    <title>ICU Comparison Levels</title>
-->
    <title>ICU比較レベル</title>

    <para>
<!--
     Comparison of two strings (collation) in ICU is determined by a
     multi-level process, where textual features are grouped into
     "levels". Treatment of each level is controlled by the <link
     linkend="icu-collation-settings-table">collation settings</link>. Higher
     levels correspond to finer textual features.
-->
ICUでの2つの文字列の比較（照合）は、テキストの特徴が「レベル」にグループ化される多段階プロセスによって決定されます。
各レベルの処理は、<link linkend="icu-collation-settings-table">照合設定</link>によって制御されます。
高いレベルは、より細かいテキストの特徴に対応します。
    </para>

    <para>
<!--
     <xref linkend="icu-collation-levels"/> shows which textual feature
     differences are considered significant when determining equality at the
     given level. The Unicode character <literal>U+2063</literal> is an
     invisible separator, and as seen in the table, is ignored for at all
     levels of comparison less than <literal>identic</literal>.
-->
<xref linkend="icu-collation-levels"/>は、指定されたレベルで等しいかどうかを決定する際に重要とされるテキスト特徴の違いを示しています。
Unicode文字<literal>U+2063</literal>は不可視のセパレータであり、表に示されているように、<literal>identic</literal>未満のすべての比較レベルで無視されます。
    </para>

     <table id="icu-collation-levels">
<!--
      <title>ICU Collation Levels</title>
-->
      <title>ICU照合順序レベル</title>
      <tgroup cols="8">
       <colspec colname="col1" colwidth="1*"/>
       <colspec colname="col2" colwidth="1.25*"/>
       <colspec colname="col3" colwidth="1*"/>
       <colspec colname="col4" colwidth="1*"/>
       <colspec colname="col5" colwidth="1*"/>
       <colspec colname="col6" colwidth="1*"/>
       <colspec colname="col7" colwidth="1*"/>
       <colspec colname="col8" colwidth="1*"/>

       <thead>
        <row>
<!--
         <entry>Level</entry>
-->
         <entry>レベル</entry>
<!--
         <entry>Description</entry>
-->
         <entry>説明</entry>
         <entry><literal>'f' = 'f'</literal></entry>
         <entry><literal>'ab' = U&amp;'a\2063b'</literal></entry>
         <entry><literal>'x-y' = 'x_y'</literal></entry>
         <entry><literal>'g' = 'G'</literal></entry>
         <entry><literal>'n' = 'ñ'</literal></entry>
         <entry><literal>'y' = 'z'</literal></entry>
        </row>
       </thead>

       <tbody>
        <row>
         <entry>level1</entry>
<!--
         <entry>Base Character</entry>
-->
         <entry>基本文字</entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>false</literal></entry>
        </row>
        <row>
         <entry>level2</entry>
<!--
         <entry>Accents</entry>
-->
         <entry>アクセント</entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
        </row>
        <row>
         <entry>level3</entry>
<!--
         <entry>Case/Variants</entry>
-->
         <entry>大文字小文字／亜種</entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
        </row>
        <row>
         <entry>level4</entry>
<!--
         <entry>Punctuation<footnote><para>only with
         <literal>ka-shifted</literal>; see <xref
         linkend="icu-collation-settings-table"/></para></footnote></entry>
-->
         <entry>句読点<footnote><para><literal>ka-shifted</literal>に対してのみ。<xref linkend="icu-collation-settings-table"/>参照</para></footnote></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>true</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
        </row>
        <row>
         <entry>identic</entry>
<!--
         <entry>All</entry>
-->
         <entry>すべて</entry>
         <entry><literal>true</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry><literal>false</literal></entry>
        </row>
       </tbody>
      </tgroup>
     </table>

    <para>
<!--
     At every level, even with full normalization off, basic normalization is
     performed. For example, <literal>'á'</literal> may be composed of the
     code points <literal>U&amp;'\0061\0301'</literal> or the single code
     point <literal>U&amp;'\00E1'</literal>, and those sequences will be
     considered equal even at the <literal>identic</literal> level. To treat
     any difference in code point representation as distinct, use a collation
     created with <symbol>deterministic</symbol> set to
     <literal>true</literal>.
-->
すべてのレベルで、完全正規化が無効であっても基本正規化は行われます。
例の場合、<literal>'á'</literal>はコードポイント<literal>U&amp;'\0061\0301'</literal>または単一コードポイント<literal>U&amp;'\00E1'</literal>で構成され、これらのシーケンスは<literal>identic</literal>レベルでも等しいとみなされます。
コードポイント表現形式内の差を個別として扱うには、<symbol>deterministic</symbol>を<literal>true</literal>に設定して作成された照合順序を使用します。
    </para>

    <sect4 id="icu-collation-level-examples">
<!--
     <title>Collation Level Examples</title>
-->
     <title>照合順序レベルの例</title>

<programlisting>
CREATE COLLATION level3 (provider = icu, deterministic = false, locale = 'und-u-ka-shifted-ks-level3');
CREATE COLLATION level4 (provider = icu, deterministic = false, locale = 'und-u-ka-shifted-ks-level4');
CREATE COLLATION identic (provider = icu, deterministic = false, locale = 'und-u-ka-shifted-ks-identic');

-- invisible separator ignored at all levels except identic
SELECT 'ab' = U&amp;'a\2063b' COLLATE level4; -- true
SELECT 'ab' = U&amp;'a\2063b' COLLATE identic; -- false

-- punctuation ignored at level3 but not at level 4
SELECT 'x-y' = 'x_y' COLLATE level3; -- true
SELECT 'x-y' = 'x_y' COLLATE level4; -- false
</programlisting>

    </sect4>
   </sect3>

   <sect3 id="icu-collation-settings">
<!--
    <title>Collation Settings for an ICU Locale</title>
-->
    <title>ICUロケールの照合順序設定</title>

    <para>
<!--
     <xref linkend="icu-collation-settings-table"/> shows the available
     collation settings, which can be used as part of a language tag to
     customize a collation.
-->
<xref linkend="icu-collation-settings-table"/>には、利用可能な照合順序設定が表示されます。
これらは言語タグの一部として使用して照合順序をカスタマイズすることができます。
    </para>

     <table id="icu-collation-settings-table">
<!--
      <title>ICU Collation Settings</title>
-->
      <title>ICU照合順序設定</title>
      <tgroup cols="4">
       <colspec colname="col1" colwidth="1*"/>
       <colspec colname="col2" colwidth="2*"/>
       <colspec colname="col3" colwidth="2*"/>
       <colspec colname="col4" colwidth="5*"/>

       <thead>
        <row>
<!--
         <entry>Key</entry>
-->
         <entry>キー</entry>
<!--
         <entry>Values</entry>
-->
         <entry>値</entry>
<!--
         <entry>Default</entry>
-->
         <entry>デフォルト</entry>
<!--
         <entry>Description</entry>
-->
         <entry>説明</entry>
        </row>
       </thead>

       <tbody>
        <row>
         <entry><literal>co</literal></entry>
         <entry><literal>emoji</literal>, <literal>phonebk</literal>, <literal>standard</literal>, <replaceable>...</replaceable></entry>
         <entry><literal>standard</literal></entry>
         <entry>
<!--
          Collation type. See <xref linkend="icu-external-references"/> for additional options and details.
-->
照合順序タイプ。追加のオプションと詳細については<xref linkend="icu-external-references"/>を参照してください。
         </entry>
        </row>

        <row>
         <entry><literal>ka</literal></entry>
         <entry><literal>noignore</literal>, <literal>shifted</literal></entry>
         <entry><literal>noignore</literal></entry>
         <entry>
<!--
          If set to <literal>shifted</literal>, causes some characters
          (e.g. punctuation or space) to be ignored in comparison. Key
          <literal>ks</literal> must be set to <literal>level3</literal> or
          lower to take effect. Set key <literal>kv</literal> to control which
          character classes are ignored.
-->
<literal>shifted</literal>に設定されている場合、いくつかの文字（例：句読点やスペース）が比較で無視されるようになります。
効果を発揮するには、キー<literal>ks</literal>を<literal>level3</literal>以下に設定する必要があります。
どの文字クラスが無視されるかを制御するためにキー<literal>kv</literal>を設定します。
         </entry>
        </row>

        <row>
         <entry><literal>kb</literal></entry>
         <entry><literal>true</literal>, <literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry>
<!--
          Backwards comparison for the level 2 differences. For example,
          locale <literal>und-u-kb</literal> sorts <literal>'àe'</literal>
          before <literal>'aé'</literal>.
-->
レベル2の差異の逆比較。
例えば、ロケール<literal>und-u-kb</literal>は<literal>'àe'</literal>を<literal>'aé'</literal>よりも前に並べます。
         </entry>
        </row>

        <row>
         <entry><literal>kc</literal></entry>
         <entry><literal>true</literal>, <literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry>
          <para>
<!--
           Separates case into a "level 2.5" that falls between accents and
           other level 3 features.
-->
大文字小文字をアクセントと他のレベル3の特徴の間に「レベル2.5」として分離します。
          </para>
          <para>
<!--
           If set to <literal>true</literal> and <literal>ks</literal> is set
           to <literal>level1</literal>, will ignore accents but take case
           into account.
-->
<literal>true</literal>に設定されており、<literal>ks</literal>が<literal>level1</literal>に設定されている場合、アクセントを無視しますが、大文字小文字を考慮します。
          </para>
         </entry>
        </row>

        <row>
         <entry><literal>kf</literal></entry>
         <entry>
          <literal>upper</literal>, <literal>lower</literal>,
          <literal>false</literal>
         </entry>
         <entry><literal>false</literal></entry>
         <entry>
<!--
          If set to <literal>upper</literal>, upper case sorts before lower
          case. If set to <literal>lower</literal>, lower case sorts before
          upper case. If set to <literal>false</literal>, the sort depends on
          the rules of the locale.
-->
<literal>upper</literal>に設定されている場合、大文字が小文字よりも前に並べられます。
<literal>lower</literal>に設定されている場合、小文字が大文字よりも前に並べられます。
<literal>false</literal>に設定されている場合、並べ替えはロケールの規則に依存します。
         </entry>
        </row>

        <row>
         <entry><literal>kn</literal></entry>
         <entry><literal>true</literal>, <literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry>
<!--
          If set to <literal>true</literal>, numbers within a string are
          treated as a single numeric value rather than a sequence of
          digits. For example, <literal>'id-45'</literal> sorts before
          <literal>'id-123'</literal>.
-->
<literal>true</literal>に設定されている場合、文字列内の数字は、数字のシーケンスではなく単一の数値として扱われます。
例えば、<literal>'id-45'</literal>は<literal>'id-123'</literal>よりも前に並べられます。
         </entry>
        </row>

        <row>
         <entry><literal>kk</literal></entry>
         <entry><literal>true</literal>, <literal>false</literal></entry>
         <entry><literal>false</literal></entry>
         <entry>
          <para>
<!--
           Enable full normalization; may affect performance. Basic
           normalization is performed even when set to
           <literal>false</literal>. Locales for languages that require full
           normalization typically enable it by default.
-->
完全正規化を有効にします。
パフォーマンスに影響する場合があります。
基本正規化は、<literal>false</literal>に設定されている場合でも実行されます。
完全正規化を必要とする言語のロケールでは、通常、デフォルトによって有効にされます。
          </para>
          <para>
<!--
           Full normalization is important in some cases, such as when
           multiple accents are applied to a single character. For example,
           the code point sequences <literal>U&amp;'\0065\0323\0302'</literal>
           and <literal>U&amp;'\0065\0302\0323'</literal> represent
           an <literal>e</literal> with circumflex and dot-below accents
           applied in different orders. With full normalization
           on, these code point sequences are treated as equal; otherwise they
           are unequal.
-->
複数のアクセントが単一の文字に適用される場合など、完全正規化が重要な場合があります。
例えば、コードポイントシーケンス<literal>U&amp;'\0065\0323\0302'</literal>と<literal>U&amp;'\0065\0302\0323'</literal>は、異なる順序で適用されたサーカムフレックスと下ドットのアクセントを持つ<literal>e</literal>を表します。
完全正規化が有効の場合、これらのコードポイントシーケンスは等しいものとして扱われます。
それ以外の場合は等しくありません。
          </para>
         </entry>
        </row>

        <row>
         <entry><literal>kr</literal></entry>
         <entry>
          <literal>space</literal>, <literal>punct</literal>,
          <literal>symbol</literal>, <literal>currency</literal>,
          <literal>digit</literal>, <replaceable>script-id</replaceable>
         </entry>
         <entry></entry>
         <entry>
          <para>
<!--
           Set to one or more of the valid values, or any BCP 47
           <replaceable>script-id</replaceable>, e.g. <literal>latn</literal>
           ("Latin") or <literal>grek</literal> ("Greek"). Multiple values are
           separated by "<literal>-</literal>".
-->
1つ以上の有効な値、または任意のBCP 47<replaceable>script-id</replaceable>に設定します。
たとえば、<literal>latn</literal>("ラテン")または<literal>grek</literal>("ギリシャ")です。
複数の値は"<literal>-</literal>"で区切ります。
          </para>
          <para>
<!--
           Redefines the ordering of classes of characters; those characters
           belonging to a class earlier in the list sort before characters
           belonging to a class later in the list. For instance, the value
           <literal>digit-currency-space</literal> (as part of a language tag
           like <literal>und-u-kr-digit-currency-space</literal>) sorts
           punctuation before digits and spaces.
-->
文字クラスの順序を再定義します。
リストの後の文字クラスに属する文字は、リストの後の文字クラスに属する文字よりも前に並べられます。
たとえば、値<literal>digit-currency-space</literal>（言語タグの一部として<literal>und-u-kr-digit-currency-space</literal>）は、句読点を数字とスペースの前に並べます。
          </para>
         </entry>
        </row>

        <row>
         <entry><literal>ks</literal></entry>
         <entry><literal>level1</literal>, <literal>level2</literal>, <literal>level3</literal>, <literal>level4</literal>, <literal>identic</literal></entry>
         <entry><literal>level3</literal></entry>
         <entry>
<!--
          Sensitivity (or "strength") when determining equality, with
          <literal>level1</literal> the least sensitive to differences and
          <literal>identic</literal> the most sensitive to differences. See
          <xref linkend="icu-collation-levels"/> for details.
-->
等価性を決定する際の感度（または「強度」）で、<literal>level1</literal>は差異に対して最も感度が低く、<literal>identic</literal>は差異に対して最も感度が高いです。
詳細は<xref linkend="icu-collation-levels"/>を参照してください。
         </entry>
        </row>

        <row>
         <entry><literal>kv</literal></entry>
         <entry>
          <literal>space</literal>, <literal>punct</literal>,
          <literal>symbol</literal>, <literal>currency</literal>
         </entry>
         <entry><literal>punct</literal></entry>
         <entry>
<!--
          Classes of characters ignored during comparison at level 3. Setting
          to a later value includes earlier values;
          e.g. <literal>symbol</literal> also includes
          <literal>punct</literal> and <literal>space</literal> in the
          characters to be ignored. Key <literal>ka</literal> must be set to
          <literal>shifted</literal> and key <literal>ks</literal> must be set
          to <literal>level3</literal> or lower to take effect.
-->
レベル3での比較中に無視される文字クラス。
後の値に設定すると、前の値も含まれます。
たとえば、<literal>symbol</literal>は<literal>punct</literal>および<literal>space</literal>も含みます。
無視される文字を含む文字にキー<literal>ka</literal>を<literal>shifted</literal>に設定し、キー<literal>ks</literal>を<literal>level3</literal>以下に設定する必要があります。
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>

    <para>
<!--
     Defaults may depend on locale. The above table is not meant to be
     complete. See <xref linkend="icu-external-references"/> for additional
     options and details.
-->
デフォルトはロケールによって異なります。
上記のテーブルは完全なものではありません。
追加のオプションと詳細については<xref linkend="icu-external-references"/>を参照してください。
    </para>

    <note>
     <para>
<!--
      For many collation settings, you must create the collation with
      <option>deterministic</option> set to <literal>false</literal> for the
      setting to have the desired effect (see <xref
      linkend="collation-nondeterministic"/>). Additionally, some settings
      only take effect when the key <literal>ka</literal> is set to
      <literal>shifted</literal> (see <xref
      linkend="icu-collation-settings-table"/>).
-->
多くの照合順序設定では、目的の効果を得るために、<option>deterministic</option>を<literal>false</literal>に設定した<literal>照合順序</literal>を作成する必要があります（<xref linkend="collation-nondeterministic"/>を参照）。
また、キー<literal>ka</literal>が<literal>shifted</literal>に設定されている場合にのみ有効になる設定もあります（<xref linkend="icu-collation-settings-table"/>を参照）。
     </para>
    </note>
   </sect3>

   <sect3 id="icu-locale-examples">
<!--
    <title>Collation Settings Examples</title>
-->
    <title>照合順序設定の例</title>

     <variablelist>
      <varlistentry id="collation-managing-create-icu-de-u-co-phonebk-x-icu">
       <term><literal>CREATE COLLATION "de-u-co-phonebk-x-icu" (provider = icu, locale = 'de-u-co-phonebk');</literal></term>
       <listitem>
<!--
        <para>German collation with phone book collation type</para>
-->
       <para>電話帳照合順形式を伴うドイツ語の照合順序</para>
       </listitem>
      </varlistentry>

      <varlistentry id="collation-managing-create-icu-und-u-co-emoji-x-icu">
       <term><literal>CREATE COLLATION "und-u-co-emoji-x-icu" (provider = icu, locale = 'und-u-co-emoji');</literal></term>
       <listitem>
        <para>
<!--
         Root collation with Emoji collation type, per Unicode Technical Standard #51
-->
絵文字照合順序型を伴うroot照合順序。Unicode Technical Standard #51による。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="collation-managing-create-icu-en-u-kr-grek-latn">
       <term><literal>CREATE COLLATION latinlast (provider = icu, locale = 'en-u-kr-grek-latn');</literal></term>
       <listitem>
        <para>
<!--
         Sort Greek letters before Latin ones.  (The default is Latin before Greek.)
-->
ラテン文字の前にギリシャ文字が来るように並べます。（デフォルトではギリシャ文字の前にラテン文字が来ます。）
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="collation-managing-create-icu-en-u-kf-upper">
       <term><literal>CREATE COLLATION upperfirst (provider = icu, locale = 'en-u-kf-upper');</literal></term>
       <listitem>
        <para>
<!--
         Sort upper-case letters before lower-case letters.  (The default is
         lower-case letters first.)
-->
小文字の前に大文字が来るように並べます。（デフォルトでは最初に小文字が来ます。）
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="collation-managing-create-icu-en-u-kf-upper-kr-grek-latn">
       <term><literal>CREATE COLLATION special (provider = icu, locale = 'en-u-kf-upper-kr-grek-latn');</literal></term>
       <listitem>
        <para>
<!--
         Combines both of the above options.
-->
上記のオプションを組み合わせます。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
   </sect3>

   <sect3 id="icu-tailoring-rules">
<!--
    <title>ICU Tailoring Rules</title>
-->
    <title>ICU適合化規則</title>

    <para>
<!--
     If the options provided by the collation settings shown above are not
     sufficient, the order of collation elements can be changed with tailoring
     rules, whose syntax is detailed at <ulink
     url="https://unicode-org.github.io/icu/userguide/collation/customization/"></ulink>.
-->
上記のオプション設定によって提供される照合順序が十分でない場合は、照合順序要素のオーダーを適合化規則を使用して変更できます。
適合化規則の構文は<ulink url="https://unicode-org.github.io/icu/userguide/collation/customization/">で詳しく説明されています。
</ulink>
    </para>

    <para>
<!--
     This small example creates a collation based on the root locale with a
     tailoring rule:
-->
この小さな例は、rootロケールをベースにした照合順序を作成し、ルールを調整します。
<programlisting>
<![CDATA[CREATE COLLATION custom (provider = icu, locale = 'und', rules = '&V << w <<< W');]]>
</programlisting>
<!--
     With this rule, the letter <quote>W</quote> is sorted after
     <quote>V</quote>, but is treated as a secondary difference similar to an
     accent.  Rules like this are contained in the locale definitions of some
     languages.  (Of course, if a locale definition already contains the
     desired rules, then they don't need to be specified again explicitly.)
-->
このルールでは、文字<quote>W</quote>は<quote>V</quote>の後にソートされますが、アクセントと同様に二次的な差として扱われます。
このようなルールは、一部の言語のロケール定義に含まれています。
（もちろん、ロケール定義がすでに目的のルールを包含している場合は、明示的に再指定する必要はありません。）
    </para>

    <para>
<!--
     Here is a more complex example.  The following statement sets up a
     collation named <literal>ebcdic</literal> with rules to sort US-ASCII
     characters in the order of the EBCDIC encoding.
-->
ここに、より複雑な例があります。
次のステートメントは、EBCDIC記名的のオーダーにUS-ASCII文字をソートするためのルールを使用して、照合順序エンコーディング<literal>ebcdic</literal>を設定します。

<programlisting>
<![CDATA[CREATE COLLATION ebcdic (provider = icu, locale = 'und',
rules = $$
& ' ' < '.' < '<' < '(' < '+' < \|
< '&' < '!' < '$' < '*' < ')' < ';'
< '-' < '/' < ',' < '%' < '_' < '>' < '?'
< '`' < ':' < '#' < '@' < \' < '=' < '"'
<*a-r < '~' <*s-z < '^' < '[' < ']'
< '{' <*A-I < '}' <*J-R < '\' <*S-Z <*0-9
$$);]]>

SELECT c
FROM (VALUES ('a'), ('b'), ('A'), ('B'), ('1'), ('2'), ('!'), ('^')) AS x(c)
ORDER BY c COLLATE ebcdic;
 c
---
 !
 a
 b
 ^
 A
 B
 1
 2
</programlisting>
    </para>
   </sect3>

   <sect3 id="icu-external-references">
<!--
    <title>External References for ICU</title>
-->
    <title>ICUの外部参照</title>

    <para>
<!--
     This section (<xref linkend="icu-custom-collations"/>) is only a brief
     overview of ICU behavior and language tags. Refer to the following
     documents for technical details, additional options, and new behavior:
-->
この節(<xref linkend="icu-custom-collations"/>)は、概要の動作と言語タグの簡単なオプションです。
技術的な詳細、追加のICU、および新しい動作については、次のドキュメントを参照してください。
    </para>

    <itemizedlist>
     <listitem>
      <para>
       <ulink url="https://www.unicode.org/reports/tr35/tr35-collation.html">Unicode Technical Standard #35</ulink>
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="https://www.rfc-editor.org/info/bcp47">BCP 47</ulink>
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="https://github.com/unicode-org/cldr/blob/master/common/bcp47/collation.xml">CLDR repository</ulink>
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="https://unicode-org.github.io/icu/userguide/locale/"></ulink>
      </para>
     </listitem>
     <listitem>
      <para>
       <ulink url="https://unicode-org.github.io/icu/userguide/collation/"></ulink>
      </para>
     </listitem>
    </itemizedlist>
   </sect3>
  </sect2>
 </sect1>

 <sect1 id="multibyte">
<!--
  <title>Character Set Support</title>
-->
  <title>文字集合サポート</title>

  <indexterm zone="multibyte"><primary>character set</primary></indexterm>
  <indexterm zone="multibyte"><primary>文字集合</primary></indexterm>

  <para>
<!--
   The character set support in <productname>PostgreSQL</productname>
   allows you to store text in a variety of character sets (also called
   encodings), including
   single-byte character sets such as the ISO 8859 series and
   multiple-byte character sets such as <acronym>EUC</acronym> (Extended Unix
   Code), UTF-8, and Mule internal code.  All supported character sets
   can be used transparently by clients, but a few are not supported
   for use within the server (that is, as a server-side encoding).
   The default character set is selected while
   initializing your <productname>PostgreSQL</productname> database
   cluster using <command>initdb</command>.  It can be overridden when you
   create a database, so you can have multiple
   databases each with a different character set.
-->
<productname>PostgreSQL</productname>の文字集合（エンコーディングとも呼ばれます）サポートにより、ISO 8859シリーズなどのシングルバイト文字や<acronym>EUC</acronym>（拡張Unixコード）、UTF-8、Mule内部コードなどのマルチバイト文字を含む、各種文字集合でテキストを保存できます。
全ての文字集合はクライアントにより透過的に使用できますが、いくつかは、サーバ内での（つまりサーバサイドエンコーディングとして）使用はサポートされていません。デフォルトの文字集合は、<command>initdb</command>を使用した<productname>PostgreSQL</productname>データベースクラスタの初期化時に決定されます。
これは、データベースを作成する時に上書きできるので、異なる文字集合を使用した複数のデータベースを持つことができます。
  </para>

  <para>
<!--
   An important restriction, however, is that each database's character set
   must be compatible with the database's <envar>LC_CTYPE</envar> (character
   classification) and <envar>LC_COLLATE</envar> (string sort order) locale
   settings. For <literal>C</literal> or
   <literal>POSIX</literal> locale, any character set is allowed, but for other
   libc-provided locales there is only one character set that will work
   correctly.
   (On Windows, however, UTF-8 encoding can be used with any locale.)
   If you have ICU support configured, ICU-provided locales can be used
   with most but not all server-side encodings.
-->
しかし重要な制限として、それぞれのデータベースの文字集合がサーバの<envar>LC_CTYPE</envar>（文字分類）および<envar>LC_COLLATE</envar>（文字列並べ替え順序）ロケール設定と互換性がなくてはいけないことがあげられます。
<literal>C</literal>もしくは<literal>POSIX</literal>ロケール設定の場合、どのような文字集合も許可されています。
しかし、libcが提供する他のロケール設定の場合、正しく動作する文字集合はひとつだけとなります。
（しかしWindowsではUTF-8符号化方式をどのロケールでも使用できます。）
ICUサポートが組み込まれている場合は、サーバサイドのすべてではないにしても、ほとんどのエンコーディングで、ICUが提供する照合順序が利用できます。
  </para>

   <sect2 id="multibyte-charset-supported">
<!--
    <title>Supported Character Sets</title>
-->
    <title>サポートされる文字集合</title>

    <para>
<!--
     <xref linkend="charset-table"/> shows the character sets available
     for use in <productname>PostgreSQL</productname>.
-->
<productname>PostgreSQL</productname>で使用できる文字集合を<xref linkend="charset-table"/>に示します。
    </para>

     <table id="charset-table">
<!--
      <title><productname>PostgreSQL</productname> Character Sets</title>
-->
      <title><productname>PostgreSQL</productname>文字集合</title>
      <tgroup cols="7">
       <colspec colname="col1" colwidth="3*"/>
       <colspec colname="col2" colwidth="2*"/>
       <colspec colname="col3" colwidth="2*"/>
       <colspec colname="col4" colwidth="1.25*"/>
       <colspec colname="col5" colwidth="1*"/>
       <colspec colname="col6" colwidth="1*"/>
       <colspec colname="col7" colwidth="2*"/>
       <thead>
        <row>
<!--
         <entry>Name</entry>
-->
         <entry>名前</entry>
<!--
         <entry>Description</entry>
-->
         <entry>説明</entry>
<!--
         <entry>Language</entry>
-->
         <entry>言語</entry>
<!--
         <entry>Server?</entry>
-->
         <entry>サーバ？</entry>
<!--
         <entry>ICU?</entry>
-->
         <entry>ICU?</entry>
         <!--
          The Bytes/Char field is populated by looking at the values returned
          by pg_wchar_table.mblen function for each encoding.
         -->
         <!--
          バイト数/文字列は、それぞれの符号化方式に対するpg_wchar_table.mblen関数の戻り値を見ることにより登録されます。
         -->
<!--
         <entry>Bytes/&zwsp;Char</entry>
-->
         <entry>バイト数/&zwsp;文字</entry>
<!--
         <entry>Aliases</entry>
-->
         <entry>別名</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>BIG5</literal></entry>
         <entry>Big Five</entry>
<!--
         <entry>Traditional Chinese</entry>
-->
         <entry>繁体字</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;2</entry>
-->
         <entry>1-2</entry>
<!--
         <entry><literal>WIN950</literal>, <literal>Windows950</literal></entry>
-->
         <entry><literal>WIN950</literal>、<literal>Windows950</literal></entry>
        </row>
        <row>
         <entry><literal>EUC_CN</literal></entry>
         <entry>Extended UNIX Code-CN</entry>
<!--
         <entry>Simplified Chinese</entry>
-->
         <entry>簡体字</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>1&ndash;3</entry>
-->
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_JP</literal></entry>
         <entry>Extended UNIX Code-JP</entry>
<!--
         <entry>Japanese</entry>
-->
         <entry>日本語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>1&ndash;3</entry>
-->
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_JIS_2004</literal></entry>
         <entry>Extended UNIX Code-JP, JIS X 0213</entry>
<!--
         <entry>Japanese</entry>
-->
         <entry>日本語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;3</entry>
-->
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_KR</literal></entry>
         <entry>Extended UNIX Code-KR</entry>
<!--
         <entry>Korean</entry>
-->
         <entry>韓国語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>1&ndash;3</entry>
-->
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>EUC_TW</literal></entry>
         <entry>Extended UNIX Code-TW</entry>
<!--
         <entry>Traditional Chinese, Taiwanese</entry>
-->
         <entry>繁体字、台湾語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>1&ndash;4</entry>
-->
         <entry>1-4</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>GB18030</literal></entry>
         <entry>National Standard</entry>
<!--
         <entry>Chinese</entry>
-->
         <entry>中国語</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;4</entry>
-->
         <entry>1-4</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>GBK</literal></entry>
         <entry>Extended National Standard</entry>
<!--
         <entry>Simplified Chinese</entry>
-->
         <entry>簡体字</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;2</entry>
-->
         <entry>1-2</entry>
<!--
         <entry><literal>WIN936</literal>, <literal>Windows936</literal></entry>
-->
         <entry><literal>WIN936</literal>、<literal>Windows936</literal></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_5</literal></entry>
<!--
         <entry>ISO 8859-5, <acronym>ECMA</acronym> 113</entry>
-->
         <entry>ISO 8859-5、<acronym>ECMA</acronym> 113</entry>
<!--
         <entry>Latin/Cyrillic</entry>
-->
         <entry>ラテン/キリル</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_6</literal></entry>
<!--
         <entry>ISO 8859-6, <acronym>ECMA</acronym> 114</entry>
-->
         <entry>ISO 8859-6、<acronym>ECMA</acronym> 114</entry>
<!--
         <entry>Latin/Arabic</entry>
-->
         <entry>ラテン/アラビア語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_7</literal></entry>
<!--
         <entry>ISO 8859-7, <acronym>ECMA</acronym> 118</entry>
-->
         <entry>ISO 8859-7、<acronym>ECMA</acronym> 118</entry>
<!--
         <entry>Latin/Greek</entry>
-->
         <entry>ラテン/ギリシャ語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>ISO_8859_8</literal></entry>
<!--
         <entry>ISO 8859-8, <acronym>ECMA</acronym> 121</entry>
-->
         <entry>ISO 8859-8、<acronym>ECMA</acronym> 121</entry>
<!--
         <entry>Latin/Hebrew</entry>
-->
         <entry>ラテン/ヘブライ語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>JOHAB</literal></entry>
         <entry><acronym>JOHAB</acronym></entry>
<!--
         <entry>Korean (Hangul)</entry>
-->
         <entry>韓国語（ハングル）</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;3</entry>
-->
         <entry>1-3</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>KOI8R</literal></entry>
         <entry><acronym>KOI</acronym>8-R</entry>
<!--
         <entry>Cyrillic (Russian)</entry>
-->
         <entry>キリル文字（ロシア）</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>KOI8</literal></entry>
        </row>
        <row>
         <entry><literal>KOI8U</literal></entry>
         <entry><acronym>KOI</acronym>8-U</entry>
<!--
         <entry>Cyrillic (Ukrainian)</entry>
-->
         <entry>キリル文字（ウクライナ）</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>LATIN1</literal></entry>
<!--
         <entry>ISO 8859-1, <acronym>ECMA</acronym> 94</entry>
-->
         <entry>ISO 8859-1、<acronym>ECMA</acronym> 94</entry>
<!--
         <entry>Western European</entry>
-->
         <entry>西ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88591</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN2</literal></entry>
<!--
         <entry>ISO 8859-2, <acronym>ECMA</acronym> 94</entry>
-->
         <entry>ISO 8859-2、<acronym>ECMA</acronym> 94</entry>
<!--
         <entry>Central European</entry>
-->
         <entry>中央ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88592</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN3</literal></entry>
<!--
         <entry>ISO 8859-3, <acronym>ECMA</acronym> 94</entry>
-->
         <entry>ISO 8859-3、<acronym>ECMA</acronym> 94</entry>
<!--
         <entry>South European</entry>
-->
         <entry>南ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88593</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN4</literal></entry>
<!--
         <entry>ISO 8859-4, <acronym>ECMA</acronym> 94</entry>
-->
         <entry>ISO 8859-4、<acronym>ECMA</acronym> 94</entry>
<!--
         <entry>North European</entry>
-->
         <entry>北ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88594</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN5</literal></entry>
<!--
         <entry>ISO 8859-9, <acronym>ECMA</acronym> 128</entry>
-->
         <entry>ISO 8859-9、<acronym>ECMA</acronym> 128</entry>
<!--
         <entry>Turkish</entry>
-->
         <entry>トルコ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO88599</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN6</literal></entry>
<!--
         <entry>ISO 8859-10, <acronym>ECMA</acronym> 144</entry>
-->
         <entry>ISO 8859-10、<acronym>ECMA</acronym> 144</entry>
<!--
         <entry>Nordic</entry>
-->
         <entry>北欧</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885910</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN7</literal></entry>
         <entry>ISO 8859-13</entry>
<!--
         <entry>Baltic</entry>
-->
         <entry>バルト語派</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885913</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN8</literal></entry>
         <entry>ISO 8859-14</entry>
<!--
         <entry>Celtic</entry>
-->
         <entry>ケルト</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885914</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN9</literal></entry>
         <entry>ISO 8859-15</entry>
<!--
         <entry>LATIN1 with Euro and accents</entry>
-->
         <entry>LATIN1でヨーロッパと訛りを含む</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ISO885915</literal></entry>
        </row>
        <row>
         <entry><literal>LATIN10</literal></entry>
<!--
         <entry>ISO 8859-16, <acronym>ASRO</acronym> SR 14111</entry>
-->
         <entry>ISO 8859-16、<acronym>ASRO</acronym> SR 14111</entry>
<!--
         <entry>Romanian</entry>
-->
         <entry>ルーマニア</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1</entry>
         <entry><literal>ISO885916</literal></entry>
        </row>
        <row>
         <entry><literal>MULE_INTERNAL</literal></entry>
<!--
         <entry>Mule internal code</entry>
-->
         <entry>Mule内部コード</entry>
<!--
         <entry>Multilingual Emacs</entry>
-->
         <entry>多言語Emacs</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;4</entry>
-->
         <entry>1-4</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>SJIS</literal></entry>
         <entry>Shift JIS</entry>
<!--
         <entry>Japanese</entry>
-->
         <entry>日本語</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;2</entry>
-->
         <entry>1-2</entry>
<!--
         <entry><literal>Mskanji</literal>, <literal>ShiftJIS</literal>, <literal>WIN932</literal>, <literal>Windows932</literal></entry>
-->
         <entry><literal>Mskanji</literal>、<literal>ShiftJIS</literal>、<literal>WIN932</literal>、<literal>Windows932</literal></entry>
        </row>
        <row>
         <entry><literal>SHIFT_JIS_2004</literal></entry>
         <entry>Shift JIS, JIS X 0213</entry>
<!--
         <entry>Japanese</entry>
-->
         <entry>日本語</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;2</entry>
-->
         <entry>1-2</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>SQL_ASCII</literal></entry>
<!--
         <entry>unspecified (see text)</entry>
-->
         <entry>未指定（テキストを参照）</entry>
<!--
         <entry><emphasis>any</emphasis></entry>
-->
         <entry><emphasis>何でも</emphasis></entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>UHC</literal></entry>
<!--
         <entry>Unified Hangul Code</entry>
-->
         <entry>統合ハングルコード</entry>
<!--
         <entry>Korean</entry>
-->
         <entry>韓国語</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
<!--
         <entry>1&ndash;2</entry>
-->
         <entry>1-2</entry>
<!--
         <entry><literal>WIN949</literal>, <literal>Windows949</literal></entry>
-->
         <entry><literal>WIN949</literal>、<literal>Windows949</literal></entry>
        </row>
        <row>
         <entry><literal>UTF8</literal></entry>
<!--
         <entry>Unicode, 8-bit</entry>
-->
         <entry>Unicode、8ビット</entry>
<!--
         <entry><emphasis>all</emphasis></entry>
-->
         <entry><emphasis>すべて</emphasis></entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>1&ndash;4</entry>
-->
         <entry>1-4</entry>
         <entry><literal>Unicode</literal></entry>
        </row>
        <row>
         <entry><literal>WIN866</literal></entry>
         <entry>Windows CP866</entry>
<!--
         <entry>Cyrillic</entry>
-->
         <entry>キリル文字</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>ALT</literal></entry>
        </row>
        <row>
         <entry><literal>WIN874</literal></entry>
         <entry>Windows CP874</entry>
<!--
         <entry>Thai</entry>
-->
         <entry>タイ語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>No</entry>
-->
         <entry>いいえ</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1250</literal></entry>
         <entry>Windows CP1250</entry>
<!--
         <entry>Central European</entry>
-->
         <entry>中央ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1251</literal></entry>
         <entry>Windows CP1251</entry>
<!--
         <entry>Cyrillic</entry>
-->
         <entry>キリル文字</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry><literal>WIN</literal></entry>
        </row>
        <row>
         <entry><literal>WIN1252</literal></entry>
         <entry>Windows CP1252</entry>
<!--
         <entry>Western European</entry>
-->
         <entry>西ヨーロッパ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1253</literal></entry>
         <entry>Windows CP1253</entry>
<!--
         <entry>Greek</entry>
-->
         <entry>ギリシャ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1254</literal></entry>
         <entry>Windows CP1254</entry>
<!--
         <entry>Turkish</entry>
-->
         <entry>トルコ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1255</literal></entry>
         <entry>Windows CP1255</entry>
<!--
         <entry>Hebrew</entry>
-->
         <entry>ヘブライ</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1256</literal></entry>
         <entry>Windows CP1256</entry>
<!--
         <entry>Arabic</entry>
-->
         <entry>アラビア語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1257</literal></entry>
         <entry>Windows CP1257</entry>
<!--
         <entry>Baltic</entry>
-->
         <entry>バルト語派</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>WIN1258</literal></entry>
         <entry>Windows CP1258</entry>
<!--
         <entry>Vietnamese</entry>
-->
         <entry>ベトナム語</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
<!--
         <entry>Yes</entry>
-->
         <entry>はい</entry>
         <entry>1</entry>
<!--
         <entry><literal>ABC</literal>, <literal>TCVN</literal>, <literal>TCVN5712</literal>, <literal>VSCII</literal></entry>
-->
         <entry><literal>ABC</literal>、<literal>TCVN</literal>、<literal>TCVN5712</literal>、<literal>VSCII</literal></entry>
        </row>
       </tbody>
      </tgroup>
     </table>

     <para>
<!--
      Not all client <acronym>API</acronym>s support all the listed character sets. For example, the
      <productname>PostgreSQL</productname>
      JDBC driver does not support <literal>MULE_INTERNAL</literal>, <literal>LATIN6</literal>,
      <literal>LATIN8</literal>, and <literal>LATIN10</literal>.
-->
全てのクライアントの<acronym>API</acronym>が上の一覧表に示した文字集合をサポートしているわけではありません。
例えば<productname>PostgreSQL</productname> JDBCドライバは<literal>MULE_INTERNAL</literal>、<literal>LATIN6</literal>、<literal>LATIN8</literal>、そして<literal>LATIN10</literal>をサポートしません。
     </para>

     <para>
<!--
      The <literal>SQL_ASCII</literal> setting behaves considerably differently
      from the other settings.  When the server character set is
      <literal>SQL_ASCII</literal>, the server interprets byte values 0&ndash;127
      according to the ASCII standard, while byte values 128&ndash;255 are taken
      as uninterpreted characters.  No encoding conversion will be done when
      the setting is <literal>SQL_ASCII</literal>.  Thus, this setting is not so
      much a declaration that a specific encoding is in use, as a declaration
      of ignorance about the encoding.  In most cases, if you are
      working with any non-ASCII data, it is unwise to use the
      <literal>SQL_ASCII</literal> setting because
      <productname>PostgreSQL</productname> will be unable to help you by
      converting or validating non-ASCII characters.
-->
<literal>SQL_ASCII</literal>の設定は、他の設定とかなり異なります。サーバの文字集合が<literal>SQL_ASCII</literal>のとき、サーバは0から127のバイト値をASCIIに変換します。一方、128から255までは変換されません。
設定が<literal>SQL_ASCII</literal>の場合は、符号化は実行されません。よって、この設定は特定の符号化を使用している場合には、その符号化を無視するようになってしまいます。
多くの場合、ASCIIではない環境で作業する場合は<literal>SQL_ASCII</literal>の設定を使用するのは、賢いことではありません。なぜなら<productname>PostgreSQL</productname>はASCIIではない文字を変換したり検査したりすることは出来ないからです。
     </para>
    </sect2>

   <sect2 id="multibyte-setting">
<!--
    <title>Setting the Character Set</title>
-->
    <title>文字集合の設定</title>

    <para>
<!--
     <command>initdb</command> defines the default character set (encoding)
     for a <productname>PostgreSQL</productname> cluster. For example,
-->
<command>initdb</command>で<productname>PostgreSQL</productname>クラスタのデフォルト文字集合（エンコーディング）を定義します。
以下に例を示します。

<screen>
initdb -E EUC_JP
</screen>

<!--
     sets the default character set to
     <literal>EUC_JP</literal> (Extended Unix Code for Japanese).  You
     can use <option>&#45;-encoding</option> instead of
     <option>-E</option> if you prefer longer option strings.
     If no <option>-E</option> or <option>&#45;-encoding</option> option is
     given, <command>initdb</command> attempts to determine the appropriate
     encoding to use based on the specified or default locale.
-->
これはデフォルトの文字集合を<literal>EUC_JP</literal>（日本語拡張Unixコード）に設定します。
より長いオプションの文字列がお好みなら<option>-E</option>の代わりに<option>--encoding</option>と書くこともできます。
<option>-E</option>オプションも<option>--encoding</option>オプションも与えられない場合、<command>initdb</command>は、指定もしくはデフォルトのロケールに基づいて適当な符号化方式を決定しようとします。
    </para>

    <para>
<!--
     You can specify a non-default encoding at database creation time,
     provided that the encoding is compatible with the selected locale:
-->
データベース作成時に選択したロケールと互換性を持つ符号化方式を提供することで、デフォルト以外の符号化方式を指定できます。

<screen>
createdb -E EUC_KR -T template0 --lc-collate=ko_KR.euckr --lc-ctype=ko_KR.euckr korean
</screen>

<!--
     This will create a database named <literal>korean</literal> that
     uses the character set <literal>EUC_KR</literal>, and locale <literal>ko_KR</literal>.
     Another way to accomplish this is to use this SQL command:
-->
これは<literal>EUC_KR</literal>文字集合と<literal>ko_KR</literal>ロケールを使用する<literal>korean</literal>という名前のデータベースを作成します。
SQLコマンドで同じことを行うには次のようにします。

<programlisting>
CREATE DATABASE korean WITH ENCODING 'EUC_KR' LC_COLLATE='ko_KR.euckr' LC_CTYPE='ko_KR.euckr' TEMPLATE=template0;
</programlisting>

<!--
     Notice that the above commands specify copying the <literal>template0</literal>
     database.  When copying any other database, the encoding and locale
     settings cannot be changed from those of the source database, because
     that might result in corrupt data.  For more information see
     <xref linkend="manage-ag-templatedbs"/>.
-->
上のコマンドにて<literal>template0</literal>データベースのコピーが指定されていることに注目してください。
他のデータベースからコピーする場合、データが破損する結果となる可能性がありますので、符号化方式とロケール設定を元のデータベースの設定から変更することはできません。
詳細については<xref linkend="manage-ag-templatedbs"/>を参照してください。
    </para>

    <para>
<!--
     The encoding for a database is stored in the system catalog
     <literal>pg_database</literal>.  You can see it by using the
     <command>psql</command> <option>-l</option> option or the
     <command>\l</command> command.
-->
データベースの符号化方式は<literal>pg_database</literal>システムカタログに格納されます。
<command>psql</command>の<option>-l</option>オプションか<command>\l</command>コマンドで符号化方式を確認できます。

<screen>
$ <userinput>psql -l</userinput>
                                         List of databases
   Name    |  Owner   | Encoding  |  Collation  |    Ctype    |          Access Privileges
-----------+----------+-----------+-------------+-------------+-------------------------------------
 clocaledb | hlinnaka | SQL_ASCII | C           | C           |
 englishdb | hlinnaka | UTF8      | en_GB.UTF8  | en_GB.UTF8  |
 japanese  | hlinnaka | UTF8      | ja_JP.UTF8  | ja_JP.UTF8  |
 korean    | hlinnaka | EUC_KR    | ko_KR.euckr | ko_KR.euckr |
 postgres  | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  |
 template0 | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  | {=c/hlinnaka,hlinnaka=CTc/hlinnaka}
 template1 | hlinnaka | UTF8      | fi_FI.UTF8  | fi_FI.UTF8  | {=c/hlinnaka,hlinnaka=CTc/hlinnaka}
(7 rows)
</screen>
    </para>

    <important>
     <para>
<!--
      On most modern operating systems, <productname>PostgreSQL</productname>
      can determine which character set is implied by the <envar>LC_CTYPE</envar>
      setting, and it will enforce that only the matching database encoding is
      used.  On older systems it is your responsibility to ensure that you use
      the encoding expected by the locale you have selected.  A mistake in
      this area is likely to lead to strange behavior of locale-dependent
      operations such as sorting.
-->
最近のオペレーティングシステムでは、<productname>PostgreSQL</productname>は、<envar>LC_CTYPE</envar>の設定によりどの文字集合が指定されているか決定できます。
そして、一致するデータベース符号化方式のみを強制的に使用します。
古いオペレーティングシステムでは、自分で選択したロケールが想定している符号化方式を確実に使用することは各自の責任になります。
ここでの間違いは、ソート処理などのロケールに依存する操作が、奇妙な動作するといったことにつながります。
     </para>

     <para>
<!--
      <productname>PostgreSQL</productname> will allow superusers to create
      databases with <literal>SQL_ASCII</literal> encoding even when
      <envar>LC_CTYPE</envar> is not <literal>C</literal> or <literal>POSIX</literal>.  As noted
      above, <literal>SQL_ASCII</literal> does not enforce that the data stored in
      the database has any particular encoding, and so this choice poses risks
      of locale-dependent misbehavior.  Using this combination of settings is
      deprecated and may someday be forbidden altogether.
-->
<productname>PostgreSQL</productname>は、<envar>LC_CTYPE</envar>が<literal>C</literal>もしくは<literal>POSIX</literal>でもない場合にも、スーパーユーザが<literal>SQL_ASCII</literal>エンコーディングでデータベースを作成することを許可します。
上記のように、<literal>SQL_ASCII</literal>は、データベースに保存されているデータが特定のエンコーディングを持つことを強制しません。それゆえ、この選択はロケールに依存したおかしな動作を引き起こすリスクを高めます。
この設定の組み合わせを使用することは、お勧めできませんし、いつの日か完全に禁止されるかもしれません。
     </para>
    </important>
   </sect2>

   <sect2 id="multibyte-automatic-conversion">
<!--
    <title>Automatic Character Set Conversion Between Server and Client</title>
-->
    <title>サーバ・クライアント間の自動文字集合変換</title>

    <para>
<!--
     <productname>PostgreSQL</productname> supports automatic character
     set conversion between server and client for many combinations of
     character sets (<xref linkend="multibyte-conversions-supported"/>
     shows which ones).
-->
<productname>PostgreSQL</productname>は、多数の文字集合の組み合わせ（<xref linkend="multibyte-conversions-supported"/> のいずれか）に対してサーバとクライアントの間で自動的に文字集合を変換する機能を提供しています。
    </para>

    <para>
<!--
     To enable automatic character set conversion, you have to
     tell <productname>PostgreSQL</productname> the character set
     (encoding) you would like to use in the client. There are several
     ways to accomplish this:
-->
自動文字集合変換を有効にするためには、クライアントでどのような文字集合（符号化方式）を使用させたいかを<productname>PostgreSQL</productname>に伝えなければなりません。
これを行うにはいくつかの方法があります。

     <itemizedlist>
      <listitem>
       <para>
<!--
        Using the <command>\encoding</command> command in
        <application>psql</application>.
        <command>\encoding</command> allows you to change client
        encoding on the fly. For
        example, to change the encoding to <literal>SJIS</literal>, type:
-->
<application>psql</application>で<command>\encoding</command>コマンドを使います。
<command>\encoding</command>は実行中であってもクライアントの符号化方式を変更させることができます。
例えば符号化方式を<literal>SJIS</literal>に変えたい場合は次のように入力します。

<programlisting>
\encoding SJIS
</programlisting>
       </para>
      </listitem>

      <listitem>
       <para>
<!--
        <application>libpq</application> (<xref linkend="libpq-control"/>) has functions to control the client encoding.
-->
        <application>libpq</application> (<xref linkend="libpq-control"/>)はクライアントの符号化方式を制御する関数を保持しています。
       </para>
      </listitem>

      <listitem>
       <para>
<!--
        Using <command>SET client_encoding TO</command>.

        Setting the client encoding can be done with this SQL command:
-->
<command>SET client_encoding TO</command>を使います。
次のSQLコマンドでクライアントの符号化方式を設定できます。

<programlisting>
SET CLIENT_ENCODING TO '<replaceable>value</replaceable>';
</programlisting>

<!--
        Also you can use the standard SQL syntax <literal>SET NAMES</literal>
        for this purpose:
-->
標準SQLの構文<literal>SET NAMES</literal>を同じ目的で使うこともできます。

<programlisting>
SET NAMES '<replaceable>value</replaceable>';
</programlisting>

<!--
        To query the current client encoding:
-->
現在のクライアントの符号化方式を問い合わせるには次のようにします。

<programlisting>
SHOW client_encoding;
</programlisting>

<!--
        To return to the default encoding:
-->
デフォルトの符号化方式に戻すのには次のようにします。

<programlisting>
RESET client_encoding;
</programlisting>
       </para>
      </listitem>

      <listitem>
       <para>
<!--
        Using <envar>PGCLIENTENCODING</envar>. If the environment variable
        <envar>PGCLIENTENCODING</envar> is defined in the client's
        environment, that client encoding is automatically selected
        when a connection to the server is made.  (This can
        subsequently be overridden using any of the other methods
        mentioned above.)
-->
<envar>PGCLIENTENCODING</envar>を使います。
クライアントの環境で<envar>PGCLIENTENCODING</envar>環境変数が定義されていると、サーバと接続が確立した時点で自動的にクライアントの符号化方式が選択されます。
（上で説明したその他のどんな方法でもその後書き換えできます。）
       </para>
      </listitem>

      <listitem>
      <para>
<!--
       Using the configuration variable <xref
       linkend="guc-client-encoding"/>. If the
       <varname>client_encoding</varname> variable is set, that client
       encoding is automatically selected when a connection to the
       server is made.  (This can subsequently be overridden using any
       of the other methods mentioned above.)
-->
<xref linkend="guc-client-encoding"/>変数を使います。
<varname>client_encoding</varname>変数が設定されていると、サーバとの接続が確立した時点で自動的にクライアントの符号化方式が選択されます。
（上で説明したその他のどんな方法でもその後書き換えできます。）
       </para>
      </listitem>

     </itemizedlist>
    </para>

    <para>
<!--
     If the conversion of a particular character is not possible
     &mdash; suppose you chose <literal>EUC_JP</literal> for the
     server and <literal>LATIN1</literal> for the client, and some
     Japanese characters are returned that do not have a representation in
     <literal>LATIN1</literal> &mdash; an error is reported.
-->
<literal>EUC_JP</literal>をサーバに、そして<literal>LATIN1</literal>をクライアントに選んだ場合のように、
特定の文字の変換ができない時、日本語文字は<literal>LATIN1</literal>に入っていないという旨の日本語が返され、エラーが報告されます。
    </para>

    <para>
<!--
     If the client character set is defined as <literal>SQL_ASCII</literal>,
     encoding conversion is disabled, regardless of the server's character
     set.  (However, if the server's character set is
     not <literal>SQL_ASCII</literal>, the server will still check that
     incoming data is valid for that encoding; so the net effect is as
     though the client character set were the same as the server's.)
     Just as for the server, use of <literal>SQL_ASCII</literal> is unwise
     unless you are working with all-ASCII data.
-->
クライアント側の文字集合が<literal>SQL_ASCII</literal>に定義されている場合は、符号化変換はサーバ側の文字集合に関係無く無効化されます。
（ただし、サーバの文字集合が<literal>SQL_ASCII</literal>でない場合、サーバは受信データがそのエンコーディングに対して有効であることをチェックします。したがって、クライアントの文字集合がサーバの文字集合と同じであるかのような結果になります。）
サーバ側と同じように、<literal>SQL_ASCII</literal>を使用することは、すべてASCIIのデータを扱っている場合を除き、賢い方法ではありません。
    </para>
   </sect2>

   <sect2 id="multibyte-conversions-supported">
<!--
    <title>Available Character Set Conversions</title>
-->
    <title>利用可能な文字集合の変換</title>

    <para>
<!--
     <productname>PostgreSQL</productname> allows conversion between any
     two character sets for which a conversion function is listed in the
     <link linkend="catalog-pg-conversion"><structname>pg_conversion</structname></link>
     system catalog.  <productname>PostgreSQL</productname> comes with
     some predefined conversions, as summarized in
     <xref linkend="multibyte-translation-table"/> and shown in more
     detail in <xref linkend="builtin-conversions-table"/>.  You can
     create a new conversion using the SQL command
     <xref linkend="sql-createconversion"/>.  (To be used for automatic
     client/server conversions, a conversion must be marked
     as <quote>default</quote> for its character set pair.)
-->
<productname>PostgreSQL</productname>は、<link linkend="catalog-pg-conversion"><structname>pg_conversion</structname></link>システムカタログ内にリストされた変換関数によって2つの文字集合間を変換できます。
<productname>PostgreSQL</productname>では<xref linkend="multibyte-translation-table"/>で要約され<xref linkend="builtin-conversions-table"/>に詳細が示されているように、いくつかの変換があらかじめ組み込まれています。
<xref linkend="sql-createconversion"/>SQLコマンドを用いることで新しい変換を作成できます。（クライアントもしくはサーバの自動変換を使用するためには、変換がその文字集合の組み合わせのための<quote>デフォルト</quote>として設定されている必要があります。）
    </para>

    <table id="multibyte-translation-table">
<!--
     <title>Built-in Client/Server Character Set Conversions</title>
-->
     <title>組み込みクライアントもしくはサーバ文字集合変換</title>
     <tgroup cols="2">
      <colspec colname="col1" colwidth="1*"/>
      <colspec colname="col2" colwidth="3*"/>
      <thead>
       <row>
<!--
        <entry>Server Character Set</entry>
-->
        <entry>サーバ文字集合</entry>
<!--
        <entry>Available Client Character Sets</entry>
-->
        <entry>利用可能なクライアント文字集合</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><literal>BIG5</literal></entry>
<!--
        <entry><emphasis>not supported as a server encoding</emphasis>
-->
        <entry><emphasis>サーバの符号化方式としてサポートされていません</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>EUC_CN</literal></entry>
        <entry><emphasis>EUC_CN</emphasis>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>EUC_JP</literal></entry>
        <entry><emphasis>EUC_JP</emphasis>,
        <literal>MULE_INTERNAL</literal>,
        <literal>SJIS</literal>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>EUC_JIS_2004</literal></entry>
        <entry><emphasis>EUC_JIS_2004</emphasis>,
        <literal>SHIFT_JIS_2004</literal>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>EUC_KR</literal></entry>
        <entry><emphasis>EUC_KR</emphasis>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>EUC_TW</literal></entry>
        <entry><emphasis>EUC_TW</emphasis>,
        <literal>BIG5</literal>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>GB18030</literal></entry>
<!--
        <entry><emphasis>not supported as a server encoding</emphasis>
-->
        <entry><emphasis>サーバの符号化方式としてサポートされていません</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>GBK</literal></entry>
<!--
        <entry><emphasis>not supported as a server encoding</emphasis>
-->
        <entry><emphasis>サーバの符号化方式としてサポートされていません</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>ISO_8859_5</literal></entry>
        <entry><emphasis>ISO_8859_5</emphasis>,
        <literal>KOI8R</literal>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>,
        <literal>WIN866</literal>,
        <literal>WIN1251</literal>
        </entry>
       </row>
       <row>
        <entry><literal>ISO_8859_6</literal></entry>
        <entry><emphasis>ISO_8859_6</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>ISO_8859_7</literal></entry>
        <entry><emphasis>ISO_8859_7</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>ISO_8859_8</literal></entry>
        <entry><emphasis>ISO_8859_8</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>JOHAB</literal></entry>
<!--
        <entry><emphasis>not supported as a server encoding</emphasis>
-->
        <entry><emphasis>サーバの符号化方式としてサポートされていません</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>KOI8R</literal></entry>
        <entry><emphasis>KOI8R</emphasis>,
        <literal>ISO_8859_5</literal>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>,
        <literal>WIN866</literal>,
        <literal>WIN1251</literal>
        </entry>
       </row>
       <row>
        <entry><literal>KOI8U</literal></entry>
        <entry><emphasis>KOI8U</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN1</literal></entry>
        <entry><emphasis>LATIN1</emphasis>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN2</literal></entry>
        <entry><emphasis>LATIN2</emphasis>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>,
        <literal>WIN1250</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN3</literal></entry>
        <entry><emphasis>LATIN3</emphasis>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN4</literal></entry>
        <entry><emphasis>LATIN4</emphasis>,
        <literal>MULE_INTERNAL</literal>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN5</literal></entry>
        <entry><emphasis>LATIN5</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN6</literal></entry>
        <entry><emphasis>LATIN6</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN7</literal></entry>
        <entry><emphasis>LATIN7</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN8</literal></entry>
        <entry><emphasis>LATIN8</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN9</literal></entry>
        <entry><emphasis>LATIN9</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>LATIN10</literal></entry>
        <entry><emphasis>LATIN10</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><emphasis>MULE_INTERNAL</emphasis>,
         <literal>BIG5</literal>,
         <literal>EUC_CN</literal>,
         <literal>EUC_JP</literal>,
         <literal>EUC_KR</literal>,
         <literal>EUC_TW</literal>,
         <literal>ISO_8859_5</literal>,
         <literal>KOI8R</literal>,
<!--
         <literal>LATIN1</literal> to <literal>LATIN4</literal>,
-->
         <literal>LATIN1</literal> から <literal>LATIN4</literal>,
         <literal>SJIS</literal>,
         <literal>WIN866</literal>,
         <literal>WIN1250</literal>,
         <literal>WIN1251</literal>
        </entry>
       </row>
       <row>
        <entry><literal>SJIS</literal></entry>
<!--
        <entry><emphasis>not supported as a server encoding</emphasis>
-->
        <entry><emphasis>サーバの符号化方式としてサポートされていません</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>SHIFT_JIS_2004</literal></entry>
<!--
        <entry><emphasis>not supported as a server encoding</emphasis>
-->
        <entry><emphasis>サーバの符号化方式としてサポートされていません</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>SQL_ASCII</literal></entry>
<!--
        <entry><emphasis>any (no conversion will be performed)</emphasis>
-->
        <entry><emphasis>任意（変換は実行されません）</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>UHC</literal></entry>
<!--
        <entry><emphasis>not supported as a server encoding</emphasis>
-->
        <entry><emphasis>サーバの符号化方式としてサポートされていません</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>UTF8</literal></entry>
<!--
        <entry><emphasis>all supported encodings</emphasis>
-->
        <entry><emphasis>すべての符号化方式がサポートされています</emphasis>
        </entry>
       </row>
       <row>
        <entry><literal>WIN866</literal></entry>
        <entry><emphasis>WIN866</emphasis>,
         <literal>ISO_8859_5</literal>,
         <literal>KOI8R</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>,
         <literal>WIN1251</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN874</literal></entry>
        <entry><emphasis>WIN874</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1250</literal></entry>
        <entry><emphasis>WIN1250</emphasis>,
         <literal>LATIN2</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1251</literal></entry>
        <entry><emphasis>WIN1251</emphasis>,
         <literal>ISO_8859_5</literal>,
         <literal>KOI8R</literal>,
         <literal>MULE_INTERNAL</literal>,
         <literal>UTF8</literal>,
         <literal>WIN866</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1252</literal></entry>
        <entry><emphasis>WIN1252</emphasis>,
         <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1253</literal></entry>
        <entry><emphasis>WIN1253</emphasis>,
         <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1254</literal></entry>
        <entry><emphasis>WIN1254</emphasis>,
         <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1255</literal></entry>
        <entry><emphasis>WIN1255</emphasis>,
         <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1256</literal></entry>
        <entry><emphasis>WIN1256</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1257</literal></entry>
        <entry><emphasis>WIN1257</emphasis>,
         <literal>UTF8</literal>
        </entry>
       </row>
       <row>
        <entry><literal>WIN1258</literal></entry>
        <entry><emphasis>WIN1258</emphasis>,
        <literal>UTF8</literal>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>

    <table id="builtin-conversions-table">
<!--
     <title>All Built-in Character Set Conversions</title>
-->
     <title>すべての組み込み文字集合変換</title>
     <tgroup cols="3">
      <colspec colname="col1" colwidth="2*"/>
      <colspec colname="col2" colwidth="1*"/>
      <colspec colname="col3" colwidth="1*"/>
      <thead>
       <row>
<!--
        <entry>Conversion Name
-->
        <entry>変換名
         <footnote>
          <para>
<!--
           The conversion names follow a standard naming scheme: The
           official name of the source encoding with all
           non-alphanumeric characters replaced by underscores, followed
           by <literal>_to_</literal>, followed by the similarly processed
           destination encoding name.  Therefore, these names sometimes
           deviate from the customary encoding names shown in
           <xref linkend="charset-table"/>.
-->
変換名は、標準の命名規定に従います。
英数字以外のすべての文字がアンダースコアに置き換えられた変換元符号化方式の正式名に<literal>_to_</literal>が続き、同様に処理された変換先符号化方式名が続きます。
したがって、これらの名前は、<xref linkend="charset-table"/>に示されている通常の符号化方式名と異なる場合があります。
          </para>
         </footnote>
        </entry>
<!--
        <entry>Source Encoding</entry>
-->
        <entry>変換元符号化方式</entry>
<!--
        <entry>Destination Encoding</entry>
-->
        <entry>変換先符号化方式</entry>
       </row>
      </thead>

      <tbody>
       <row>
        <entry><literal>big5_to_euc_tw</literal></entry>
        <entry><literal>BIG5</literal></entry>
        <entry><literal>EUC_TW</literal></entry>
       </row>
       <row>
        <entry><literal>big5_to_mic</literal></entry>
        <entry><literal>BIG5</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>big5_to_utf8</literal></entry>
        <entry><literal>BIG5</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>euc_cn_to_mic</literal></entry>
        <entry><literal>EUC_CN</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>euc_cn_to_utf8</literal></entry>
        <entry><literal>EUC_CN</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>euc_jp_to_mic</literal></entry>
        <entry><literal>EUC_JP</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>euc_jp_to_sjis</literal></entry>
        <entry><literal>EUC_JP</literal></entry>
        <entry><literal>SJIS</literal></entry>
       </row>
       <row>
        <entry><literal>euc_jp_to_utf8</literal></entry>
        <entry><literal>EUC_JP</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>euc_kr_to_mic</literal></entry>
        <entry><literal>EUC_KR</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>euc_kr_to_utf8</literal></entry>
        <entry><literal>EUC_KR</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>euc_tw_to_big5</literal></entry>
        <entry><literal>EUC_TW</literal></entry>
        <entry><literal>BIG5</literal></entry>
       </row>
       <row>
        <entry><literal>euc_tw_to_mic</literal></entry>
        <entry><literal>EUC_TW</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>euc_tw_to_utf8</literal></entry>
        <entry><literal>EUC_TW</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>gb18030_to_utf8</literal></entry>
        <entry><literal>GB18030</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>gbk_to_utf8</literal></entry>
        <entry><literal>GBK</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_10_to_utf8</literal></entry>
        <entry><literal>LATIN6</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_13_to_utf8</literal></entry>
        <entry><literal>LATIN7</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_14_to_utf8</literal></entry>
        <entry><literal>LATIN8</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_15_to_utf8</literal></entry>
        <entry><literal>LATIN9</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_16_to_utf8</literal></entry>
        <entry><literal>LATIN10</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_1_to_mic</literal></entry>
        <entry><literal>LATIN1</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_1_to_utf8</literal></entry>
        <entry><literal>LATIN1</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_2_to_mic</literal></entry>
        <entry><literal>LATIN2</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_2_to_utf8</literal></entry>
        <entry><literal>LATIN2</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_2_to_windows_1250</literal></entry>
        <entry><literal>LATIN2</literal></entry>
        <entry><literal>WIN1250</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_3_to_mic</literal></entry>
        <entry><literal>LATIN3</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_3_to_utf8</literal></entry>
        <entry><literal>LATIN3</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_4_to_mic</literal></entry>
        <entry><literal>LATIN4</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_4_to_utf8</literal></entry>
        <entry><literal>LATIN4</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_5_to_koi8_r</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
        <entry><literal>KOI8R</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_5_to_mic</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_5_to_utf8</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_5_to_windows_1251</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
        <entry><literal>WIN1251</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_5_to_windows_866</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
        <entry><literal>WIN866</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_6_to_utf8</literal></entry>
        <entry><literal>ISO_8859_6</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_7_to_utf8</literal></entry>
        <entry><literal>ISO_8859_7</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_8_to_utf8</literal></entry>
        <entry><literal>ISO_8859_8</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>iso_8859_9_to_utf8</literal></entry>
        <entry><literal>LATIN5</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>johab_to_utf8</literal></entry>
        <entry><literal>JOHAB</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>koi8_r_to_iso_8859_5</literal></entry>
        <entry><literal>KOI8R</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
       </row>
       <row>
        <entry><literal>koi8_r_to_mic</literal></entry>
        <entry><literal>KOI8R</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>koi8_r_to_utf8</literal></entry>
        <entry><literal>KOI8R</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>koi8_r_to_windows_1251</literal></entry>
        <entry><literal>KOI8R</literal></entry>
        <entry><literal>WIN1251</literal></entry>
       </row>
       <row>
        <entry><literal>koi8_r_to_windows_866</literal></entry>
        <entry><literal>KOI8R</literal></entry>
        <entry><literal>WIN866</literal></entry>
       </row>
       <row>
        <entry><literal>koi8_u_to_utf8</literal></entry>
        <entry><literal>KOI8U</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_big5</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>BIG5</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_euc_cn</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>EUC_CN</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_euc_jp</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>EUC_JP</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_euc_kr</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>EUC_KR</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_euc_tw</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>EUC_TW</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_iso_8859_1</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>LATIN1</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_iso_8859_2</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>LATIN2</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_iso_8859_3</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>LATIN3</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_iso_8859_4</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>LATIN4</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_iso_8859_5</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_koi8_r</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>KOI8R</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_sjis</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>SJIS</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_windows_1250</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>WIN1250</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_windows_1251</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>WIN1251</literal></entry>
       </row>
       <row>
        <entry><literal>mic_to_windows_866</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
        <entry><literal>WIN866</literal></entry>
       </row>
       <row>
        <entry><literal>sjis_to_euc_jp</literal></entry>
        <entry><literal>SJIS</literal></entry>
        <entry><literal>EUC_JP</literal></entry>
       </row>
       <row>
        <entry><literal>sjis_to_mic</literal></entry>
        <entry><literal>SJIS</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>sjis_to_utf8</literal></entry>
        <entry><literal>SJIS</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1258_to_utf8</literal></entry>
        <entry><literal>WIN1258</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>uhc_to_utf8</literal></entry>
        <entry><literal>UHC</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_big5</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>BIG5</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_euc_cn</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>EUC_CN</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_euc_jp</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>EUC_JP</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_euc_kr</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>EUC_KR</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_euc_tw</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>EUC_TW</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_gb18030</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>GB18030</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_gbk</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>GBK</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_1</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN1</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_10</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN6</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_13</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN7</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_14</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN8</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_15</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN9</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_16</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN10</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_2</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN2</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_3</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN3</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_4</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN4</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_5</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_6</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>ISO_8859_6</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_7</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>ISO_8859_7</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_8</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>ISO_8859_8</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_iso_8859_9</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>LATIN5</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_johab</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>JOHAB</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_koi8_r</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>KOI8R</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_koi8_u</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>KOI8U</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_sjis</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>SJIS</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1258</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1258</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_uhc</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>UHC</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1250</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1250</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1251</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1251</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1252</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1252</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1253</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1253</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1254</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1254</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1255</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1255</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1256</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1256</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_1257</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN1257</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_866</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN866</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_windows_874</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>WIN874</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1250_to_iso_8859_2</literal></entry>
        <entry><literal>WIN1250</literal></entry>
        <entry><literal>LATIN2</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1250_to_mic</literal></entry>
        <entry><literal>WIN1250</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1250_to_utf8</literal></entry>
        <entry><literal>WIN1250</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1251_to_iso_8859_5</literal></entry>
        <entry><literal>WIN1251</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1251_to_koi8_r</literal></entry>
        <entry><literal>WIN1251</literal></entry>
        <entry><literal>KOI8R</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1251_to_mic</literal></entry>
        <entry><literal>WIN1251</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1251_to_utf8</literal></entry>
        <entry><literal>WIN1251</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1251_to_windows_866</literal></entry>
        <entry><literal>WIN1251</literal></entry>
        <entry><literal>WIN866</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1252_to_utf8</literal></entry>
        <entry><literal>WIN1252</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>windows_1256_to_utf8</literal></entry>
        <entry><literal>WIN1256</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>windows_866_to_iso_8859_5</literal></entry>
        <entry><literal>WIN866</literal></entry>
        <entry><literal>ISO_8859_5</literal></entry>
       </row>
       <row>
        <entry><literal>windows_866_to_koi8_r</literal></entry>
        <entry><literal>WIN866</literal></entry>
        <entry><literal>KOI8R</literal></entry>
       </row>
       <row>
        <entry><literal>windows_866_to_mic</literal></entry>
        <entry><literal>WIN866</literal></entry>
        <entry><literal>MULE_INTERNAL</literal></entry>
       </row>
       <row>
        <entry><literal>windows_866_to_utf8</literal></entry>
        <entry><literal>WIN866</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>windows_866_to_windows_1251</literal></entry>
        <entry><literal>WIN866</literal></entry>
        <entry><literal>WIN</literal></entry>
       </row>
       <row>
        <entry><literal>windows_874_to_utf8</literal></entry>
        <entry><literal>WIN874</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>euc_jis_2004_to_utf8</literal></entry>
        <entry><literal>EUC_JIS_2004</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_euc_jis_2004</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>EUC_JIS_2004</literal></entry>
       </row>
       <row>
        <entry><literal>shift_jis_2004_to_utf8</literal></entry>
        <entry><literal>SHIFT_JIS_2004</literal></entry>
        <entry><literal>UTF8</literal></entry>
       </row>
       <row>
        <entry><literal>utf8_to_shift_jis_2004</literal></entry>
        <entry><literal>UTF8</literal></entry>
        <entry><literal>SHIFT_JIS_2004</literal></entry>
       </row>
       <row>
        <entry><literal>euc_jis_2004_to_shift_jis_2004</literal></entry>
        <entry><literal>EUC_JIS_2004</literal></entry>
        <entry><literal>SHIFT_JIS_2004</literal></entry>
       </row>
       <row>
        <entry><literal>shift_jis_2004_to_euc_jis_2004</literal></entry>
        <entry><literal>SHIFT_JIS_2004</literal></entry>
        <entry><literal>EUC_JIS_2004</literal></entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </sect2>

   <sect2 id="multibyte-further-reading">
<!--
    <title>Further Reading</title>
-->
    <title>推奨文書</title>

    <para>
<!--
     These are good sources to start learning about various kinds of encoding
     systems.
-->
ここに記したものは様々な符号化方式システムを学習するのに良い資料です。

     <variablelist>
      <varlistentry>
<!--
       <term><citetitle>CJKV Information Processing: Chinese, Japanese, Korean &amp; Vietnamese Computing</citetitle></term>
-->
       <term><citetitle>CJKV日中韓越情報処理: 中国語、日本語、韓国語 &amp; ベトナム語処理</citetitle></term>

       <listitem>
        <para>
<!--
         Contains detailed explanations of <literal>EUC_JP</literal>,
         <literal>EUC_CN</literal>, <literal>EUC_KR</literal>,
         <literal>EUC_TW</literal>.
-->
<literal>EUC_JP</literal>、<literal>EUC_CN</literal>、<literal>EUC_KR</literal>、<literal>EUC_TW</literal>の詳しい説明があります。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><ulink url="https://www.unicode.org/"></ulink></term>

       <listitem>
        <para>
<!--
         The web site of the Unicode Consortium.
-->
Unicode協会のWebサイトです。
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><ulink url="https://datatracker.ietf.org/doc/html/rfc3629">RFC 3629</ulink></term>

       <listitem>
        <para>
<!--
         <acronym>UTF</acronym>-8 (8-bit UCS/Unicode Transformation
         Format) is defined here.
-->
ここで<acronym>UTF</acronym>-8（8ビットUCS/Unicode変換書式）が定義されています。
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  </sect1>

</chapter>
