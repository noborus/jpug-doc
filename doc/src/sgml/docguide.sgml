<!-- doc/src/sgml/docguide.sgml -->

<appendix id="docguide">
<!--
 <title>Documentation</title>
-->
 <title>ドキュメント作成</title>

 <para>
<!--
  <productname>PostgreSQL</productname> has four primary documentation
  formats:
-->
<productname>PostgreSQL</productname>の文書には4つの主要なフォーマットがあります。

  <itemizedlist>
   <listitem>
    <para>
<!--
     Plain text, for pre-installation information
-->
平文：インストール前の情報
    </para>
   </listitem>
   <listitem>
    <para>
<!--
     <acronym>HTML</acronym>, for on-line browsing and reference
-->
<acronym>HTML</acronym>：オンラインでの閲覧と参照
    </para>
   </listitem>
   <listitem>
    <para>
<!--
     PDF, for printing
-->
PDF：印刷用
    </para>
   </listitem>
   <listitem>
    <para>
<!--
     man pages, for quick reference.
-->
マニュアルページ：すぐ知りたい時
    </para>
   </listitem>
  </itemizedlist>

<!--
  Additionally, a number of plain-text <filename>README</filename> files can
  be found throughout the <productname>PostgreSQL</productname> source tree,
  documenting various implementation issues.
-->
さらに、<productname>PostgreSQL</productname>ソースツリー全体にわたり、様々な実装に関する問題を記述した平文の<filename>README</filename>ファイルが数多くあります。
 </para>

 <para>
<!--
  <acronym>HTML</acronym> documentation and man pages are part of a
  standard distribution and are installed by default.  PDF
  format documentation is available separately for
  download.
-->
<acronym>HTML</acronym>文書とマニュアルページは標準の配布物の一部でデフォルトでインストールされます。
PDF形式の文書は別途ダウンロードすることで入手できます。
 </para>

 <sect1 id="docguide-docbook">
  <title>DocBook</title>
  <para>
<!--
   The documentation sources are written in
   <firstterm>DocBook</firstterm>, which is a markup language
   defined in <acronym>XML</acronym>.  In what
   follows, the terms DocBook and <acronym>XML</acronym> are both
   used, but technically they are not interchangeable.
-->
文書のソースは、<acronym>XML</acronym>で定義されたマークアップ言語である<firstterm>DocBook</firstterm>で作成されています。
ここからは、DocBookと<acronym>XML</acronym>両方の用語が使用されますが、技術的に相互の互換性はありません。
  </para>

  <para>
<!--
  <productname>DocBook</productname> allows an author to specify the
   structure and content of a technical document without worrying
   about presentation details.  A document style defines how that
   content is rendered into one of several final forms.  DocBook is
   maintained by the <ulink url="https://www.oasis-open.org">
   OASIS group</ulink>.  The <ulink url="https://www.oasis-open.org/docbook/">
   official DocBook site</ulink> has good introductory and reference documentation and
   a complete O'Reilly book for your online reading pleasure.  The
   <ulink url="http://newbiedoc.sourceforge.net/metadoc/docbook-guide.html">
   NewbieDoc Docbook Guide</ulink> is very helpful for beginners.
   The <ulink url="https://www.freebsd.org/docproj/docproj.html">
   FreeBSD Documentation Project</ulink> also uses DocBook and has some good
   information, including a number of style guidelines that might be
   worth considering.
-->
<productname>DocBook</productname>を使用して作成することで、最終的な見栄えがどうなるかに気を遣わずに技術文書の構造と内容を指定できます。
ドキュメントスタイルは、いくつかの最終的な形のいずれかにコンテンツをレンダリングする方法を定義します。
DocBookは<ulink url="https://www.oasis-open.org/">OASISグループ</ulink>により保守されています。
<ulink url="https://www.oasis-open.org/docbook/">公式DocBookサイト</ulink>では役に立つ入門用と参照用の文書、そしてO'Reilly社の本の完全版をオンラインで読むことができます。
<ulink url="http://newbiedoc.sourceforge.net/metadoc/docbook-guide.html">NewbieDoc Docbook Guide</ulink>は初心者にとりとても役に立ちます。
<ulink url="https://www.freebsd.org/docproj/docproj.html">FreeBSDドキュメントプロジェクト</ulink>でも同様にDocBookを使用していて注目すべき数多くのスタイルに関する指針を含め、役立つ情報があります。
  </para>
 </sect1>


 <sect1 id="docguide-toolsets">
<!--
  <title>Tool Sets</title>
-->
  <title>ツールセット</title>

  <para>
<!--
   The following tools are used to process the documentation.  Some
   might be optional, as noted.
-->
文書を処理する過程で次のようなツールが使われます。
そのうちのいくつかは付記されているように省略しても構いません。

   <variablelist>
    <varlistentry>
     <term><ulink url="https://www.oasis-open.org/docbook/">DocBook DTD</ulink></term>
     <listitem>
      <para>
<!--
       This is the definition of DocBook itself.  We currently use version
       4.5; you cannot use later or earlier versions.  You need
       the <acronym>XML</acronym> variant of the DocBook DTD, not
       the <acronym>SGML</acronym> variant.
-->
DocBookそのものの定義です。
現在はバージョン4.5を使用しており、これより古いまたは新しいバージョンは使用できません。
DocBook DTDの<acronym>SGML</acronym>対応版ではなく、<acronym>XML</acronym>対応版が必要です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="https://github.com/docbook/wiki/wiki/DocBookXslStylesheets">DocBook XSL Stylesheets</ulink></term>
     <listitem>
      <para>
<!--
       These contain the processing instructions for converting the
       DocBook sources to other formats, such as
       <acronym>HTML</acronym>.
-->
DocBookのソースを<acronym>HTML</acronym>のような他のフォーマットに変換する処理手順が含まれています。
      </para>

      <para>
<!--
       The minimum required version is currently 1.77.0, but it is recommended
       to use the latest available version for best results.
-->
現在最低必要なバージョンは1.77.0ですが、最良の結果を得るために入手可能な最新の版を使うことをお勧めします。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
<!--
     <term><ulink url="http://xmlsoft.org/">Libxml2</ulink> for <command>xmllint</command></term>
-->
     <term><command>xmllint</command>のための<ulink url="http://xmlsoft.org/">Libxml2</ulink></term>
     <listitem>
      <para>
<!--
       This library and the <command>xmllint</command> tool it contains are
       used for processing XML.  Many developers will already
       have <application>Libxml2</application> installed, because it is also
       used when building the PostgreSQL code.  Note, however,
       that <command>xmllint</command> might need to be installed from a
       separate subpackage.
-->
このライブラリとそこに含まれる<command>xmllint</command>ツールはXMLを処理するのに使われます。
PostgreSQLのコードを構築する時にも使われますので、多くの開発者はすでに<application>Libxml2</application>をインストールしているでしょう。
しかしながら、<command>xmllint</command>は別のサブパッケージからインストールする必要があるかもしれないことに注意してください。
      </para>
     </listitem>
     </varlistentry>

    <varlistentry>
<!--
     <term><ulink url="http://xmlsoft.org/XSLT/">Libxslt</ulink> for <command>xsltproc</command></term>
-->
     <term><command>xsltproc</command>のための<ulink url="http://xmlsoft.org/XSLT/">Libxslt</ulink></term>
     <listitem>
      <para>
<!--
       <command>xsltproc</command> is an XSLT processor, that is, a program to
       convert XML to other formats using XSLT stylesheets.
-->
<command>xsltproc</command>はXSLTプロセッサ、すなわち、XSLTスタイルシートを使ってXMLを他のフォーマットに変換するプログラムです。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><ulink url="https://xmlgraphics.apache.org/fop/">FOP</ulink></term>
     <listitem>
      <para>
<!--
       This is a program for converting, among other things, XML to PDF.
-->
これは変換、とりわけXMLからPDFへの変換のためのプログラムです。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

  <para>
<!--
   We have documented experience with several installation methods for
   the various tools that are needed to process the documentation.
   These will be described below.  There might be some other packaged
   distributions for these tools. Please report package status to the
   documentation mailing list, and we will include that information
   here.
-->
文書を作成するために必要な様々なツールのインストール方法についての経験をまとめました。
以下に記載します。
これらのツールは別にパッケージ化されて配布されていることも考えられます。
もしそのような配布物を見つけた場合はdocのメーリングリストに報告してください。
そのような情報をここに付け加えたいと思います。
  </para>

  <para>
<!--
   You can get away with not installing DocBook XML and the DocBook XSLT
   stylesheets locally, because the required files will be downloaded from the
   Internet and cached locally.  This may in fact be the preferred solution if
   your operating system packages provide only an old version of especially
   the stylesheets or if no packages are available at all.  See
   the <option>&#045;-nonet</option> option for <command>xmllint</command>
   and <command>xsltproc</command> for more information.
-->
必要なファイルはインターネットからダウンロードされ、ローカルにキャッシュされるので、DocBook XMLとDocBook XSLTスタイルシートをローカルにインストールせずに済ませることもできます。
オペレーティングシステムのパッケージで特にスタイルシートの古いバージョンしか提供されていない場合や、パッケージが全く利用できない場合には、実際、これが好ましい解決法でしょう。
詳細は<command>xmllint</command>と<command>xsltproc</command>の<option>--nonet</option>オプションを参照してください。
  </para>

  <sect2>
<!--
   <title>Installation on Fedora, RHEL, and Derivatives</title>
-->
   <title>Fedora、RHEL、およびその派生版でのインストール</title>

   <para>
<!--
    To install the required packages, use:
-->
要求されるパッケージをインストールするには以下のようにしてください。
<programlisting>
yum install docbook-dtds docbook-style-xsl fop libxslt
</programlisting>
   </para>
  </sect2>

  <sect2>
<!--
   <title>Installation on FreeBSD</title>
-->
   <title>FreeBSDでのインストール</title>

   <para>
<!--
    To install the required packages with <command>pkg</command>, use:
-->
<command>pkg</command>で必要なパッケージをインストールするには以下を使います。
<programlisting>
pkg install docbook-xml docbook-xsl fop libxslt
</programlisting>
   </para>

   <para>
<!--
    When building the documentation from the <filename>doc</filename>
    directory you'll need to use <command>gmake</command>, because the
    makefile provided is not suitable for FreeBSD's <command>make</command>.
-->
提供されているMakefileはFreeBSDの<command>make</command>用ではありませんので、<filename>doc</filename>ディレクトリから文書を作成するには<command>gmake</command>を使うことが必要でしょう。
   </para>
  </sect2>

  <sect2>
<!--
   <title>Debian Packages</title>
-->
   <title>Debianパッケージ</title>

   <para>
<!--
    There is a full set of packages of the documentation tools
    available for <productname>Debian GNU/Linux</productname>.
    To install, simply use:
-->
<productname>Debian GNU/Linux</productname>用の文書作成パッケージの一式が揃っています。
インストールには以下を使います。
<programlisting>
apt-get install docbook-xml docbook-xsl fop libxml2-utils xsltproc
</programlisting>
   </para>
  </sect2>

  <sect2>
   <title>macOS</title>

   <para>
<!--
    On macOS, you can build the HTML and man documentation without installing
    anything extra.  If you want to build PDFs or want to install a local copy
    of DocBook, you can get those from your preferred package manager.
-->
macOSでは、他に追加でインストールしなくても、HTMLとmanドキュメントを構築できます。
PDFを構築する、あるいはDocBookのローカルなコピーが必要な場合は、お気に入りのパッケージマネジャーを使って入手できます。
   </para>

   <para>
<!--
    If you use MacPorts, the following will get you set up:
-->
MacPortsを使っているのであれば、以下のようにすれば設定されます。
<programlisting>
sudo port install docbook-xml-4.5 docbook-xsl fop
</programlisting>
<!--
    If you use Homebrew, use this:
-->
Homebrewを使っているのであれば、こちらを使ってください。
<programlisting>
brew install docbook docbook-xsl fop
</programlisting>
   </para>
  </sect2>

  <sect2 id="docguide-toolsets-configure">
<!--
   <title>Detection by <command>configure</command></title>
-->
   <title><command>configure</command>による検出</title>

  <para>
<!--
   Before you can build the documentation you need to run the
   <filename>configure</filename> script as you would when building
   the <productname>PostgreSQL</productname> programs themselves.
   Check the output near the end of the run, it should look something
   like this:
-->
<productname>PostgreSQL</productname>本体のプログラムを構築した時のように、文書を構築する際に<filename>configure</filename>スクリプトを実行する必要があります。
実行が終わる近辺の次のような出力を確認してください。
<screen>
checking for xmllint... xmllint
checking for DocBook XML V4.5... yes
checking for dbtoepub... dbtoepub
checking for xsltproc... xsltproc
checking for fop... fop
</screen>
<!--
   If <filename>xmllint</filename> was not found then some of the following
   tests will be skipped.
-->
<filename>xmllint</filename>が見つからない時は次のテストのいくつかは省略されます。
  </para>

  </sect2>
 </sect1>

 <sect1 id="docguide-build">
<!--
  <title>Building the Documentation</title>
-->
  <title>文書の構築</title>

  <para>
<!--
   Once you have everything set up, change to the directory
   <filename>doc/src/sgml</filename> and run one of the commands
   described in the following subsections to build the
   documentation. (Remember to use GNU make.)
-->
全ての設定が終了したら、<filename>doc/src/sgml</filename>ディレクトリに移動して以下のコマンドの1つを実行してください
（GNU makeを使うのを忘れずに）。
  </para>

  <sect2>
   <title>HTML</title>

   <para>
<!--
    To build the <acronym>HTML</acronym> version of the documentation:
-->
<acronym>HTML</acronym>形式の文書を作成するには次のようにします。
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make html</userinput>
</screen>
<!--
    This is also the default target.  The output appears in the
    subdirectory <filename>html</filename>.
-->
これはデフォルトでの対象です。
出力は<filename>html</filename>サブディレクトリに作成されます。
   </para>

   <para>
<!--
    To produce HTML documentation with the stylesheet used on <ulink
    url="https://www.postgresql.org/docs/current/">postgresql.org</ulink> instead of the
    default simple style use:
-->
デフォルトの簡単なスタイルではなく<ulink url="https://postgresql.org/docs/current">postgresql.org</ulink>で使われているスタイルシートのHTMLの文書を作成するには、次のようにします。
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make STYLE=website html</userinput>
</screen>
   </para>

   <para>
<!--
    If the <literal>STYLE=website</literal> option is used, the generated HTML
    files include references to stylesheets hosted on <ulink
    url="https://www.postgresql.org/docs/current/">postgresql.org</ulink> and
    require network access to view.
-->
<literal>STYLE=website</literal>オプションが使われると、生成されるHTMLファイルは<ulink url="https://www.postgresql.org/docs/current/">postgresql.org</ulink>で提供されるスタイルシートへの参照を含み、見るにはネットワークアクセスが必要です。
   </para>
 </sect2>

 <sect2>
<!--
  <title>Manpages</title>
-->
  <title>マニュアルページ</title>

  <para>
<!--
   We use the DocBook XSL stylesheets to
   convert <productname>DocBook</productname>
   <sgmltag>refentry</sgmltag> pages to *roff output suitable for man
   pages.  To create the man pages, use the command:
-->
<productname>DocBook</productname> <sgmltag>refentry</sgmltag>ページをマニュアルページに対応した*roff形式に変換するには、DocBook XSLスタイルシートを使用します。
マニュアルページを作成するには次のようにします。
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make man</userinput>
</screen>
  </para>
 </sect2>

  <sect2>
   <title>PDF</title>

   <para>
<!--
    To produce a PDF rendition of the documentation
    using <productname>FOP</productname>, you can use one of the following
    commands, depending on the preferred paper format:
-->
<productname>FOP</productname>を使ってPDF文書を作成したい時は、対象の用紙のサイズに合わせて以下のコマンドの中から1つを選んでください。

    <itemizedlist>
     <listitem>
      <para>
<!--
       For A4 format:
-->
A4サイズ:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-A4.pdf</userinput>
</screen>
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       For U.S. letter format:
-->
U.S.レターサイズ:
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make postgres-US.pdf</userinput>
</screen>
      </para>
     </listitem>
    </itemizedlist>
   </para>

   <para>
<!--
    Because the PostgreSQL documentation is fairly
    big, <productname>FOP</productname> will require a significant amount of
    memory.  Because of that, on some systems, the build will fail with a
    memory-related error message.  This can usually be fixed by configuring
    Java heap settings in the configuration
    file <filename>~/.foprc</filename>, for example:
-->
PostgreSQL文書はかなり大きいので、<productname>FOP</productname>はかなりの量のメモリを必要とするでしょう。
そのため、システムの中には、メモリに関連するエラーメッセージを出して作成に失敗するものもあるでしょう。
これは、設定ファイル<filename>~/.foprc</filename>のJavaヒープ設定を設定することで回避できます。例えば、
<programlisting>
# FOP binary distribution
FOP_OPTS='-Xmx1500m'
# Debian
JAVA_ARGS='-Xmx1500m'
# Red Hat
ADDITIONAL_FLAGS='-Xmx1500m'
</programlisting>
<!--
    There is a minimum amount of memory that is required, and to some extent
    more memory appears to make things a bit faster.  On systems with very
    little memory (less than 1 GB), the build will either be very slow due to
    swapping or will not work at all.
-->
必要なメモリの最小量があり、ある程度はメモリが多いほどより速くなるようです。
非常に少ないメモリ(1GB以下)のシステムでは、作成はスワップのために非常に遅くなるか、全く動かないでしょう。
   </para>

   <para>
<!--
    Other XSL-FO processors can also be used manually, but the automated build
    process only supports FOP.
-->
他のXSL-FOプロセッサも手動で使えますが、自動化された作成プロセスではFOPだけがサポートされています。
   </para>
  </sect2>

  <sect2>
<!--
   <title>Plain Text Files</title>
-->
   <title>平文ファイル</title>

   <para>
<!--
    The installation instructions are also distributed as plain text,
    in case they are needed in a situation where better reading tools
    are not available.  The <filename>INSTALL</filename> file
    corresponds to <xref linkend="installation"/>, with some minor
    changes to account for the different context.  To recreate the
    file, change to the directory <filename>doc/src/sgml</filename>
    and enter <userinput>make INSTALL</userinput>.  Building text output
    requires <productname>Pandoc</productname> version 1.13 or newer as an
    additional build tool.
-->
より良い表示ツールがない状況で必要とされる場合に備えて、インストールの手順は平文でも配布されています。
<filename>INSTALL</filename>ファイルは<xref linkend="installation"/>と連係していて、異なった内容を説明するためにちょっとした変更が加えられています。
このファイルを生成するには、<filename>doc/src/sgml</filename>ディレクトリに移動し<userinput>make INSTALL</userinput>と入力します。
テキスト出力の構築には、追加の構築ツールとしてバージョン1.13以降の<productname>Pandoc</productname>が必要です。
   </para>

   <para>
<!--
    In the past, the release notes and regression testing instructions
    were also distributed as plain text, but this practice has been
    discontinued.
-->
以前はリリースノートとリグレッションテストの手順も平文で配布されていましたが、打ち切りになりました。
   </para>
  </sect2>

  <sect2>
<!--
   <title>Syntax Check</title>
-->
   <title>構文検証</title>

   <para>
<!--
    Building the documentation can take very long.  But there is a
    method to just check the correct syntax of the documentation
    files, which only takes a few seconds:
-->
文書の構築にはとても時間がかかります。
でも文書ファイルの正しい構文だけを検証する方法があります。
以下のように入力します。
ほんの数秒しかかかりません。
<screen>
<prompt>doc/src/sgml$ </prompt><userinput>make check</userinput>
</screen>
   </para>
  </sect2>
 </sect1>


 <sect1 id="docguide-authoring">
<!--
  <title>Documentation Authoring</title>
-->
  <title>文書の起草</title>

   <para>
<!--
    The documentation sources are most conveniently modified with an editor
    that has a mode for editing XML, and even more so if it has some awareness
    of XML schema languages so that it can know about
    <productname>DocBook</productname> syntax specifically.
-->
XMLの編集モードを持つエディタを使えばドキュメントソースの編集が非常に便利になります。
更にそれがXMLスキーマ言語を理解すると更に便利になり、<productname>DocBook</productname>構文を考慮することができるようになります。
   </para>

   <para>
<!--
    Note that for historical reasons the documentation source files are named
    with an extension <filename>.sgml</filename> even though they are now XML
    files.  So you might need to adjust your editor configuration to set the
    correct mode.
-->
歴史的な理由により、今はXMLファイルであるドキュメントのソースファイルは<filename>.sgml</filename>拡張子を持つファイル名称となっていることに注意してください。
ですから、正しいモードになるようにエディタ設定を調整する必要があるかも知れません。
   </para>

   <sect2>
    <title>Emacs</title>

    <para>
<!--
     <productname>nXML Mode</productname>, which ships with
     <productname>Emacs</productname>, is the most common mode for editing
     <acronym>XML</acronym> documents with <productname>Emacs</productname>.
     It will allow you to use <application>Emacs</application> to insert tags
     and check markup consistency, and it supports
     <productname>DocBook</productname> out of the box.  Check the <ulink
     url="https://www.gnu.org/software/emacs/manual/html_mono/nxml-mode.html">
     nXML manual</ulink> for detailed documentation.
-->
<productname>Emacs</productname>と一緒に提供される<productname>nXML Mode</productname>は、<productname>Emacs</productname>で<acronym>XML</acronym>文書を編集するためのモードとしてもっとも広く使われています。
このモードでは<application>Emacs</application>でタグを挿入してマークアップの一貫性をチェックでき、出荷時の状態で<productname>DocBook</productname>をサポートします。
詳細なドキュメントは、<ulink url="https://www.gnu.org/software/emacs/manual/html_mono/nxml-mode.html">nXML manual</ulink>を確認してください。
    </para>

    <para>
<!--
     <filename>src/tools/editors/emacs.samples</filename> contains
     recommended settings for this mode.
-->
<filename>src/tools/editors/emacs.samples</filename>にはこのモードで使う推奨設定が含まれています。
    </para>
   </sect2>

 </sect1>


 <sect1 id="docguide-style">
<!--
  <title>Style Guide</title>
-->
  <title>スタイルガイド</title>

  <sect2>
<!--
   <title>Reference Pages</title>
-->
   <title>リファレンスページ</title>

   <para>
<!--
    Reference pages should follow a standard layout.  This allows
    users to find the desired information more quickly, and it also
    encourages writers to document all relevant aspects of a command.
    Consistency is not only desired among
    <productname>PostgreSQL</productname> reference pages, but also
    with reference pages provided by the operating system and other
    packages.  Hence the following guidelines have been developed.
    They are for the most part consistent with similar guidelines
    established by various operating systems.
-->
リファレンスページは標準のレイアウトに従う必要があります。
このことにより、ユーザが必要な情報を素早く見つけられるようになり、同時にあるコマンドに関連する全ての特徴を文書化するよう書き手を励ましてもいます。
一貫性は、<productname>PostgreSQL</productname>の各リファレンスページ間だけでなく、オペレーティングシステムや他のパッケージソフトのリファレンスページとの関係でも求められるものです。
そのために、以下のガイドラインが作成されました。
このガイドラインのほとんどの部分は、様々なオペレーティングシステムで定められている同様のガイドラインと一貫性を持つものです。
   </para>

   <para>
<!--
    Reference pages that describe executable commands should contain
    the following sections, in this order.  Sections that do not apply
    can be omitted.  Additional top-level sections should only be used
    in special circumstances; often that information belongs in the
    <quote>Usage</quote> section.
-->
実行可能なコマンドを説明するリファレンスページには、以下の節がこの順序で含まれる必要があります。
該当しない節は除外しても構いません。
これらと同レベルの節は特殊な状況でのみ追加すべきです。
そのような情報は多くの場合、<quote>使用方法</quote>節に入れることができます。

    <variablelist>
     <varlistentry>
<!--
      <term>Name</term>
-->
      <term>名前</term>
      <listitem>
       <para>
<!--
        This section is generated automatically.  It contains the
        command name and a half-sentence summary of its functionality.
-->
この節は自動的に生成されます。ここには、コマンドの名前および機能の簡単な概要が入ります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Synopsis</term>
-->
      <term>概要</term>
      <listitem>
       <para>
<!--
        This section contains the syntax diagram of the command.  The
        synopsis should normally not list each command-line option;
        that is done below.  Instead, list the major components of the
        command line, such as where input and output files go.
-->
この節にはコマンドの構文図が入ります。
この概要には、通常、各コマンドラインオプションを記載しません（それらは、以下の節に記載されます）。
その代わり、入出力ファイルの宛先などのコマンドラインの主要なコンポーネントを記載します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Description</term>
-->
      <term>説明</term>
      <listitem>
       <para>
<!--
        Several paragraphs explaining what the command does.
-->
コマンドによって何が行われるかを説明する文章です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Options</term>
-->
      <term>オプション</term>
      <listitem>
       <para>
<!--
        A list describing each command-line option.  If there are a
        lot of options, subsections can be used.
-->
各コマンドラインオプションについて説明するリストです。
オプションが数多くある場合、副節を使用することができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Exit Status</term>
-->
      <term>終了ステータス</term>
      <listitem>
       <para>
<!--
        If the program uses 0 for success and non-zero for failure,
        then you do not need to document it.  If there is a meaning
        behind the different non-zero exit codes, list them here.
-->
成功の場合はゼロを使用し、失敗の場合には非ゼロを使用するプログラムでは、この節を記載する必要はありません。
複数の非ゼロの終了コードに異なる意味があれば、ここに記載します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Usage</term>
-->
      <term>使用方法</term>
      <listitem>
       <para>
<!--
        Describe any sublanguage or run-time interface of the program.
        If the program is not interactive, this section can usually be
        omitted.  Otherwise, this section is a catch-all for
        describing run-time features.  Use subsections if appropriate.
-->
プログラムの副言語またはランタイムインタフェースを全て記載します。
プログラムが対話型でない場合、通常はこの節を除外することができます。
それ以外の場合、この節は実行時の特徴のすべてを記載するために使用されます。
必要に応じて副節を作成してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Environment</term>
-->
      <term>環境</term>
      <listitem>
       <para>
<!--
        List all environment variables that the program might use.
        Try to be complete; even seemingly trivial variables like
        <envar>SHELL</envar> might be of interest to the user.
-->
プログラムが使用する可能性のある全ての環境変数を列挙します。
なるべく完全なリストを作成してください。
<envar>SHELL</envar>のような些細に見える変数でも、ユーザに必要なことがあります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Files</term>
-->
      <term>ファイル</term>
      <listitem>
       <para>
<!--
        List any files that the program might access implicitly.  That
        is, do not list input and output files that were specified on
        the command line, but list configuration files, etc.
-->
プログラムが暗黙的にアクセスする可能性のある全てのファイルを列挙します。
つまり、コマンドラインで指定された入出力ファイルではなく、設定ファイルなどを列挙するということです。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Diagnostics</term>
-->
      <term>診断</term>
      <listitem>
       <para>
<!--
        Explain any unusual output that the program might create.
        Refrain from listing every possible error message.  This is a
        lot of work and has little use in practice.  But if, say, the
        error messages have a standard format that the user can parse,
        this would be the place to explain it.
-->
プログラムが作成する可能性のある全ての異常な出力についての説明を記載します。
全てのエラーメッセージを列挙することは避けてください。
作業が大変な割に、実際にはほとんど役に立たないからです。
ただし、エラーメッセージにユーザが解析できる標準のフォーマットがあれば、ここに記載してください。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Notes</term>
-->
      <term>注釈</term>
      <listitem>
       <para>
<!--
        Anything that doesn't fit elsewhere, but in particular bugs,
        implementation flaws, security considerations, compatibility
        issues.
-->
特定の不具合、実装の問題点、セキュリティの考慮事項、互換性の問題など、他の節に該当しない全てのものを記載します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Examples</term>
-->
      <term>例</term>
      <listitem>
       <para>
<!--
        Examples
-->
例を記載します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>History</term>
-->
      <term>更新履歴</term>
      <listitem>
       <para>
<!--
        If there were some major milestones in the history of the
        program, they might be listed here.  Usually, this section can
        be omitted.
-->
プログラムの更新履歴に主要な変更点があった場合、ここに列挙します。
通常この節は省くことができます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>Author</term>
-->
      <term>作者</term>
      <listitem>
       <para>
<!--
        Author (only used in the contrib section)
-->
作者（contrib節のみ使用）
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
<!--
      <term>See Also</term>
-->
      <term>関連項目</term>
      <listitem>
       <para>
<!--
        Cross-references, listed in the following order: other
        <productname>PostgreSQL</productname> command reference pages,
        <productname>PostgreSQL</productname> SQL command reference
        pages, citation of <productname>PostgreSQL</productname>
        manuals, other reference pages (e.g., operating system, other
        packages), other documentation.  Items in the same group are
        listed alphabetically.
-->
次の順序で列挙されるクロスリファレンスです。
他の<productname>PostgreSQL</productname>コマンドのリファレンスページ、<productname>PostgreSQL</productname>のSQLコマンドのリファレンスページ、<productname>PostgreSQL</productname>マニュアルの引用、他のリファレンスページ（オペレーティングシステム、他のパッケージソフトなど）、その他の文書。同一グループに属するものは、アルファベット順に列挙します。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>

   <para>
<!--
    Reference pages describing SQL commands should contain the
    following sections: Name, Synopsis, Description, Parameters,
    Outputs, Notes, Examples, Compatibility, History, See
    Also.  The Parameters section is like the Options section, but
    there is more freedom about which clauses of the command can be
    listed.  The Outputs section is only needed if the command returns
    something other than a default command-completion tag.  The Compatibility
    section should explain to what extent
    this command conforms to the SQL standard(s), or to which other
    database system it is compatible.  The See Also section of SQL
    commands should list SQL commands before cross-references to
    programs.
-->
SQLコマンドを説明するリファレンスページには、次の節を含める必要があります。
名前、概要、説明、パラメータ、使用方法、診断、注釈、例、互換性、更新履歴、関連項目。
パラメータ節はオプション節と似ていますが、リストに加えることのできるコマンドの句についてより自由度が高いものです。
互換性節では、このコマンドがどの程度まで標準SQLに準拠しているか、または、他のどのデータベースシステムに対して互換性があるかを説明します。
SQLコマンドの関連項目節では、プログラムへのクロスリファレンスよりも前にSQLコマンドを記載する必要があります。
   </para>
  </sect2>

 </sect1>
</appendix>
