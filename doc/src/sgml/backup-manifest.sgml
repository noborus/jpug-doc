<!-- doc/src/sgml/backup-manifest.sgml -->

<chapter id="backup-manifest-format">
<!--
 <title>Backup Manifest Format</title>
-->
 <title>バックアップマニフェスト書式</title>

  <indexterm>
   <primary>Backup Manifest</primary>
  </indexterm>
  <indexterm>
   <primary>バックアップマニフェスト</primary>
  </indexterm>

  <para>
<!--
   The backup manifest generated by <xref linkend="app-pgbasebackup" /> is
   primarily intended to permit the backup to be verified using
   <xref linkend="app-pgverifybackup" />. However, it is
   also possible for other tools to read the backup manifest file and use
   the information contained therein for their own purposes. To that end,
   this chapter describes the format of the backup manifest file.
-->
<xref linkend="app-pgbasebackup" />で生成されるバックアップマニフェストは<xref linkend="app-pgverifybackup" />を用いてバックアップを検証できるようにすることを主目的としています。
しかしながら、他のツールでバックアップマニフェストファイルを読んで中に含まれる情報を独自の目的に利用することも可能です。
そのために、本章ではバックアップマニフェストファイルの書式を説明します。
  </para>

  <para>
<!--
   A backup manifest is a JSON document encoded as UTF-8. (Although in
   general JSON documents are required to be Unicode, PostgreSQL permits
   the <type>json</type> and <type>jsonb</type> data types to be used with any
   supported server encoding. There is no similar exception for backup
   manifests.) The JSON document is always an object; the keys that are present
   in this object are described in the next section.
-->
バックアップマニフェストはUTF-8でエンコードされたJSONドキュメントです。
（一般にJSONドキュメントはユニコードであることを必要としますが、PostgreSQLは<type>json</type>および<type>jsonb</type>データ型にサポートされる全てのサーバエンコーディングを用いることを許しています。バックアップマニフェストに同様の例外はありません。）
このJSONドキュメントは常に単一オブジェクトです。オブジェクトにあるキーについて、次章で説明します。
  </para>

 <sect1 id="backup-manifest-toplevel">
<!--
  <title>Backup Manifest Top-level Object</title>
-->
  <title>バックアップマニフェストの最上位レベルオブジェクト</title>

  <para>
<!--
   The backup manifest JSON document contains the following keys.
-->
バックアップマニフェストのJSONドキュメントには以下のキーがあります。
  </para>

  <variablelist>
   <varlistentry>
    <term><literal>PostgreSQL-Backup-Manifest-Version</literal></term>
    <listitem>
     <para>
<!--
      The associated value is always the integer 1.
-->
関連付けられた値は常に整数の1です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>Files</literal></term>
    <listitem>
     <para>
<!--
      The associated value is always a list of objects, each describing one
      file that is present in the backup. No entries are present in this
      list for the WAL files that are needed in order to use the backup,
      or for the backup manifest itself.  The structure of each object in the
      list is described in <xref linkend="backup-manifest-files" />.
-->
関連付けられた値は常にオブジェクトのリストで、それぞれがバックアップ中にある一つのファイルを記述しています。
このリストにはバックアップを使うために必要なWALファイルやバックアップマニフェスト自体に対するエントリは含まれません。
リスト内の各オブジェクトの構造は<xref linkend="backup-manifest-files" />で説明します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WAL-Ranges</literal></term>
    <listitem>
     <para>
<!--
      The associated value is always a list of objects, each describing a
      range of WAL records that must be readable from a particular timeline
      in order to make use of the backup.  The structure of these objects is
      further described in <xref linkend="backup-manifest-wal-ranges" />.
-->
関連付けられた値は常にオブジェクトのリストで、それぞれがバックアップを使用するために特定タイムラインから読み込み可能でなければならないWALレコードの範囲を記述しています。
これらオブジェクトの構造は後段の<xref linkend="backup-manifest-wal-ranges" />で説明します。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>Manifest-Checksum</literal></term>
    <listitem>
     <para>
<!--
      This key is always present on the last line of the backup manifest file.
      The associated value is a SHA256 checksum of all the preceding lines.
      We use a fixed checksum method here to make it possible for clients
      to do incremental parsing of the manifest. While a SHA256 checksum
      is significantly more expensive than a CRC32C checksum, the manifest
      should normally be small enough that the extra computation won't matter
      very much.
-->
このキーは常にバックアップマニフェストファイルの最後の行にあります。
関連付けられた値はこれ以前の全行のSHA256チェックサムです。
クライアントでマニフェストの逐次的な解析を可能とするため、ここでは固定のチェックサム方式を使います。
SHA256チェックサムはCRC32Cチェックサムよりもかなり高コストですが、マニフェストは通常、追加の計算が大きな問題とならない程度に小さいはずです。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 id="backup-manifest-files">
<!--
  <title>Backup Manifest File Object</title>
-->
  <title>バックアップマニフェストのファイルオブジェクト</title>

  <para>
<!--
   The object which describes a single file contains either a
   <literal>Path</literal> key or an <literal>Encoded-Path</literal> key.
   Normally, the <literal>Path</literal> key will be present. The
   associated string value is the path of the file relative to the root
   of the backup directory. Files located in a user-defined tablespace
   will have paths whose first two components are <filename>pg_tblspc</filename> and the OID
   of the tablespace. If the path is not a string that is legal in UTF-8,
   or if the user requests that encoded paths be used for all files, then
   the <literal>Encoded-Path</literal> key will be present instead.  This
   stores the same data, but it is encoded as a string of hexadecimal
   digits. Each pair of hexadecimal digits in the string represents a
   single octet.
-->
単一ファイルを記述するオブジェクトは、<literal>Path</literal>キーか<literal>Encoded-Path</literal>キーを持ちます。
通常は<literal>Path</literal>キーになります。
関連付けられた文字列値はファイルのバックアップディレクトリからの相対パスです。
ユーザ定義テーブル空間にあるファイルは、最初の2つの要素が<filename>pg_tblspc</filename>とテーブル空間のOIDであるパスを持ちます。
パスがUTF-8として正当な文字列でなかったり、ユーザが全ファイルにエンコードされたパスが使われることを要求した場合には、代替に<literal>Encoded-Path</literal>キーがあらわれます。
これは同じデータを格納しますが、16進数の文字列としてエンコードされます。
文字列における16進数の各2つ組で1オクテットを表現します。
  </para>

  <para>
<!--
   The following two keys are always present:
-->
以下の2つのキーは常に含まれます。
  </para>

  <variablelist>
   <varlistentry>
    <term><literal>Size</literal></term>
    <listitem>
     <para>
<!--
      The expected size of this file, as an integer.
-->
ファイルの期待されるサイズです。整数として書かれます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>Last-Modified</literal></term>
    <listitem>
     <para>
<!--
      The last modification time of the file as reported by the server at
      the time of the backup. Unlike the other fields stored in the backup,
      this field is not used by <xref linkend="app-pgverifybackup" />.
      It is included only for informational purposes.
-->
バックアップ時にサーバによって報告されたファイルの最終変更時刻です。
バックアップに格納された他フィールドと違い、本フィールドは<xref linkend="app-pgverifybackup" />では使われません。
情報提供のみを目的として含まれています。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
<!--
   If the backup was taken with file checksums enabled, the following
   keys will be present:
-->
ファイルチェックサムを有効にしてバックアップが取得された場合、以下のキーが含まれます。
  </para>

  <variablelist>
   <varlistentry>
    <term><literal>Checksum-Algorithm</literal></term>
    <listitem>
     <para>
<!--
      The checksum algorithm used to compute a checksum for this file.
      Currently, this will be the same for every file in the backup
      manifest, but this may change in future releases. At present, the
      supported checksum algorithms are <literal>CRC32C</literal>,
      <literal>SHA224</literal>,
      <literal>SHA256</literal>,
      <literal>SHA384</literal>, and
      <literal>SHA512</literal>.
-->
このファイルのチェックサム計算で使用されるチェックサムアルゴリズムです。
今のところ、これはバックアップマニフェスト内の全ファイルで同じになりますが、将来のリリースで変更されるかもしれません。
現在サポートされるアルゴリズムは、<literal>CRC32C</literal>、<literal>SHA224</literal>、<literal>SHA256</literal>、<literal>SHA384</literal>、および、<literal>SHA512</literal>です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>Checksum</literal></term>
    <listitem>
     <para>
<!--
      The checksum computed for this file, stored as a series of
      hexadecimal characters, two for each byte of the checksum.
-->
このファイルに対して計算されたチェックサムで、チェックサムの各バイト毎に2文字の、16進数の文字列として格納されます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>

 <sect1 id="backup-manifest-wal-ranges">
<!--
  <title>Backup Manifest WAL Range Object</title>
-->
  <title>バックアップマニフェストのWAL範囲オブジェクト</title>

  <para>
<!--
   The object which describes a WAL range always has three keys:
-->
WAL範囲を記述するこのオブジェクトは常に以下の3つのキーを持ちます。
  </para>

  <variablelist>
   <varlistentry>
    <term><literal>Timeline</literal></term>
    <listitem>
     <para>
<!--
      The timeline for this range of WAL records, as an integer.
-->
WALレコードのこの範囲に対するタイムラインです。整数として書かれます。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>Start-LSN</literal></term>
    <listitem>
     <para>
<!--
      The LSN at which replay must begin on the indicated timeline in order to
      make use of this backup.  The LSN is stored in the format normally used
      by <productname>PostgreSQL</productname>; that is, it is a string
      consisting of two strings of hexadecimal characters, each with a length
      of between 1 and 8, separated by a slash.
-->
バックアップを使用するためにリプレイを開始しなければならない指定されたタイムライン上のLSNです。
このLSNは<productname>PostgreSQL</productname>で標準的に使われる書式で格納されます。すなわち、2つの16進数文字列で構成され、それぞれの長さが1から8で、スラッシュで区切られた文字列です。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>End-LSN</literal></term>
    <listitem>
     <para>
<!--
      The earliest LSN at which replay on the indicated timeline may end when
      making use of this backup. This is stored in the same format as
      <literal>Start-LSN</literal>.
-->
このバックアップを使うときにリプレイを終了してもよい、指定されたタイムライン上の最も早いLSNです。
これは<literal>Start-LSN</literal>と同じ書式で格納されます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
<!--
   Ordinarily, there will be only a single WAL range. However, if a backup is
   taken from a standby which switches timelines during the backup due to an
   upstream promotion, it is possible for multiple ranges to be present, each
   with a different timeline. There will never be multiple WAL ranges present
   for the same timeline.
-->
通常、単一のWAL範囲だけが存在します。
しかしながら、バックアップが、上流の昇格のためにバックアップ中にタイムラインを変更したスタンバイから取得された場合、それぞれ異なるタイムラインを持つ複数の範囲が存在する可能性があります。
同じタイムラインに対して複数のWAL範囲があらわれることは決してありません。
  </para>
 </sect1>
</chapter>
