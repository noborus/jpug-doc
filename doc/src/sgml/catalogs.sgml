<!-- doc/src/sgml/catalogs.sgml -->
<!--
 Documentation of the system catalogs, directed toward PostgreSQL developers
 -->

<chapter id="catalogs">
<!--
 <title>System Catalogs</title>
-->
 <title>システムカタログ</title>

  <para>
<!--
   The system catalogs are the place where a relational database
   management system stores schema metadata, such as information about
   tables and columns, and internal bookkeeping information.
   <productname>PostgreSQL</productname>'s system catalogs are regular
   tables.  You can drop and recreate the tables, add columns, insert
   and update values, and severely mess up your system that way.
   Normally, one should not change the system catalogs by hand, there
   are normally SQL commands to do that.  (For example, <command>CREATE
   DATABASE</command> inserts a row into the
   <structname>pg_database</structname> catalog &mdash; and actually
   creates the database on disk.)  There are some exceptions for
   particularly esoteric operations, but many of those have been made
   available as SQL commands over time, and so the need for direct manipulation
   of the system catalogs is ever decreasing.
-->
システムカタログとは、リレーショナルデータベース管理システムがテーブルや列の情報などのスキーマメタデータと内部的な情報を格納する場所です。
<productname>PostgreSQL</productname>のシステムカタログは通常のテーブルです。
テーブルを削除したり再作成したり、列の追加および値の挿入や更新をすることは可能ですが、これらの操作でデータベースシステムを台なしにしてしまう可能性もあります。
通常手作業でシステムカタログを変更してはいけません。
その代わりとしてSQLコマンドを使用します（例えば<command>CREATE DATABASE</command>により<structname>pg_database</structname>カタログに1行挿入し、ディスク上にデータベースを実際に作成します）。
しかし特に難易度の高い操作の時などの例外がありますが、それらの多くは時間と共にSQLコマンドとして利用可能となっており、それゆえシステムカタログを直接操作する必要は無くなってきています。
  </para>

 <sect1 id="catalogs-overview">
<!--
  <title>Overview</title>
-->
  <title>概要</title>

  <para>
<!--
   <xref linkend="catalog-table"/> lists the system catalogs.
   More detailed documentation of each catalog follows below.
-->
<xref linkend="catalog-table"/>にシステムカタログを列挙します。
以降システムカタログについてより詳細を説明します。
  </para>

  <para>
<!--
   Most system catalogs are copied from the template database during
   database creation and are thereafter database-specific. A few
   catalogs are physically shared across all databases in a cluster;
   these are noted in the descriptions of the individual catalogs.
-->
ほとんどのシステムカタログはデータベースを作成する時にテンプレートデータベースからコピーされ、以降はデータベースに固有のものになります。
ごく一部のカタログがデータベースクラスタ内の全てのデータベースにわたって物理的に共有されます。
これらについては、それぞれのカタログで説明します。
  </para>

  <table id="catalog-table">
<!--
   <title>System Catalogs</title>
-->
   <title>システムカタログ</title>

   <tgroup cols="2">
    <thead>
     <row>
<!--
      <entry>Catalog Name</entry>
      <entry>Purpose</entry>
-->
      <entry>カタログ名</entry>
      <entry>用途</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><link linkend="catalog-pg-aggregate"><structname>pg_aggregate</structname></link></entry>
<!--
      <entry>aggregate functions</entry>
-->
      <entry>集約関数</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-am"><structname>pg_am</structname></link></entry>
<!--
      <entry>relation access methods</entry>
-->
      <entry>リレーションアクセスメソッド</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-amop"><structname>pg_amop</structname></link></entry>
<!--
      <entry>access method operators</entry>
-->
      <entry>アクセスメソッド演算子</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-amproc"><structname>pg_amproc</structname></link></entry>
<!--
      <entry>access method support functions</entry>
-->
      <entry>アクセスメソッドサポート関数</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-attrdef"><structname>pg_attrdef</structname></link></entry>
<!--
      <entry>column default values</entry>
-->
      <entry>列デフォルト値</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link></entry>
<!--
      <entry>table columns (<quote>attributes</quote>)</entry>
-->
      <entry>テーブル列（<quote>属性</quote>）</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-authid"><structname>pg_authid</structname></link></entry>
<!--
      <entry>authorization identifiers (roles)</entry>
-->
      <entry>認証識別子（ロール）</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-auth-members"><structname>pg_auth_members</structname></link></entry>
<!--
      <entry>authorization identifier membership relationships</entry>
-->
      <entry>認証識別子メンバーシップ関係</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-cast"><structname>pg_cast</structname></link></entry>
<!--
      <entry>casts (data type conversions)</entry>
-->
      <entry>キャスト（データ型変換）</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-class"><structname>pg_class</structname></link></entry>
<!--
      <entry>tables, indexes, sequences, views (<quote>relations</quote>)</entry>
-->
      <entry>テーブル、インデックス、シーケンス、ビュー（<quote>リレーション</quote>）</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-collation"><structname>pg_collation</structname></link></entry>
<!--
      <entry>collations (locale information)</entry>
-->
      <entry>照合順序（ロケール情報）</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-constraint"><structname>pg_constraint</structname></link></entry>
<!--
      <entry>check constraints, unique constraints, primary key constraints, foreign key constraints</entry>
-->
      <entry>検査制約、一意性制約、主キー制約、外部キー制約</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-conversion"><structname>pg_conversion</structname></link></entry>
<!--
      <entry>encoding conversion information</entry>
-->
      <entry>エンコード方式変換情報</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-database"><structname>pg_database</structname></link></entry>
<!--
      <entry>databases within this database cluster</entry>
-->
      <entry>このデータベースクラスタにあるデータベース</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-db-role-setting"><structname>pg_db_role_setting</structname></link></entry>
<!--
      <entry>per-role and per-database settings</entry>
-->
      <entry>ロール毎およびデータベース毎の設定</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-default-acl"><structname>pg_default_acl</structname></link></entry>
<!--
      <entry>default privileges for object types</entry>
-->
      <entry>オブジェクト種類のデフォルト権限</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-depend"><structname>pg_depend</structname></link></entry>
<!--
      <entry>dependencies between database objects</entry>
-->
      <entry>データベースオブジェクト間の依存関係</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-description"><structname>pg_description</structname></link></entry>
<!--
      <entry>descriptions or comments on database objects</entry>
-->
      <entry>データベースオブジェクトの説明やコメント</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-enum"><structname>pg_enum</structname></link></entry>
<!--
      <entry>enum label and value definitions</entry>
-->
      <entry>列挙型のラベルや値の定義</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-event-trigger"><structname>pg_event_trigger</structname></link></entry>
<!--
      <entry>event triggers</entry>
-->
      <entry>イベントトリガ</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-extension"><structname>pg_extension</structname></link></entry>
<!--
      <entry>installed extensions</entry>
-->
      <entry>インストールされた拡張</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-foreign-data-wrapper"><structname>pg_foreign_data_wrapper</structname></link></entry>
<!--
      <entry>foreign-data wrapper definitions</entry>
-->
      <entry>外部データラッパの定義</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-foreign-server"><structname>pg_foreign_server</structname></link></entry>
<!--
      <entry>foreign server definitions</entry>
-->
      <entry>外部サーバの定義</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-foreign-table"><structname>pg_foreign_table</structname></link></entry>
<!--
      <entry>additional foreign table information</entry>
-->
      <entry>追加の外部テーブル情報</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-index"><structname>pg_index</structname></link></entry>
<!--
      <entry>additional index information</entry>
-->
      <entry>追加インデックス情報</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-inherits"><structname>pg_inherits</structname></link></entry>
<!--
      <entry>table inheritance hierarchy</entry>
-->
      <entry>テーブル継承階層</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-init-privs"><structname>pg_init_privs</structname></link></entry>
<!--
      <entry>object initial privileges</entry>
-->
      <entry>オブジェクトの初期権限</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-language"><structname>pg_language</structname></link></entry>
<!--
      <entry>languages for writing functions</entry>
-->
      <entry>関数記述言語</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-largeobject"><structname>pg_largeobject</structname></link></entry>
<!--
      <entry>data pages for large objects</entry>
-->
      <entry>ラージオブジェクト用のデータページ</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-largeobject-metadata"><structname>pg_largeobject_metadata</structname></link></entry>
<!--
      <entry>metadata for large objects</entry>
-->
      <entry>ラージオブジェクトのメタデータ</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link></entry>
<!--
      <entry>schemas</entry>
-->
      <entry>スキーマ</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link></entry>
<!--
      <entry>access method operator classes</entry>
-->
      <entry>アクセスメソッド演算子クラス</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-operator"><structname>pg_operator</structname></link></entry>
<!--
      <entry>operators</entry>
-->
      <entry>演算子</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-opfamily"><structname>pg_opfamily</structname></link></entry>
<!--
      <entry>access method operator families</entry>
-->
      <entry>アクセスメソッド演算子族</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-partitioned-table"><structname>pg_partitioned_table</structname></link></entry>
<!--
      <entry>information about partition key of tables</entry>
-->
      <entry>テーブルのパーティションキーについての情報</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-policy"><structname>pg_policy</structname></link></entry>
<!--
      <entry>row-security policies</entry>
-->
      <entry>行単位セキュリティポリシー</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-proc"><structname>pg_proc</structname></link></entry>
<!--
      <entry>functions and procedures</entry>
-->
      <entry>関数とプロシージャ</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-publication"><structname>pg_publication</structname></link></entry>
<!--
      <entry>publications for logical replication</entry>
-->
      <entry>論理レプリケーションのパブリケーション</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-publication-rel"><structname>pg_publication_rel</structname></link></entry>
<!--
      <entry>relation to publication mapping</entry>
-->
      <entry>リレーションとパブリケーションの対応</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-range"><structname>pg_range</structname></link></entry>
<!--
      <entry>information about range types</entry>
-->
      <entry>範囲型の情報</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-replication-origin"><structname>pg_replication_origin</structname></link></entry>
<!--
      <entry>registered replication origins</entry>
-->
      <entry>登録されたレプリケーション起点</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-rewrite"><structname>pg_rewrite</structname></link></entry>
<!--
      <entry>query rewrite rules</entry>
-->
      <entry>問い合わせ書き換えルール</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-seclabel"><structname>pg_seclabel</structname></link></entry>
<!--
      <entry>security labels on database objects</entry>
-->
      <entry>データベースオブジェクト上のセキュリティラベル</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-sequence"><structname>pg_sequence</structname></link></entry>
<!--
      <entry>information about sequences</entry>
-->
      <entry>シーケンスについての情報</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-shdepend"><structname>pg_shdepend</structname></link></entry>
<!--
      <entry>dependencies on shared objects</entry>
-->
     <entry>共有オブジェクトの依存関係</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-shdescription"><structname>pg_shdescription</structname></link></entry>
<!--
      <entry>comments on shared objects</entry>
-->
      <entry>共有オブジェクトに対するコメント</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-shseclabel"><structname>pg_shseclabel</structname></link></entry>
<!--
      <entry>security labels on shared database objects</entry>
-->
      <entry>共有データベースオブジェクトのセキュリティラベル</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link></entry>
<!--
      <entry>planner statistics</entry>
-->
      <entry>プランナ統計情報</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link></entry>
<!--
      <entry>extended planner statistics (definition)</entry>
-->
      <entry>プランナ拡張統計情報（定義）</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-statistic-ext-data"><structname>pg_statistic_ext_data</structname></link></entry>
<!--
      <entry>extended planner statistics (built statistics)</entry>
-->
      <entry>プランナ拡張統計情報（構築統計情報）</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-subscription"><structname>pg_subscription</structname></link></entry>
<!--
      <entry>logical replication subscriptions</entry>
-->
      <entry>論理レプリケーションのサブスクリプション</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-subscription-rel"><structname>pg_subscription_rel</structname></link></entry>
<!--
      <entry>relation state for subscriptions</entry>
-->
      <entry>サブスクリプションについてのリレーションの状態</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link></entry>
<!--
      <entry>tablespaces within this database cluster</entry>
-->
      <entry>データベースクラスタ内のテーブル空間</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-transform"><structname>pg_transform</structname></link></entry>
<!--
      <entry>transforms (data type to procedural language conversions)</entry>
-->
      <entry>変換（データ型を手続き言語に変換）</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-trigger"><structname>pg_trigger</structname></link></entry>
<!--
      <entry>triggers</entry>
-->
      <entry>トリガ</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-ts-config"><structname>pg_ts_config</structname></link></entry>
<!--
      <entry>text search configurations</entry>
-->
      <entry>全文検索設定</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-ts-config-map"><structname>pg_ts_config_map</structname></link></entry>
<!--
      <entry>text search configurations' token mappings</entry>
-->
      <entry>全文検索設定のトークン写像</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-ts-dict"><structname>pg_ts_dict</structname></link></entry>
<!--
      <entry>text search dictionaries</entry>
-->
      <entry>全文検索辞書</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-ts-parser"><structname>pg_ts_parser</structname></link></entry>
<!--
      <entry>text search parsers</entry>
-->
      <entry>全文検索パーサ</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-ts-template"><structname>pg_ts_template</structname></link></entry>
<!--
      <entry>text search templates</entry>
-->
      <entry>全文検索テンプレート</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-type"><structname>pg_type</structname></link></entry>
<!--
      <entry>data types</entry>
-->
      <entry>データ型</entry>
     </row>

     <row>
      <entry><link linkend="catalog-pg-user-mapping"><structname>pg_user_mapping</structname></link></entry>
<!--
      <entry>mappings of users to foreign servers</entry>
-->
      <entry>外部サーバへのユーザのマッピング</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-aggregate">
  <title><structname>pg_aggregate</structname></title>

  <indexterm zone="catalog-pg-aggregate">
   <primary>pg_aggregate</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_aggregate</structname> stores information about
   aggregate functions.  An aggregate function is a function that
   operates on a set of values (typically one column from each row
   that matches a query condition) and returns a single value computed
   from all these values.  Typical aggregate functions are
   <function>sum</function>, <function>count</function>, and
   <function>max</function>.  Each entry in
   <structname>pg_aggregate</structname> is an extension of an entry
   in <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.
   The <structname>pg_proc</structname> entry carries the aggregate's name,
   input and output data types, and other information that is similar to
   ordinary functions.
-->
<structname>pg_aggregate</structname>カタログには集約関数の情報が格納されています。
集約関数とは、値の集合（多くの場合は問い合わせ条件に該当する各行の1つの列）にある操作を行い、それらすべての値の演算の結果得られる単一の値を返します。
集約関数の代表的なものは<function>sum</function>、<function>count</function>そして<function>max</function>です。
<structname>pg_aggregate</structname>内の各項目は、<structname>pg_proc</structname>内の項目の拡張です。
<structname>pg_proc</structname>の項目には、集約の名前、入出力データ型および通常の関数と類似したその他の情報が含まれます。
  </para>

  <table>
<!--
   <title><structname>pg_aggregate</structname> Columns</title>
-->
   <title><structname>pg_aggregate</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggfnoid</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       <structname>pg_proc</structname> OID of the aggregate function
-->
集約関数の<structname>pg_proc</structname> OID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggkind</structfield> <type>char</type>
      </para>
      <para>
<!--
       Aggregate kind:
       <literal>n</literal> for <quote>normal</quote> aggregates,
       <literal>o</literal> for <quote>ordered-set</quote> aggregates, or
       <literal>h</literal> for <quote>hypothetical-set</quote> aggregates
-->
集約関数の種類:
<literal>n</literal> <quote>通常の</quote>集約関数、
<literal>o</literal> <quote>順序集合の</quote>集約関数、
<literal>h</literal> <quote>仮想集合の</quote>集約関数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggnumdirectargs</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Number of direct (non-aggregated) arguments of an ordered-set or
       hypothetical-set aggregate, counting a variadic array as one argument.
       If equal to <structfield>pronargs</structfield>, the aggregate must be variadic
       and the variadic array describes the aggregated arguments as well as
       the final direct arguments.
       Always zero for normal aggregates.
-->
順序集合や仮想集合の集約関数では、（集約されていない）複数の引数は、可変長配列として1個の引数と見なします。
引数が数が<structfield>pronargs</structfield>と同じ場合、最終的な直接引数同様、集約された引数として、集約関数の引数は、可変または可変長配列で記述しなければなりません。
通常の集約関数は引数を取りません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggtransfn</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Transition function
-->
遷移関数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggfinalfn</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Final function (zero if none)
-->
最終関数（ない時はゼロ）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggcombinefn</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Combine function (zero if none)
-->
結合関数（ない時はゼロ）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggserialfn</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Serialization function (zero if none)
-->
直列化関数（ない時はゼロ）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggdeserialfn</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Deserialization function (zero if none)
-->
逆直列化関数（ない時はゼロ）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggmtransfn</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Forward transition function for moving-aggregate mode (zero if none)
-->
移動集約モードの順方向遷移関数（ない時はゼロ）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggminvtransfn</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Inverse transition function for moving-aggregate mode (zero if none)
-->
移動集約モードの逆遷移関数（ない時はゼロ)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggmfinalfn</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Final function for moving-aggregate mode (zero if none)
-->
移動集約モードの最終関数（ない時はゼロ)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggfinalextra</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True to pass extra dummy arguments to <structfield>aggfinalfn</structfield>
-->
<structfield>aggfinalfn</structfield>に追加の仮引数を渡す場合はTrue
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggmfinalextra</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True to pass extra dummy arguments to <structfield>aggmfinalfn</structfield>
-->
<structfield>aggmfinalfn</structfield>に追加の仮引数を渡す場合はTrue
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggfinalmodify</structfield> <type>char</type>
      </para>
      <para>
<!--
       Whether <structfield>aggfinalfn</structfield> modifies the
       transition state value:
       <literal>r</literal> if it is read-only,
       <literal>s</literal> if the <structfield>aggtransfn</structfield>
       cannot be applied after the <structfield>aggfinalfn</structfield>, or
       <literal>w</literal> if it writes on the value
-->
<structfield>aggfinalfn</structfield>が遷移状態値を変更するかどうか。
読み出し専用なら<literal>r</literal>、<structfield>aggfinalfn</structfield>の後で<structfield>aggtransfn</structfield>を適用できなければ<literal>s</literal>、その値に書き込むなら<literal>w</literal>。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggmfinalmodify</structfield> <type>char</type>
      </para>
      <para>
<!--
       Like <structfield>aggfinalmodify</structfield>, but for
       the <structfield>aggmfinalfn</structfield>
-->
<structfield>aggmfinalfn</structfield>用であることを除き、<structfield>aggfinalmodify</structfield>と同様。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggsortop</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Associated sort operator (zero if none)
-->
関連するソート演算子（ない時はゼロ）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggtranstype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Data type of the aggregate function's internal transition (state) data
-->
集約関数の内部遷移（状態）データのデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggtransspace</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Approximate average size (in bytes) of the transition state
       data, or zero to use a default estimate
-->
遷移状態データの推定平均サイズ（バイト）、またはデフォルトの推定値であるゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggmtranstype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Data type of the aggregate function's internal transition (state)
       data for moving-aggregate mode (zero if none)
-->
移動集約モードの、集約関数の内部遷移（状態）データのデータ型（ない時はゼロ）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggmtransspace</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Approximate average size (in bytes) of the transition state data
       for moving-aggregate mode, or zero to use a default estimate
-->
移動集約モードの、遷移状態データの推定平均サイズ（バイト）、またはデフォルトの推定値であるゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>agginitval</structfield> <type>text</type>
      </para>
      <para>
<!--
       The initial value of the transition state.  This is a text
       field containing the initial value in its external string
       representation.  If this field is null, the transition state
       value starts out null.
-->
遷移状態の初期値。
外部文字列表現での初期値を含んだテキストフィールド。
フィールドがNULL値の場合、推移状態はNULL値で始まります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>aggminitval</structfield> <type>text</type>
      </para>
      <para>
<!--
       The initial value of the transition state for moving-aggregate mode.
       This is a text field containing the initial value in its external
       string representation.  If this field is null, the transition state
       value starts out null.
-->
移動集約モードの、遷移状態の初期値。外部に文字列表記された初期値を含むテキストフィールド。
このフィールドがnullの場合、遷移状態の値はnullから始まります。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   New aggregate functions are registered with the <link
   linkend="sql-createaggregate"><command>CREATE AGGREGATE</command></link>
   command.  See <xref linkend="xaggr"/> for more information about
   writing aggregate functions and the meaning of the transition
   functions, etc.
-->
新しい集約関数は<xref linkend="sql-createaggregate"/>コマンドで登録されます。
集約関数の書き方や遷移関数の説明などの詳細は<xref linkend="xaggr"/>を参照してください。
  </para>

 </sect1>


 <sect1 id="catalog-pg-am">
  <title><structname>pg_am</structname></title>

  <indexterm zone="catalog-pg-am">
   <primary>pg_am</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_am</structname> stores information about
   relation access methods.  There is one row for each access method supported
   by the system.
   Currently, only tables and indexes have access methods. The requirements for table
   and index access methods are discussed in detail in <xref linkend="tableam"/> and
   <xref linkend="indexam"/> respectively.
-->
<structname>pg_am</structname>カタログにはリレーションアクセスメソッドの情報が格納されます。
システムがサポートするアクセスメソッド毎に1つの行が存在します。
今の所、テーブルとインデックスのみがアクセスメソッドを持ちます。
テーブルとインデックスアクセスメソッドの要件は<xref linkend="tableam"/>と<xref linkend="indexam"/>で詳しく説明されています。
  </para>

  <table>
<!--
   <title><structname>pg_am</structname> Columns</title>
-->
   <title><structname>pg_am</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the access method
-->
アクセスメソッド名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amhandler</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of a handler function that is responsible for supplying information
       about the access method
-->
アクセスメソッドについての情報の提供に責任を持つハンドラ関数のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amtype</structfield> <type>char</type>
      </para>
      <para>
<!--
       <literal>t</literal> = table (including materialized views),
       <literal>i</literal> = index.
-->
<literal>t</literal> = テーブル（マテリアライズドビューを含む）、
<literal>i</literal> = インデックス。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <note>
   <para>
<!--
    Before <productname>PostgreSQL</productname> 9.6, <structname>pg_am</structname>
    contained many additional columns representing properties of index access
    methods.  That data is now only directly visible at the C code level.
    However, <function>pg_index_column_has_property()</function> and related
    functions have been added to allow SQL queries to inspect index access
    method properties; see <xref linkend="functions-info-catalog-table"/>.
-->
<productname>PostgreSQL</productname>9.6以前では、<structname>pg_am</structname>にはインデックスアクセスメソッドのプロパティを表す多くの追加列が含まれていました。
そのデータは今ではCコードレベルで直接参照できるのみです。
しかし、<function>pg_index_column_has_property()</function>関数と関連する関数群が、インデックスアクセスメソッドのプロパティを検査するためのSQLクエリを許容するために追加されました。
<xref linkend="functions-info-catalog-table"/>を参照してください。
   </para>
  </note>

 </sect1>


 <sect1 id="catalog-pg-amop">
  <title><structname>pg_amop</structname></title>

  <indexterm zone="catalog-pg-amop">
   <primary>pg_amop</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_amop</structname> stores information about
   operators associated with access method operator families.  There is one
   row for each operator that is a member of an operator family.  A family
   member can be either a <firstterm>search</firstterm> operator or an
   <firstterm>ordering</firstterm> operator.  An operator
   can appear in more than one family, but cannot appear in more than one
   search position nor more than one ordering position within a family.
   (It is allowed, though unlikely, for an operator to be used for both
   search and ordering purposes.)
-->
<structname>pg_amop</structname>カタログにはアクセスメソッド演算子の集合に関連付けられた演算子の情報が格納されています。
演算子族のメンバである演算子毎に１つの行が存在します。
演算子族のメンバは<firstterm>検索</firstterm>演算子または<firstterm>順序付け</firstterm>演算子のいずれかになることができます。
演算子は1つ以上の演算子族に現れますが、演算子族の中では検索でも順序付けでも複数現れることはありません。
（ほとんどありませんが、ある演算子が検索目的と順序付け目的の両方で使用されることが許されます。）
  </para>

  <table>
<!--
   <title><structname>pg_amop</structname> Columns</title>
-->
   <title><structname>pg_amop</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amopfamily</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-opfamily"><structname>pg_opfamily</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The operator family this entry is for
-->
この項目用の演算子族
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amoplefttype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Left-hand input data type of operator
-->
演算子の左辺側のデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amoprighttype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Right-hand input data type of operator
-->
演算子の右辺側のデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amopstrategy</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Operator strategy number
-->
演算子の戦略番号
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amoppurpose</structfield> <type>char</type>
      </para>
      <para>
<!--
       Operator purpose, either <literal>s</literal> for search or
       <literal>o</literal> for ordering
-->
演算子の目的。検索用ならば<literal>s</literal>、順序付け用であれば<literal>o</literal>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amopopr</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the operator
-->
演算子のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amopmethod</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-am"><structname>pg_am</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Index access method operator family is for
-->
演算子族用のインデックスアクセスメソッド
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amopsortfamily</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-opfamily"><structname>pg_opfamily</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The B-tree operator family this entry sorts according to, if an
       ordering operator; zero if a search operator
-->
順序付け用の演算子の場合、この項目のソートが従うB-tree演算子族。検索用演算子であればゼロ
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   A <quote>search</quote> operator entry indicates that an index of this operator
   family can be searched to find all rows satisfying
   <literal>WHERE</literal>
   <replaceable>indexed_column</replaceable>
   <replaceable>operator</replaceable>
   <replaceable>constant</replaceable>.
   Obviously, such an operator must return <type>boolean</type>, and its left-hand input
   type must match the index's column data type.
 -->
<quote>検索</quote>用演算子の項目は、この演算子族のインデックスを<literal>WHERE</literal> <replaceable>indexed_column</replaceable> <replaceable>operator</replaceable> <replaceable>constant</replaceable>を満たすすべての行を見つけるための検索に使用できることを示します。
いうまでもありませんが、こうした演算子は<type>論理型</type>を返さなければならず、また左辺の入力型はインデックス列のデータ型に一致しなければなりません。
  </para>

  <para>
<!--
   An <quote>ordering</quote> operator entry indicates that an index of this
   operator family can be scanned to return rows in the order represented by
   <literal>ORDER BY</literal>
   <replaceable>indexed_column</replaceable>
   <replaceable>operator</replaceable>
   <replaceable>constant</replaceable>.
   Such an operator could return any sortable data type, though again
   its left-hand input type must match the index's column data type.
   The exact semantics of the <literal>ORDER BY</literal> are specified by the
   <structfield>amopsortfamily</structfield> column, which must reference
   a B-tree operator family for the operator's result type.
-->
<quote>順序付け</quote>用演算子の項目は、この演算子族のインデックスを<literal>ORDER BY</literal> <replaceable>indexed_column</replaceable> <replaceable>operator</replaceable> <replaceable>constant</replaceable>で表される順序で行を返すためのスキャンに使用できることを示します。
こうした演算子の左辺の入力型はインデックス列のデータ型に一致しなければならないことは同じですが、任意のソート可能なデータ型を返すことができます。
<literal>ORDER BY</literal>の正確な意味は、この演算子の結果型用のB-tree演算子族を参照する必要がある<structfield>amopsortfamily</structfield>列により指定されます。
  </para>

  <note>
   <para>
<!--
    At present, it's assumed that the sort order for an ordering operator
    is the default for the referenced operator family, i.e., <literal>ASC NULLS
    LAST</literal>.  This might someday be relaxed by adding additional columns
    to specify sort options explicitly.
-->
現在、順序付け演算子のソート順は参照される演算子族のデフォルト、つまり<literal>ASC NULLS LAST</literal>であると仮定されています。
これは将来、ソートオプションを明示的に指定する追加列を加えることで緩和されるかもしれません。
   </para>
  </note>

  <para>
<!--
   An entry's <structfield>amopmethod</structfield> must match the
   <structfield>opfmethod</structfield> of its containing operator family (including
   <structfield>amopmethod</structfield> here is an intentional denormalization of the
   catalog structure for performance reasons).  Also,
   <structfield>amoplefttype</structfield> and <structfield>amoprighttype</structfield> must match
   the <structfield>oprleft</structfield> and <structfield>oprright</structfield> fields of the
   referenced <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link> entry.
-->
項目の<structfield>amopmethod</structfield>は、項目を含む演算子族の<structname>opfmethod</structname>に一致しなくてはいけません。
（ここでの<structfield>amopmethod</structfield>は、性能上の理由からカタログ構造を意図的に非正規化したものも含みます。）
また、<structfield>amoplefttype</structfield>と<structfield>amoprighttype</structfield>は、参照されている<structname>pg_operator</structname>項目の<structfield>oprleft</structfield>と<structfield>oprright</structfield>に一致しなくてはいけません。
  </para>

 </sect1>


 <sect1 id="catalog-pg-amproc">
  <title><structname>pg_amproc</structname></title>

  <indexterm zone="catalog-pg-amproc">
   <primary>pg_amproc</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_amproc</structname> stores information about
   support functions associated with access method operator families.  There
   is one row for each support function belonging to an operator family.
-->
<structname>pg_amproc</structname>カタログには、アクセスメソッド演算子族に関連付けられたサポート関数の情報が格納されます。
演算子族に含まれるサポート関数毎に１つの行が存在します。
  </para>

  <table>
<!--
   <title><structname>pg_amproc</structname> Columns</title>
-->
   <title><structname>pg_amproc</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amprocfamily</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-opfamily"><structname>pg_opfamily</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The operator family this entry is for
-->
この項目用の演算子族
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amproclefttype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Left-hand input data type of associated operator
-->
関連付けられた演算子の左辺のデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amprocrighttype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Right-hand input data type of associated operator
-->
関連付けられた演算子の右辺データ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amprocnum</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Support function number
-->
サポート関数番号
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>amproc</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the function
-->
関数のOID
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The usual interpretation of the
   <structfield>amproclefttype</structfield> and <structfield>amprocrighttype</structfield> fields
   is that they identify the left and right input types of the operator(s)
   that a particular support function supports.  For some access methods
   these match the input data type(s) of the support function itself, for
   others not.  There is a notion of <quote>default</quote> support functions for
   an index, which are those with <structfield>amproclefttype</structfield> and
   <structfield>amprocrighttype</structfield> both equal to the index operator class's
   <structfield>opcintype</structfield>.
-->
<structfield>amproclefttype</structfield>と<structfield>amprocrighttype</structfield>属性の通常の解釈は、それらが、特定のサポート関数がサポートする演算子の左と右の入力型を識別することです。
いくつかのアクセスメソッドに対して、これらはサポート関数自身の入力データ型に一致することもあります。
また、そうでないものもあります。
インデックスに対して<quote>デフォルト</quote>サポート関数の概念があります。
これは<structfield>amproclefttype</structfield>と<structfield>amprocrighttype</structfield>の両方が、インデックス演算クラスの<structfield>opcintype</structfield>に等しい、という概念です。
  </para>

 </sect1>


 <sect1 id="catalog-pg-attrdef">
  <title><structname>pg_attrdef</structname></title>

  <indexterm zone="catalog-pg-attrdef">
   <primary>pg_attrdef</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_attrdef</structname> stores column default
   values.  The main information about columns is stored in
   <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.
   Only columns for which a default value has been explicitly set will have
   an entry here.
-->
<structname>pg_attrdef</structname>システムカタログは列のデフォルト値を格納します。
列の主要な情報は<link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>に格納されています。
デフォルト値が明示的に設定された列のみここに項目を持ちます。
  </para>

  <table>
<!--
   <title><structname>pg_attrdef</structname> Columns</title>
-->
   <title><structname>pg_attrdef</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>adrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The table this column belongs to
-->
この列が属するテーブル
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>adnum</structfield> <type>int2</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attnum</structfield>)
      </para>
      <para>
<!--
       The number of the column
-->
列番号
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>adbin</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       The column default value, in <function>nodeToString()</function>
       representation.  Use <literal>pg_get_expr(adbin, adrelid)</literal> to
       convert it to an SQL expression.
-->
<function>nodeToString()</function>表現の列デフォルト値。
<literal>pg_get_expr(adbin, adrelid)</literal>を使ってSQL式に変換します。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-attribute">
  <title><structname>pg_attribute</structname></title>

  <indexterm zone="catalog-pg-attribute">
   <primary>pg_attribute</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_attribute</structname> stores information about
   table columns.  There will be exactly one
   <structname>pg_attribute</structname> row for every column in every
   table in the database.  (There will also be attribute entries for
   indexes, and indeed all objects that have
   <link linkend="catalog-pg-class"><structname>pg_class</structname></link>
   entries.)
-->
<structname>pg_attribute</structname>カタログにはテーブルの列情報が格納されます。
データベース内のすべてのテーブルの各列に対し必ず１つの<structname>pg_attribute</structname>行があります。
（また、インデックスと<structname>pg_class</structname>に項目を持つすべてのオブジェクトに対しての属性記述があります。）
  </para>

  <para>
<!--
   The term attribute is equivalent to column and is used for
   historical reasons.
-->
属性という表現は列と同等の意味で、歴史的背景からそのように呼ばれています。
  </para>

  <table>
<!--
   <title><structname>pg_attribute</structname> Columns</title>
-->
   <title><structname>pg_attribute</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The table this column belongs to
-->
この列が属するテーブル
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attname</structfield> <type>name</type>
      </para>
      <para>
<!--
       The column name
-->
列名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>atttypid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The data type of this column (zero for a dropped column)
-->
この列のデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attstattarget</structfield> <type>int4</type>
      </para>
      <para>
<!--
       <structfield>attstattarget</structfield> controls the level of detail
       of statistics accumulated for this column by
       <link linkend="sql-analyze"><command>ANALYZE</command></link>.
       A zero value indicates that no statistics should be collected.
       A negative value says to use the system default statistics target.
       The exact meaning of positive values is data type-dependent.
       For scalar data types, <structfield>attstattarget</structfield>
       is both the target number of <quote>most common values</quote>
       to collect, and the target number of histogram bins to create.
-->
<structfield>attstattarget</structfield>は<xref linkend="sql-analyze"/>によるこの列に対する蓄積された統計情報をどの程度詳しく管理するかを規定します。
値がゼロの場合は統計情報を収集しません。
負の値の場合は、システムのデフォルトの統計目標を使用すべきであるということです。
正の値が厳密に意味するところはデータ型に依存します。
スカラデータ型に対して<structfield>attstattarget</structfield>は収集する<quote>最も一般的な値</quote>の目標となる数であり、また作成する度数分布ビンの目標数でもあります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attlen</structfield> <type>int2</type>
      </para>
      <para>
<!--
       A copy of <literal>pg_type.typlen</literal> of this column's
       type
-->
この列の型の<literal>pg_type.typlen</literal>のコピー
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attnum</structfield> <type>int2</type>
      </para>
      <para>
<!--
       The number of the column.  Ordinary columns are numbered from 1
       up.  System columns, such as <structfield>ctid</structfield>,
       have (arbitrary) negative numbers.
-->
列番号。
通常の列には1から始まる番号付けがなされます。
<structfield>ctid</structfield>のようなシステムによる列には（任意の）負の番号が付きます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attndims</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Number of dimensions, if the column is an array type; otherwise 0.
       (Presently, the number of dimensions of an array is not enforced,
       so any nonzero value effectively means <quote>it's an array</quote>.)
-->
列が配列型の場合は次元数を表現し、そうでない時はゼロです。
（現在配列の次元数は強制されていませんのでゼロ以外のどのような値であっても<quote>これは配列である</quote>ということを意味します。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attcacheoff</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Always -1 in storage, but when loaded into a row descriptor
       in memory this might be updated to cache the offset of the attribute
       within the row
-->
格納時は必ず-1ですが、メモリ内の行記述子に読み込まれた場合は、行内での属性オフセットをキャッシュするために更新される可能性があります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>atttypmod</structfield> <type>int4</type>
      </para>
      <para>
<!--
       <structfield>atttypmod</structfield> records type-specific data
       supplied at table creation time (for example, the maximum
       length of a <type>varchar</type> column).  It is passed to
       type-specific input functions and length coercion functions.
       The value will generally be -1 for types that do not need <structfield>atttypmod</structfield>.
-->
<structfield>atttypmod</structfield>は、テーブル作成時に与えられた型固有のデータ（たとえば<type>varchar</type>列の最大長）を記録します。
これは型固有の入力関数や長さ強制関数に渡されます。
<structfield>atttypmod</structfield>を必要としない型では、通常、この値は-1です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attbyval</structfield> <type>bool</type>
      </para>
      <para>
<!--
       A copy of <literal>pg_type.typbyval</literal> of this column's type
-->
この列の型の<literal>pg_type.typbyval</literal>のコピー
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attalign</structfield> <type>char</type>
      </para>
      <para>
       A copy of <literal>pg_type.typalign</literal> of this column's type
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attstorage</structfield> <type>char</type>
      </para>
      <para>
<!--
       Normally a copy of <literal>pg_type.typstorage</literal> of this
       column's type.  For TOAST-able data types, this can be altered
       after column creation to control storage policy.
-->
通常、この列の型の<literal>pg_type.typstorage</literal>のコピー。
TOAST可能なデータ型では、格納ポリシーを制御するために列の作成後に変更することができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attcompression</structfield> <type>char</type>
      </para>
      <para>
       The current compression method of the column.  Typically this is
       <literal>'\0'</literal> to specify use of the current default setting
       (see <xref linkend="guc-default-toast-compression"/>).  Otherwise,
       <literal>'p'</literal> selects pglz compression, while
       <literal>'l'</literal> selects <productname>LZ4</productname>
       compression.  However, this field is ignored
       whenever <structfield>attstorage</structfield> does not allow
       compression.
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attnotnull</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This represents a not-null constraint.
-->
非NULL制約を表します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>atthasdef</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This column has a default expression or generation expression, in which
       case there will be a corresponding entry in the
       <link linkend="catalog-pg-attrdef"><structname>pg_attrdef</structname></link> catalog that actually defines the
       expression.  (Check <structfield>attgenerated</structfield> to
       determine whether this is a default or a generation expression.)
-->
この列にはデフォルト値あるいは生成式があります。
その場合、実際に値を定義する<structname>pg_attrdef</structname>カタログ内に対応する項目があります。
（これがデフォルトなのか生成式なのかは<structfield>attgenerated</structfield>をチェックします。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>atthasmissing</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This column has a value which is used where the column is entirely
       missing from the row, as happens when a column is added with a
       non-volatile <literal>DEFAULT</literal> value after the row is created.
       The actual value used is stored in the
       <structfield>attmissingval</structfield> column.
-->
この列は、行から列の値が完全に失われている場合に使われる値を持ちます。
これは、行が作られた後で非不安定(non-volatile)な<literal>DEFAULT</literal>値を持つ列が追加される際に起こります。
実際に使われる値は<structfield>attmissingval</structfield>列に格納されています。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attidentity</structfield> <type>char</type>
      </para>
      <para>
<!--
       If a zero byte (<literal>''</literal>), then not an identity column.
       Otherwise, <literal>a</literal> = generated
       always, <literal>d</literal> = generated by default.
-->
0バイト（<literal>''</literal>）ならこれはIDENTITY列ではありません。
IDENTITY列では、GENERATED ALWAYSなら<literal>a</literal>、GENERATED BY DEFAULTなら<literal>d</literal>になります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attgenerated</structfield> <type>char</type>
      </para>
      <para>
<!--
       If a zero byte (<literal>''</literal>), then not a generated column.
       Otherwise, <literal>s</literal> = stored.  (Other values might be added
       in the future.)
-->
ゼロバイト(<literal>''</literal>)なら、生成列ではありません。
さもなければ<literal>s</literal>= storedです。
（将来他の値が追加されるかも知れません。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attisdropped</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This column has been dropped and is no longer valid.  A dropped
       column is still physically present in the table, but is
       ignored by the parser and so cannot be accessed via SQL.
-->
この列は既に削除されていて有効ではありません。
削除された列は物理的にはまだテーブル上に存在していますが、パーサによって無視されるためSQLでアクセスすることができません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attislocal</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This column is defined locally in the relation.  Note that a column can
       be locally defined and inherited simultaneously.
-->
この列はリレーション内でローカルに定義されます。
列がローカルに定義されると同時に継承される場合もあることに注意してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attinhcount</structfield> <type>int4</type>
      </para>
      <para>
<!--
       The number of direct ancestors this column has.  A column with a
       nonzero number of ancestors cannot be dropped nor renamed.
-->
この列が持つ直接の祖先の数です。
祖先を持っている列の削除や名前は変更はできません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attcollation</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-collation"><structname>pg_collation</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The defined collation of the column, or zero if the column is
       not of a collatable data type
-->
列で定義された照合順序。列が照合順序の設定ができないデータ型の場合はゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Column-level access privileges, if any have been granted specifically
       on this column
-->
この列に特定して付与された場合における、列レベルのアクセス権限
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attoptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Attribute-level options, as <quote>keyword=value</quote> strings
-->
<quote>keyword=value</quote>文字列のような、属性レベルのオプション
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attfdwoptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Attribute-level foreign data wrapper options, as <quote>keyword=value</quote> strings
-->
<quote>keyword=value</quote>文字列のような、外部データラッパオプションの属性レベル
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attmissingval</structfield> <type>anyarray</type>
      </para>
      <para>
<!--
       This column has a one element array containing the value used when the
       column is entirely missing from the row, as happens when the column is
       added with a non-volatile <literal>DEFAULT</literal> value after the
       row is created.  The value is only used when
       <structfield>atthasmissing</structfield> is true.  If there is no value
       the column is null.
-->
この列は、行から列の値が完全に失われている場合に使われる値を持つ一要素配列を持ちます。
これは、行が作られた後で非不安定(non-volatile)な<literal>DEFAULT</literal>値を持つ列が追加される際に起こります。
この値は<structfield>atthasmissing</structfield>が真のときだけ使用されます。
値がなければその列はNULLになります。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   In a dropped column's <structname>pg_attribute</structname> entry,
   <structfield>atttypid</structfield> is reset to zero, but
   <structfield>attlen</structfield> and the other fields copied from
   <link linkend="catalog-pg-type"><structname>pg_type</structname></link> are still valid.  This arrangement is needed
   to cope with the situation where the dropped column's data type was
   later dropped, and so there is no <structname>pg_type</structname> row anymore.
   <structfield>attlen</structfield> and the other fields can be used
   to interpret the contents of a row of the table.
-->
削除された列の<structname>pg_attribute</structname>項目では、<structfield>atttypid</structfield>はゼロにリセットされます。
しかし<structfield>attlen</structfield>と<structname>pg_type</structname>からコピーされた他のフィールドは、有効なままです。
この動作は、削除された列のデータ型が後になって削除されて、<structname>pg_type</structname>行が存在しないような状況の場合に必要です。
<structfield>attlen</structfield>と他のフィールドは、テーブル内の行の内容を解釈するために使用されます。
  </para>
 </sect1>


 <sect1 id="catalog-pg-authid">
  <title><structname>pg_authid</structname></title>

  <indexterm zone="catalog-pg-authid">
   <primary>pg_authid</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_authid</structname> contains information about
   database authorization identifiers (roles).  A role subsumes the concepts
   of <quote>users</quote> and <quote>groups</quote>.  A user is essentially just a
   role with the <structfield>rolcanlogin</structfield> flag set.  Any role (with or
   without <structfield>rolcanlogin</structfield>) can have other roles as members; see
   <link linkend="catalog-pg-auth-members"><structname>pg_auth_members</structname></link>.
-->
<structname>pg_authid</structname>カタログはデータベース認証識別子（ロール）の情報を保持します。
ロールは<quote>ユーザ</quote>と<quote>グループ</quote>の概念を包括しています。
ユーザは本質的に<structfield>rolcanlogin</structfield>フラグセットを持ったロールです。
どのようなロール（<structfield>rolcanlogin</structfield>を持っている、持っていないに関わらず）も他のロールをメンバとして持っていても構いません。
<link linkend="catalog-pg-auth-members"><structname>pg_auth_members</structname></link>を参照してください。
  </para>

  <para>
<!--
   Since this catalog contains passwords, it must not be publicly readable.
   <link linkend="view-pg-roles"><structname>pg_roles</structname></link>
   is a publicly readable view on
   <structname>pg_authid</structname> that blanks out the password field.
-->
このカタログはパスワードを含んでいるため、第三者が内容を読むことができないようにしなければいけません。
<link linkend="view-pg-roles"><structname>pg_roles</structname></link>は、<structname>pg_authid</structname>のビューで、パスワードのフィールドは空白となっていますので内容を読み取ることができます。
  </para>

  <para>
<!--
   <xref linkend="user-manag"/> contains detailed information about user and
   privilege management.
-->
<xref linkend="user-manag"/>でユーザと権限管理に関するより詳細について説明します。
  </para>

  <para>
<!--
   Because user identities are cluster-wide,
   <structname>pg_authid</structname>
   is shared across all databases of a cluster: there is only one
   copy of <structname>pg_authid</structname> per cluster, not
   one per database.
-->
ユーザの本人確認はクラスタ全体にわたる情報ですので、<structname>pg_authid</structname>はクラスタのすべてのデータベースで共有されます。
データベース毎ではなく、クラスタ毎にたった1つだけ<structname>pg_authid</structname>が存在します。
  </para>

  <table>
<!--
   <title><structname>pg_authid</structname> Columns</title>
-->
   <title><structname>pg_authid</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Role name
-->
ロール名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolsuper</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role has superuser privileges
-->
ロールはスーパーユーザの権限を持っています
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolinherit</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role automatically inherits privileges of roles it is a
       member of
-->
ロールは自動的にメンバとして属するロールの権限を継承します
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolcreaterole</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role can create more roles
-->
ロールはロールを作成することができます
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolcreatedb</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role can create databases
-->
ロールはデータベースを作成することができます
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolcanlogin</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role can log in. That is, this role can be given as the initial
       session authorization identifier.
-->
ロールはログインすることができます。つまりロールはセッションを始める認証の識別子となることができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolreplication</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role is a replication role. A replication role can initiate replication
       connections and create and drop replication slots.
-->
ロールはレプリケーション用のロールです。
レプリケーションロールは、レプリケーション接続を開始すること、およびレプリケーションスロットを作成および削除することができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolbypassrls</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role bypasses every row-level security policy, see
       <xref linkend="ddl-rowsecurity"/> for more information.
-->
すべての行単位セキュリティポリシーを無視するロール。詳しくは<xref linkend="ddl-rowsecurity"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolconnlimit</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For roles that can log in, this sets maximum number of concurrent
       connections this role can make.  -1 means no limit.
-->
ログイン可能なロールでは、これはロールが確立できる同時実行接続数を設定します。
-1は制限無しを意味します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolpassword</structfield> <type>text</type>
      </para>
      <para>
<!--
       Password (possibly encrypted); null if none. The format depends
       on the form of encryption used.
-->
（おそらく暗号化された）パスワード。無い場合はNULLです。
書式は使用される暗号化の形式に依存します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolvaliduntil</structfield> <type>timestamptz</type>
      </para>
      <para>
<!--
       Password expiry time (only used for password authentication);
       null if no expiration
-->
パスワード有効期限（パスワード認証でのみ使用）。
NULLの場合には満了時間はありません。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   For an MD5 encrypted password, <structfield>rolpassword</structfield>
   column will begin with the string <literal>md5</literal> followed by a
   32-character hexadecimal MD5 hash. The MD5 hash will be of the user's
   password concatenated to their user name. For example, if user
   <literal>joe</literal> has password <literal>xyzzy</literal>, <productname>PostgreSQL</productname>
   will store the md5 hash of <literal>xyzzyjoe</literal>.
-->
MD5で暗号化されたパスワードでは、<structfield>rolpassword</structfield>列は文字列<literal>md5</literal>で始まり、それに32文字の16進MD5ハッシュ値が続きます。
MD5ハッシュは、ユーザのパスワードとユーザ名を繋げたものに対して生成されます。
例えば<literal>joe</literal>のパスワードが<literal>xyzzy</literal>なら、<productname>PostgreSQL</productname>は<literal>xyzzyjoe</literal>のMD5ハッシュを格納します。
  </para>

  <para>
<!--
   If the password is encrypted with SCRAM-SHA-256, it has the format:
-->
パスワードがSCRAM-SHA-256で暗号化される場合、次の書式になります。
<synopsis>
SCRAM-SHA-256$<replaceable>&lt;iteration count&gt;</replaceable>:<replaceable>&lt;salt&gt;</replaceable>$<replaceable>&lt;StoredKey&gt;</replaceable>:<replaceable>&lt;ServerKey&gt;</replaceable>
</synopsis>
<!--
   where <replaceable>salt</replaceable>, <replaceable>StoredKey</replaceable> and
   <replaceable>ServerKey</replaceable> are in Base64 encoded format. This format is
   the same as that specified by <ulink url="https://tools.ietf.org/html/rfc5803">RFC 5803</ulink>.
-->
ここで、<replaceable>salt</replaceable>、<replaceable>StoredKey</replaceable>、<replaceable>ServerKey</replaceable>はBase64の符号化書式に従います。
この書式はRFC 5803で指定されているものと同じです。
  </para>

  <para>
<!--
    A password that does not follow either of those formats is assumed to be
    unencrypted.
-->
これらのいずれの書式にも従っていないパスワードは、暗号化されていないものとみなされます。
  </para>
 </sect1>


 <sect1 id="catalog-pg-auth-members">
  <title><structname>pg_auth_members</structname></title>

  <indexterm zone="catalog-pg-auth-members">
   <primary>pg_auth_members</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_auth_members</structname> shows the membership
   relations between roles.  Any non-circular set of relationships is allowed.
-->
<structname>pg_auth_members</structname>カタログはロール間のメンバシップ関係を示しています。
循環していなければ、どのような関係でも許可されています。
  </para>

  <para>
<!--
   Because user identities are cluster-wide,
   <structname>pg_auth_members</structname>
   is shared across all databases of a cluster: there is only one
   copy of <structname>pg_auth_members</structname> per cluster, not
   one per database.
-->
ユーザの同一性はクラスタ間で保たれる必要があるため、<structname>pg_auth_members</structname>はクラスタ間のすべてのデータベースで共有されています。
<structname>pg_auth_members</structname>のコピーはデータベースごとではなく、各クラスタにひとつだけ持っています。
  </para>

  <table>
<!--
   <title><structname>pg_auth_members</structname> Columns</title>
-->
   <title><structname>pg_auth_members</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>roleid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       ID of a role that has a member
-->
メンバを持っているロールのID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>member</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       ID of a role that is a member of <structfield>roleid</structfield>
-->
<structfield>roleid</structfield>のメンバであるロールのID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grantor</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       ID of the role that granted this membership
-->
このメンバシップを与えたロールのID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>admin_option</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if <structfield>member</structfield> can grant membership in
       <structfield>roleid</structfield> to others
-->
もし<structfield>member</structfield>が<structfield>roleid</structfield>のメンバシップを他に与えることができる場合は真
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>


 <sect1 id="catalog-pg-cast">
  <title><structname>pg_cast</structname></title>

  <indexterm zone="catalog-pg-cast">
   <primary>pg_cast</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_cast</structname> stores data type conversion
   paths, both built-in and user-defined.
-->
<structname>pg_cast</structname>カタログにはデータ型変換パスが格納されます。
ここには、組み込みのパスとユーザ定義のパスが存在します。
  </para>

  <para>
<!--
   It should be noted that <structname>pg_cast</structname> does not represent
   every type conversion that the system knows how to perform; only those that
   cannot be deduced from some generic rule.  For example, casting between a
   domain and its base type is not explicitly represented in
   <structname>pg_cast</structname>.  Another important exception is that
   <quote>automatic I/O conversion casts</quote>, those performed using a data
   type's own I/O functions to convert to or from <type>text</type> or other
   string types, are not explicitly represented in
   <structname>pg_cast</structname>.
-->
<structname>pg_cast</structname>は、システムがどのように動作するかわかっているような、あらゆる型変換を表しているわけではないということに注意してください。
いくつかの一般的な規則から推測できないような型変換についてのみ表しています。
例えば、ドメインとその基本の型は明示的に<structname>pg_cast</structname>内で表されていません。
他の重要な例外は<quote>自動I/O変換キャスト</quote>です。
これらのキャストは、<type>text</type>型やほかの文字列型から変換したりされたりするのにデータ型自身のI/O関数を用いていますが、これらのキャストは明示的に<structname>pg_cast</structname>内において表されていません。
  </para>

  <table>
<!--
   <title><structname>pg_cast</structname> Columns</title>
-->
   <title><structname>pg_cast</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>castsource</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the source data type
-->
変換元データ型のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>casttarget</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the target data type
-->
対象データ型のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>castfunc</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the function to use to perform this cast.  Zero is
       stored if the cast method doesn't require a function.
-->
このキャストを実行するために使用する関数のOID。
キャストメソッドが関数を必要としない場合はゼロが格納されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>castcontext</structfield> <type>char</type>
      </para>
      <para>
<!--
       Indicates what contexts the cast can be invoked in.
       <literal>e</literal> means only as an explicit cast (using
       <literal>CAST</literal> or <literal>::</literal> syntax).
       <literal>a</literal> means implicitly in assignment
       to a target column, as well as explicitly.
       <literal>i</literal> means implicitly in expressions, as well as the
       other cases.
-->
キャストがどの文脈で呼び出し可能かを示します。
<literal>e</literal>は明示のキャストとしてのみ起動されることを意味します（<literal>CAST</literal>、<literal>::</literal>構文を使用します）。
<literal>a</literal>は、対象となる列を明示的に特定するだけでなく暗黙的にも特定することを意味します。
<literal>i</literal>は他の場合と同様に演算式内で暗黙的であることを意味します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>castmethod</structfield> <type>char</type>
      </para>
      <para>
<!--
       Indicates how the cast is performed.
       <literal>f</literal> means that the function specified in the <structfield>castfunc</structfield> field is used.
       <literal>i</literal> means that the input/output functions are used.
       <literal>b</literal> means that the types are binary-coercible, thus no conversion is required.
-->
どのようにキャストが実行されるかを示します。
<literal>f</literal>は<structfield>castfunc</structfield>フィールド内で示される関数が使用されていることを意味します。
<literal>i</literal>は入出力関数が使用されていることを示します。
<literal>b</literal>は型がバイナリを強制しているため、変換が必要ないことを意味します。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The cast functions listed in <structname>pg_cast</structname> must
   always take the cast source type as their first argument type, and
   return the cast destination type as their result type.  A cast
   function can have up to three arguments.  The second argument,
   if present, must be type <type>integer</type>; it receives the type
   modifier associated with the destination type, or -1
   if there is none.  The third argument,
   if present, must be type <type>boolean</type>; it receives <literal>true</literal>
   if the cast is an explicit cast, <literal>false</literal> otherwise.
-->
<structname>pg_cast</structname>内に挙げられているキャスト関数は、第1番目の引数の型として、キャスト元の型をいつも取らなければいけません。
また、キャスト関数は、結果の型としてキャスト先の型を返します。
キャスト関数は3つまで引数を持つことができます。
もし存在するなら、2番目の引数は<type>integer</type>型でなくてはなりません。
この引数はキャスト先の型に関連付けられた型修飾子を受け取ります。
2番目の引数がない場合は、-1です。
3番目の引数は、もし存在する場合は、<type>boolean</type>型でなくてはなりません。
この引数は、もしキャストが明示的なキャストであれば<literal>true</literal>を受け取り、そうでない場合は<literal>false</literal>を受け取ります。
  </para>

  <para>
<!--
   It is legitimate to create a <structname>pg_cast</structname> entry
   in which the source and target types are the same, if the associated
   function takes more than one argument.  Such entries represent
   <quote>length coercion functions</quote> that coerce values of the type
   to be legal for a particular type modifier value.
-->
もし関連のある関数が複数の引数を持つ場合、キャストの元と先で型が同じである<structname>pg_cast</structname>項目を作成することが妥当です。
このような項目は、<quote>length coercion functions</quote>を表現します。
<quote>length coercion functions</quote>は型の値を特定の型の修飾子の値に適するように修正します。
  </para>

  <para>
<!--
   When a <structname>pg_cast</structname> entry has different source and
   target types and a function that takes more than one argument, it
   represents converting from one type to another and applying a length
   coercion in a single step.  When no such entry is available, coercion
   to a type that uses a type modifier involves two steps, one to
   convert between data types and a second to apply the modifier.
-->
<structname>pg_cast</structname>項目が異なるキャスト元とキャスト先の型を持っていて、かつ関数が複数の引数を持つ時は、1つの型から別の型への変換し、かつ、1つの手順で長さの修正を適用することを意味します。
このような項目が利用できない時は、型修飾子を使用した型の修正は2つの手順が必要です。
1つはデータ型の間での変換で、2つ目は修飾子を適用することです。
  </para>
 </sect1>

 <sect1 id="catalog-pg-class">
  <title><structname>pg_class</structname></title>

  <indexterm zone="catalog-pg-class">
   <primary>pg_class</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_class</structname> catalogs tables and most
   everything else that has columns or is otherwise similar to a
   table.  This includes indexes (but see also <link
   linkend="catalog-pg-index"><structname>pg_index</structname></link>),
   sequences (but see also <link
   linkend="catalog-pg-sequence"><structname>pg_sequence</structname></link>),
   views, materialized views, composite types, and TOAST tables;
   see <structfield>relkind</structfield>.
   Below, when we mean all of these kinds of objects we speak of
   <quote>relations</quote>.  Not all columns are meaningful for all relation
   types.
-->
<structname>pg_class</structname>カタログはテーブルと、その他に列を持つもの、あるいはテーブルに似た全てのものを目録にしています。
その中にはインデックス（<structname>pg_index</structname>も参照）、シーケンス（<structname>pg_sequence</structname>も参照）、ビュー、マテリアライズドビュー、複合型およびTOASTテーブルが含まれます。
<structfield>relkind</structfield>を参照してください。
これより以降、<quote>リレーション</quote>と記されている場合はこれらすべてのオブジェクトを意味しています。
すべての列が全てのリレーションの型に該当するとは限りません。
  </para>

  <table>
<!--
   <title><structname>pg_class</structname> Columns</title>
-->
   <title><structname>pg_class</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the table, index, view, etc.
-->
テーブル、インデックス、ビューなどの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this relation
-->
このリレーションを持つ名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reltype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the data type that corresponds to this table's row type,
       if any; zero for indexes, sequences, and toast tables, which have
       no <structname>pg_type</structname> entry
-->
もし何らかの（<structname>pg_type</structname>項目を持たないインデックスではゼロ）が存在した場合このテーブルの行の型に対応するデータ型のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reloftype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       For typed tables, the OID of the underlying composite type;
       zero for all other relations
-->
型付けされたテーブルでは背後にある複合型のOID。
その他のリレーションではゼロ。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the relation
-->
リレーションの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relam</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-am"><structname>pg_am</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If this is a table or an index, the access method used (heap,
       B-tree, hash, etc.); otherwise zero (zero occurs for sequences,
       as well as relations without storage, such as views)
-->
これがテーブルあるいはインデックスの場合は、それに使われている（ヒープ、B-tree、ハッシュなどの）アクセスメソッド
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relfilenode</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Name of the on-disk file of this relation; zero means this
       is a <quote>mapped</quote> relation whose disk file name is determined
       by low-level state
-->
このリレーションのディスク上のファイルの名前です。
ゼロはディスク上のファイル名が低レベルな状態で決定される<quote>マップ付けされた</quote>リレーションであることを意味します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reltablespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The tablespace in which this relation is stored.  If zero,
       the database's default tablespace is implied.  (Not meaningful
       if the relation has no on-disk file.)
-->
このリレーションが保存されているテーブル空間。
もしゼロならば、このデータベースのデフォルトテーブル空間を意味します。
（リレーションがディスク上のファイルになくても、問題はありません。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relpages</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Size of the on-disk representation of this table in pages (of size
       <symbol>BLCKSZ</symbol>).  This is only an estimate used by the
       planner.  It is updated by <link linkend="sql-vacuum"><command>VACUUM</command></link>,
       <link linkend="sql-analyze"><command>ANALYZE</command></link>, and a few DDL commands such as
       <link linkend="sql-createindex"><command>CREATE INDEX</command></link>.
-->
このテーブルのディスク上におけるページ単位（<symbol>BLCKSZ</symbol>）の表現サイズ。
これはプランナで使用される単なる推測値です。
<command>VACUUM</command>、<command>ANALYZE</command>および<command>CREATE INDEX</command>コマンドなどの一部のDDLコマンドで更新されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reltuples</structfield> <type>float4</type>
      </para>
      <para>
<!--
       Number of live rows in the table.  This is only an estimate used by
       the planner.  It is updated by <link linkend="sql-vacuum"><command>VACUUM</command></link>,
       <link linkend="sql-analyze"><command>ANALYZE</command></link>, and a few DDL commands such as
       <link linkend="sql-createindex"><command>CREATE INDEX</command></link>.
       If the table has never yet been vacuumed or
       analyzed, <structfield>reltuples</structfield>
       contains <literal>-1</literal> indicating that the row count is
       unknown.
-->
テーブル内の生きている行数。
これはプランナで使用される単なる推測値です。
<command>VACUUM</command>、<command>ANALYZE</command>、<command>CREATE INDEX</command>などの一部のDDLコマンドで更新されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relallvisible</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Number of pages that are marked all-visible in the table's
       visibility map.  This is only an estimate used by the
       planner.  It is updated by <link linkend="sql-vacuum"><command>VACUUM</command></link>,
       <link linkend="sql-analyze"><command>ANALYZE</command></link>, and a few DDL commands such as
       <link linkend="sql-createindex"><command>CREATE INDEX</command></link>.
-->
テーブル内の可視マップ内で全て可視とマークされているページ数。
これはプランナで使用される単なる見積です。
これは<command>VACUUM</command>、<command>ANALYZE</command>さらに<command>CREATE INDEX</command>といったいくつかのDDLコマンドで更新されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reltoastrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the TOAST table associated with this table, zero if none.  The
       TOAST table stores large attributes <quote>out of line</quote> in a
       secondary table.
-->
このテーブルに関連しているTOASTテーブルのOID。
何もない場合はゼロです。
TOASTテーブルは<quote>行に収まらない</quote>大きい属性を副テーブルに格納します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relhasindex</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this is a table and it has (or recently had) any indexes
-->
テーブルであり、かつ、インデックスを持つ（あるいはつい最近まで持っていた）時は真。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relisshared</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this table is shared across all databases in the cluster.  Only
       certain system catalogs (such as <link linkend="catalog-pg-database"><structname>pg_database</structname></link>)
       are shared.
-->
クラスタ内の全てのデータベースにわたってこのテーブルが共有されている場合は真。
（<structname>pg_database</structname>のような）ある特定のシステムカタログのみ共有されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relpersistence</structfield> <type>char</type>
      </para>
      <para>
<!--
       <literal>p</literal> = permanent table, <literal>u</literal> = unlogged table,
       <literal>t</literal> = temporary table
-->
<literal>p</literal>は永続テーブル、<literal>u</literal>はログを取らないテーブル、<literal>t</literal>は一時テーブルを表します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relkind</structfield> <type>char</type>
      </para>
      <para>
<!--
       <literal>r</literal> = ordinary table,
       <literal>i</literal> = index,
       <literal>S</literal> = sequence,
       <literal>t</literal> = TOAST table,
       <literal>v</literal> = view,
       <literal>m</literal> = materialized view,
       <literal>c</literal> = composite type,
       <literal>f</literal> = foreign table,
       <literal>p</literal> = partitioned table,
       <literal>I</literal> = partitioned index
-->
<literal>r</literal>は通常のテーブル、<literal>i</literal>はインデックス、<literal>S</literal>はシーケンス、<literal>t</literal>はTOASTテーブル、<literal>v</literal>はビュー、<literal>m</literal>はマテリアライズドビュー、<literal>c</literal>は複合型、<literal>f</literal>は外部テーブル、<literal>p</literal>はパーティションテーブル、<literal>I</literal>はpartitioned indexを表します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relnatts</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Number of user columns in the relation (system columns not
       counted).  There must be this many corresponding entries in
       <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.  See also
       <structname>pg_attribute</structname>.<structfield>attnum</structfield>.
-->
リレーションにあるユーザ列数（システム列は含みません）。
<structname>pg_attribute</structname>にこれに対応する数多くの項目があるはずです。
<literal>pg_attribute.attnum</literal>も参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relchecks</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Number of <literal>CHECK</literal> constraints on the table; see
       <link linkend="catalog-pg-constraint"><structname>pg_constraint</structname></link> catalog
-->
テーブル上の<literal>CHECK</literal>制約の数。
<link linkend="catalog-pg-constraint"><structname>pg_constraint</structname></link>カタログを参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relhasrules</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if table has (or once had) rules; see
       <link linkend="catalog-pg-rewrite"><structname>pg_rewrite</structname></link> catalog
-->
もしテーブルにルールがある（あるいは以前あった）場合に真。
<link linkend="catalog-pg-rewrite"><structname>pg_rewrite</structname></link>カタログを参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relhastriggers</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if table has (or once had) triggers; see
       <link linkend="catalog-pg-trigger"><structname>pg_trigger</structname></link> catalog
-->
もしテーブルにトリガがある（あるいは以前あった）場合に真。
<link linkend="catalog-pg-trigger"><structname>pg_trigger</structname></link>カタログを参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relhassubclass</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if table or index has (or once had) any inheritance children
-->
もしテーブルあるいはインデックスが子テーブルに継承されている（または以前に継承されていた）場合は真。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relrowsecurity</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if table has row-level security enabled; see
       <link linkend="catalog-pg-policy"><structname>pg_policy</structname></link> catalog
-->
行単位セキュリティが有効なテーブルでは真。
<link linkend="catalog-pg-policy"><structname>pg_policy</structname></link>カタログを参照。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relforcerowsecurity</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if row-level security (when enabled) will also apply to table owner; see
       <link linkend="catalog-pg-policy"><structname>pg_policy</structname></link> catalog
-->
行単位セキュリティが（有効にされているとして）テーブルの所有者にも適用されるなら真。
<link linkend="catalog-pg-policy"><structname>pg_policy</structname></link>カタログを参照。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relispopulated</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if relation is populated (this is true for all
       relations other than some materialized views)
-->
リレーションにデータが投入されている場合に真（マテリアライズドビュー以外のすべてのリレーションでは真です。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relreplident</structfield> <type>char</type>
      </para>
      <para>
<!--
       Columns used to form <quote>replica identity</quote> for rows:
       <literal>d</literal> = default (primary key, if any),
       <literal>n</literal> = nothing,
       <literal>f</literal> = all columns,
       <literal>i</literal> = index with
       <structfield>indisreplident</structfield> set (same as nothing if the
       index used has been dropped)
-->
行に<quote>replica identity</quote>フォームを使った列。
<literal>d</literal> デフォルト（もしあれば主キー）、
<literal>n</literal> 無し、
<literal>f</literal> 全ての列、
<literal>i</literal> インデックスと <structfield>indisreplident</structfield>のセット（使用されていたインデックスが削除されていた場合は、無し、と同様）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relispartition</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if table or index is a partition
-->
テーブルあるいはインデックスがパーティションなら真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relrewrite</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       For new relations being written during a DDL operation that requires a
       table rewrite, this contains the OID of the original relation;
       otherwise zero.  That state is only visible internally; this field should
       never contain anything other than zero for a user-visible relation.
-->
テーブルの書き換えが必要なDDL操作中に書き込みが行われる新しいリレーションでは、これは元のリレーションのOIDを持ちます。
この状態は内部的にのみ可視です。
このフィールドはユーザから見えるリレーションでは0以外を持つべきではありません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relfrozenxid</structfield> <type>xid</type>
      </para>
      <para>
<!--
       All transaction IDs before this one have been replaced with a permanent
       (<quote>frozen</quote>) transaction ID in this table.  This is used to track
       whether the table needs to be vacuumed in order to prevent transaction
       ID wraparound or to allow <literal>pg_xact</literal> to be shrunk.  Zero
       (<symbol>InvalidTransactionId</symbol>) if the relation is not a table.
-->
この値より以前のトランザクションIDはすべて、このテーブルで永続的な（<quote>凍結された</quote>）トランザクションIDに置き換えられています。
これは、このテーブルに対して、トランザクションID周回を防ぎ、かつ、<literal>pg_xact</literal>を縮小させることを目的としたバキュームを行うかどうかを追跡するために使用されます。
リレーションがテーブルではない場合は0（<symbol>InvalidTransactionId</symbol>）です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relminmxid</structfield> <type>xid</type>
      </para>
      <para>
<!--
       All multixact IDs before this one have been replaced by a
       transaction ID in this table.  This is used to track
       whether the table needs to be vacuumed in order to prevent multixact ID
       wraparound or to allow <literal>pg_multixact</literal> to be shrunk.  Zero
       (<symbol>InvalidMultiXactId</symbol>) if the relation is not a table.
-->
このテーブル内のトランザクションIDによって置換される前のすべてのマルチトランザクションID。
これは、マルチトランザクションIDのID周回を防ぐ、または<literal>pg_multixact</literal>を縮小させるために、テーブルをバキュームする必要があるかどうかを追跡するために使用されます。
リレーションがテーブルではない場合はゼロ（<symbol>InvalidMultiXactId</symbol>）です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reloptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Access-method-specific options, as <quote>keyword=value</quote> strings
-->
<quote>keyword=value</quote>文字列のような、アクセスメソッド特有のオプション。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relpartbound</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       If table is a partition (see <structfield>relispartition</structfield>),
       internal representation of the partition bound
-->
テーブルがパーティションの場合（<structfield>relispartition</structfield>参照）のパーティション境界の内部表現。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Several of the Boolean flags in <structname>pg_class</structname> are maintained
   lazily: they are guaranteed to be true if that's the correct state, but
   may not be reset to false immediately when the condition is no longer
   true.  For example, <structfield>relhasindex</structfield> is set by
   <link linkend="sql-createindex"><command>CREATE INDEX</command></link>, but it is never cleared by
   <link linkend="sql-dropindex"><command>DROP INDEX</command></link>.  Instead, <link linkend="sql-vacuum"><command>VACUUM</command></link> clears
   <structfield>relhasindex</structfield> if it finds the table has no indexes.  This
   arrangement avoids race conditions and improves concurrency.
-->
<structname>pg_class</structname>内の複数の論理型フラグは、ゆっくりと保守されます。
正しい状態にあるときに真であることが保証されていますが、その条件が真でなくなった時即座に偽に再設定されないかもしれません。
例えば<structfield>relhasindex</structfield>は<command>CREATE INDEX</command>で設定されますが、<command>DROP INDEX</command>では決して初期化されません。
代わりに<command>VACUUM</command>がそのテーブルにインデックスがないことを判定した場合に<structfield>relhasindex</structfield>を初期化します。
この調整により競合状態を防止し、同時実行性が向上します。
  </para>
 </sect1>

 <sect1 id="catalog-pg-collation">
  <title><structname>pg_collation</structname></title>

  <indexterm zone="catalog-pg-collation">
   <primary>pg_collation</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_collation</structname> describes the
   available collations, which are essentially mappings from an SQL
   name to operating system locale categories.
   See <xref linkend="collation"/> for more information.
-->
<structname>pg_collation</structname>カタログは利用可能、SQL名とオペレーティングシステムのロケールカテゴリとの基本的な対応付けを行う照合順序を記述します。
詳細は <xref linkend="collation"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_collation</structname> Columns</title>
-->
   <title><structname>pg_collation</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Collation name (unique per namespace and encoding)
-->
照合順序の名前（名前空間およびエンコード方式で一意）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this collation
-->
この照合順序を含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the collation
-->
照合順序の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collprovider</structfield> <type>char</type>
      </para>
      <para>
<!--
       Provider of the collation: <literal>d</literal> = database
       default, <literal>c</literal> = libc, <literal>i</literal> = icu
-->
照合順序の提供者。<literal>d</literal>はデータベースのデフォルト、<literal>c</literal>はlibc、<literal>i</literal>はICU。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collisdeterministic</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Is the collation deterministic?
-->
照合順序は決定論的か？
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collencoding</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Encoding in which the collation is applicable, or -1 if it
       works for any encoding
-->
この照合順序を適用することができるエンコード方式。任意のエンコード方式で動作する場合は-1
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collcollate</structfield> <type>name</type>
      </para>
      <para>
<!--
       <symbol>LC_COLLATE</symbol> for this collation object
-->
この照合順序オブジェクト用の<symbol>LC_COLLATE</symbol>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collctype</structfield> <type>name</type>
      </para>
      <para>
<!--
       <symbol>LC_CTYPE</symbol> for this collation object
-->
この照合順序オブジェクト用の<symbol>LC_CTYPE</symbol>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>collversion</structfield> <type>text</type>
      </para>
      <para>
<!--
       Provider-specific version of the collation.  This is recorded when the
       collation is created and then checked when it is used, to detect
       changes in the collation definition that could lead to data corruption.
-->
この照合順序に対する提供者固有のバージョンです。
これは照合順序が作成された時に記録され、データの破壊につながりかねない照合順序定義の変更を検知するために使用時に検査されます。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Note that the unique key on this catalog is (<structfield>collname</structfield>,
   <structfield>collencoding</structfield>, <structfield>collnamespace</structfield>) not just
   (<structfield>collname</structfield>, <structfield>collnamespace</structfield>).
   <productname>PostgreSQL</productname> generally ignores all
   collations that do not have <structfield>collencoding</structfield> equal to
   either the current database's encoding or -1, and creation of new entries
   with the same name as an entry with <structfield>collencoding</structfield> = -1
   is forbidden.  Therefore it is sufficient to use a qualified SQL name
   (<replaceable>schema</replaceable>.<replaceable>name</replaceable>) to identify a collation,
   even though this is not unique according to the catalog definition.
   The reason for defining the catalog this way is that
   <application>initdb</application> fills it in at cluster initialization time with
   entries for all locales available on the system, so it must be able to
   hold entries for all encodings that might ever be used in the cluster.
-->
このカタログの一意キーは(<structfield>collname</structfield>, <structfield>collnamespace</structfield>)だけではなく(<structfield>collname</structfield>,<structfield>collencoding</structfield>, <structfield>collnamespace</structfield>)です。
<productname>PostgreSQL</productname>は通常、<structfield>collencoding</structfield>が現在のデータベースのエンコード方式または-1と一致しない照合順序をすべて無視します。
また、<structfield>collencoding</structfield> = -1を持つ項目と名前が一致する新しい項目の作成は許されません。
したがって照合順序を識別するためには、カタログの定義に従った一意ではない場合であっても、限定されたSQL名称(<replaceable>schema</replaceable>.<replaceable>name</replaceable>)を使用することで十分です。
このようにカタログを定義した理由は、クラスタの初期化時に<application>initdb</application> がシステムで利用可能なすべてのロケール用の項目でこのカタログにデータを投入するためです。
その為、今後そのクラスタで使用される可能性があるすべてのエンコード方式のエントリーを保持できるようにしなければなりません。
  </para>

  <para>
<!--
   In the <literal>template0</literal> database, it could be useful to create
   collations whose encoding does not match the database encoding,
   since they could match the encodings of databases later cloned from
   <literal>template0</literal>.  This would currently have to be done manually.
-->
後で<literal>template0</literal>から複製されるデータベースのエンコード方式と一致するかもしれないので、<literal>template0</literal>データベースのデータベースのエンコード方式と一致しないものの照合順を作成することが有用になるかもしれません。
現在これは手作業で行う必要があります。
  </para>
 </sect1>

 <sect1 id="catalog-pg-constraint">
  <title><structname>pg_constraint</structname></title>

  <indexterm zone="catalog-pg-constraint">
   <primary>pg_constraint</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_constraint</structname> stores check, primary
   key, unique, foreign key, and exclusion constraints on tables.
   (Column constraints are not treated specially.  Every column constraint is
   equivalent to some table constraint.)
   Not-null constraints are represented in the
   <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>
   catalog, not here.
-->
<structname>pg_constraint</structname>カタログはテーブル上の検査制約、主キー制約、一意性制約、外部キー制約、排他制約を格納します
（列制約は特別扱いされていません。
全ての列制約は何らかのテーブル制約と同等です。）
非NULL制約はここではなく、<structname>pg_attribute</structname>カタログで示されます。
  </para>

  <para>
<!--
   User-defined constraint triggers (created with <link linkend="sql-createtrigger">
   <command>CREATE CONSTRAINT TRIGGER</command></link>) also give rise to an entry in this table.
-->
(<command>CREATE CONSTRAINT TRIGGER</command>で作成される)ユーザ定義の制約トリガもこのテーブルの項目の元になります。
  </para>

  <para>
<!--
   Check constraints on domains are stored here, too.
-->
   ドメイン上の検査制約もここに格納されます。
  </para>

  <table>
<!--
   <title><structname>pg_constraint</structname> Columns</title>
-->
   <title><structname>pg_constraint</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Constraint name (not necessarily unique!)
-->
制約名（一意である必要はありません）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>connamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this constraint
-->
この制約を含む名前空間のOID。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>contype</structfield> <type>char</type>
      </para>
      <para>
<!--
       <literal>c</literal> = check constraint,
       <literal>f</literal> = foreign key constraint,
       <literal>p</literal> = primary key constraint,
       <literal>u</literal> = unique constraint,
       <literal>t</literal> = constraint trigger,
       <literal>x</literal> = exclusion constraint
-->
<literal>c</literal> = 検査制約、
<literal>f</literal> = 外部キー制約、
<literal>p</literal> = 主キー制約、
<literal>u</literal> = 一意性制約、
<literal>t</literal> = 制約トリガ,
<literal>x</literal> = 排他制約
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>condeferrable</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Is the constraint deferrable?
-->
制約は遅延可能かどうか?
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>condeferred</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Is the constraint deferred by default?
-->
制約はデフォルトで遅延可能かどうか?
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>convalidated</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Has the constraint been validated?
       Currently, can be false only for foreign keys and CHECK constraints
-->
制約が検証されているか？現時点では外部キーとチェック制約の場合のみ偽になる可能性があります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The table this constraint is on; zero if not a table constraint
-->
この制約が存在しているテーブルです。テーブル制約でなければ0です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>contypid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The domain this constraint is on; zero if not a domain constraint
-->
この制約が存在しているドメインです。ドメイン制約でなければ0です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conindid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The index supporting this constraint, if it's a unique, primary
       key, foreign key, or exclusion constraint; else zero
-->
一意性制約、主キー制約、外部キー制約、排他制約の場合、この制約をサポートするインデックス。
さもなくばゼロ。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conparentid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-constraint"><structname>pg_constraint</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The corresponding constraint of the parent partitioned table,
       if this is a constraint on a partition; else zero
-->
パーティション内の制約なら、親パーティションテーブルの該当制約、そうでなければ0。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>confrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If a foreign key, the referenced table; else zero
-->
外部キーであれば、参照されるテーブルです。そうでなければ0です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>confupdtype</structfield> <type>char</type>
      </para>
      <para>
<!--
       Foreign key update action code:
       <literal>a</literal> = no action,
       <literal>r</literal> = restrict,
       <literal>c</literal> = cascade,
       <literal>n</literal> = set null,
       <literal>d</literal> = set default
-->
外部キー更新アクションコード:
<literal>a</literal> = no action,
<literal>r</literal> = restrict,
<literal>c</literal> = cascade,
<literal>n</literal> = set null,
<literal>d</literal> = set default
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>confdeltype</structfield> <type>char</type>
      </para>
      <para>
<!--
       Foreign key deletion action code:
       <literal>a</literal> = no action,
       <literal>r</literal> = restrict,
       <literal>c</literal> = cascade,
       <literal>n</literal> = set null,
       <literal>d</literal> = set default
-->
外部キー削除アクションコード:
<literal>a</literal> = no action,
<literal>r</literal> = restrict,
<literal>c</literal> = cascade,
<literal>n</literal> = set null,
<literal>d</literal> = set default
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>confmatchtype</structfield> <type>char</type>
      </para>
      <para>
<!--
       Foreign key match type:
       <literal>f</literal> = full,
       <literal>p</literal> = partial,
       <literal>s</literal> = simple
-->
外部キーの一致型:
<literal>f</literal> = full,
<literal>p</literal> = partial,
<literal>s</literal> = simple
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conislocal</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This constraint is defined locally for the relation.  Note that a
       constraint can be locally defined and inherited simultaneously.
-->
この制約はリレーションでローカルに定義されています。制約はローカルに定義されていて同時に継承されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>coninhcount</structfield> <type>int4</type>
      </para>
      <para>
<!--
       The number of direct inheritance ancestors this constraint has.
       A constraint with
       a nonzero number of ancestors cannot be dropped nor renamed.
-->
この制約がもつ直系の先祖の数。
先祖の数がゼロではない制約は削除や改名はできません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>connoinherit</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This constraint is defined locally for the relation.  It is a
       non-inheritable constraint.
-->
この制約はリレーションのためにローカルで定義されます。これは非継承制約です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conkey</structfield> <type>int2[]</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attnum</structfield>)
      </para>
      <para>
<!--
       If a table constraint (including foreign keys, but not constraint
       triggers), list of the constrained columns
-->
テーブル制約(外部キーを含みますが制約トリガは含みません)であれば、その制約によって制約される列のリスト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>confkey</structfield> <type>int2[]</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attnum</structfield>)
      </para>
      <para>
<!--
       If a foreign key, list of the referenced columns
-->
外部キーであれば、参照される列のリスト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conpfeqop</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If a foreign key, list of the equality operators for PK = FK comparisons
-->
外部キーであれば、PK = FKの比較のための同値演算子のリスト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conppeqop</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If a foreign key, list of the equality operators for PK = PK comparisons
-->
外部キーであれば、PK = PKの比較のための同値演算子のリスト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conffeqop</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If a foreign key, list of the equality operators for FK = FK comparisons
-->
外部キーであれば、FK = FKの比較のための同値演算子のリスト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conexclop</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If an exclusion constraint, list of the per-column exclusion operators
-->
排他制約の場合、列単位の排他演算子のリスト。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conbin</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       If a check constraint, an internal representation of the
       expression.  (It's recommended to use
       <function>pg_get_constraintdef()</function> to extract the definition of
       a check constraint.)
-->
チェック制約なら式の内部表現。（<function>pg_get_constraintdef()</function>を使ってチェック制約の定義を取り出すことをお勧めします。）
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   In the case of an exclusion constraint, <structfield>conkey</structfield>
   is only useful for constraint elements that are simple column references.
   For other cases, a zero appears in <structfield>conkey</structfield>
   and the associated index must be consulted to discover the expression
   that is constrained.  (<structfield>conkey</structfield> thus has the
   same contents as <link linkend="catalog-pg-index"><structname>pg_index</structname></link>.<structfield>indkey</structfield> for the
   index.)
-->
排他制約の場合、単純な列参照である制約要素でのみ<structfield>conkey</structfield>が有用です。
その他の場合、<structfield>conkey</structfield>はゼロであり、関連するインデックスは制約される式を調査して見つけなければなりません。
（したがってインデックスでは<structfield>conkey</structfield>は<structname>pg_index</structname>.<structfield>indkey</structfield>の内容と同じものを持ちます。）
  </para>

  <note>
   <para>
<!--
    <literal>pg_class.relchecks</literal> needs to agree with the
    number of check-constraint entries found in this table for each
    relation.
-->
<literal>pg_class.relchecks</literal>はそれぞれのリレーションに対してこのテーブルで検出された検査制約の項目数と一致しなければなりません。
   </para>
  </note>
 </sect1>

<!-- split-catalogs0-end -->
<!-- split-catalogs1-start -->

 <sect1 id="catalog-pg-conversion">
  <title><structname>pg_conversion</structname></title>

  <indexterm zone="catalog-pg-conversion">
   <primary>pg_conversion</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_conversion</structname> describes
   encoding conversion functions.  See <xref linkend="sql-createconversion"/>
   for more information.
-->
<structname>pg_conversion</structname>カタログはエンコード方式変換関数を記述します。
詳細は<xref linkend="sql-createconversion"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_conversion</structname> Columns</title>
-->
   <title><structname>pg_conversion</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Conversion name (unique within a namespace)
-->
変換名（名前空間内で一意）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>connamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this conversion
-->
この変換を含む名前空間のOID。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the conversion
-->
変換の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conforencoding</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Source encoding ID
-->
エンコード元のID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>contoencoding</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Destination encoding ID
-->
エンコード先のID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>conproc</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Conversion function
-->
変換プロシージャ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>condefault</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this is the default conversion
-->
これがデフォルト変換である場合は真
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="catalog-pg-database">
  <title><structname>pg_database</structname></title>

  <indexterm zone="catalog-pg-database">
   <primary>pg_database</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_database</structname> stores information about
   the available databases.  Databases are created with the <link
   linkend="sql-createdatabase"><command>CREATE DATABASE</command></link> command.
   Consult <xref linkend="managing-databases"/> for details about the meaning
   of some of the parameters.
-->
<structname>pg_database</structname>カタログには使用可能なデータベースの情報が格納されます。
データベースは<xref linkend="sql-createdatabase"/>コマンドで作成されます。
いくつかのパラメータの詳細については<xref linkend="managing-databases"/>を参照してください。
  </para>

  <para>
<!--
   Unlike most system catalogs, <structname>pg_database</structname>
   is shared across all databases of a cluster: there is only one
   copy of <structname>pg_database</structname> per cluster, not
   one per database.
-->
ほとんどのシステムカタログとは異なり、<structname>pg_database</structname>はクラスタにおける全てのデータベースにわたって共有されます。
データベース毎に1つではなく、クラスタ毎にたった1つだけ<structname>pg_database</structname>のコピーが存在します。
  </para>

  <table>
<!--
   <title><structname>pg_database</structname> Columns</title>
-->
   <title><structname>pg_database</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Database name
-->
データベース名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datdba</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the database, usually the user who created it
-->
データベースの所有者。通常はそのデータベースの作成者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>encoding</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Character encoding for this database
       (<function>pg_encoding_to_char()</function> can translate
       this number to the encoding name)
-->
このデータベースの文字エンコード方式。
（<function>pg_encoding_to_char()</function>で、この番号からエンコード方式名称に変換できます。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datcollate</structfield> <type>name</type>
      </para>
      <para>
<!--
       LC_COLLATE for this database
-->
このデータベースのLC_COLLATE
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datctype</structfield> <type>name</type>
      </para>
      <para>
<!--
       LC_CTYPE for this database
-->
このデータベースのLC_CTYPE
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datistemplate</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, then this database can be cloned by
       any user with <literal>CREATEDB</literal> privileges;
       if false, then only superusers or the owner of
       the database can clone it.
-->
trueの場合、このデータベースはどのユーザでも<literal>CREATEDB</literal>を使って複製することができます。
falseの場合、スーパーユーザまたはデータベースの所有者だけが複製することができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datallowconn</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If false then no one can connect to this database.  This is
       used to protect the <literal>template0</literal> database from being altered.
-->
偽の時はこのデータベースには誰も接続できません。
これは<literal>template0</literal>データベースが変更されることを防ぐために使用されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datconnlimit</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Sets maximum number of concurrent connections that can be made
       to this database.  -1 means no limit.
-->
このデータベースに対する同時のコネクションの最大数を設定します。
-1は無制限を意味します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datlastsysoid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Last system OID in the database; useful
       particularly to <application>pg_dump</application>
-->
データベース最終のシステムOID。
<application>pg_dump</application>では特に有用です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datfrozenxid</structfield> <type>xid</type>
      </para>
      <para>
<!--
       All transaction IDs before this one have been replaced with a permanent
       (<quote>frozen</quote>) transaction ID in this database.  This is used to
       track whether the database needs to be vacuumed in order to prevent
       transaction ID wraparound or to allow <literal>pg_xact</literal> to be shrunk.
       It is the minimum of the per-table
       <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relfrozenxid</structfield> values.
-->
このデータベースの中で、この値よりも前のトランザクションIDは、永続的な（<quote>凍結された</quote>）トランザクションIDを持つように変更されています。
これは、このデータベースに対して、トランザクションID周回を防ぎ、かつ、<literal>pg_xact</literal>を縮小させることを目的としたバキュームを行うかどうかを追跡するために使用されます。
これはテーブル毎の<structname>pg_class</structname>.<structfield>relfrozenxid</structfield>値の最小値になります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datminmxid</structfield> <type>xid</type>
      </para>
      <para>
<!--
       All multixact IDs before this one have been replaced with a
       transaction ID in this database.  This is used to
       track whether the database needs to be vacuumed in order to prevent
       multixact ID wraparound or to allow <literal>pg_multixact</literal> to be shrunk.
       It is the minimum of the per-table
       <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relminmxid</structfield> values.
-->
このデータベース内のトランザクションIDで置換される前のすべてのマルチトランザクションID。
これは、トランザクションIDの周回問題を防ぐ、または<literal>pg_multixact</literal>を縮小させるためにデータベースをバキュームする必要があるかどうかを追跡するために使用されます。
これはテーブル毎の<structname>pg_class</structname>.<structfield>relminmxid</structfield>の最小値です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dattablespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The default tablespace for the database.
       Within this database, all tables for which
       <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>reltablespace</structfield> is zero
       will be stored in this tablespace; in particular, all the non-shared
       system catalogs will be there.
-->
データベース用のデフォルトテーブル空間。
このデータベース内で<structname>pg_class</structname>.<structfield>reltablespace</structfield>がゼロであるすべてのテーブルは、このテーブル空間に格納されます。
特に、共有されていないすべてのシステムカタログはこのテーブル空間にあります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-db-role-setting">
  <title><structname>pg_db_role_setting</structname></title>

  <indexterm zone="catalog-pg-db-role-setting">
   <primary>pg_db_role_setting</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_db_role_setting</structname> records the default
   values that have been set for run-time configuration variables,
   for each role and database combination.
-->
<structname>pg_db_role_setting</structname>カタログはロールとデータベースの組み合わせ毎に、実行時設定変数に設定されるデフォルト値を記録します。
  </para>

  <para>
<!--
   Unlike most system catalogs, <structname>pg_db_role_setting</structname>
   is shared across all databases of a cluster: there is only one
   copy of <structname>pg_db_role_setting</structname> per cluster, not
   one per database.
-->
ほとんどのカタログとは異なり、<structname>pg_db_role_setting</structname>はクラスタのすべてのデータベースにまたがって共有されます。
つまりクラスタには<structname>pg_db_role_setting</structname>のコピーは1つしかありません。
データベース毎に1つではありません。
  </para>

  <table>
<!--
   <title><structname>pg_db_role_setting</structname> Columns</title>
-->
   <title><structname>pg_db_role_setting</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>setdatabase</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the database the setting is applicable to, or zero if not database-specific
-->
この設定が適用されるデータベースのOID。データベース固有でなければゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>setrole</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the role the setting is applicable to, or zero if not role-specific
-->
この設定が適用されるロールのOID。ロール固有でなければゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>setconfig</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Defaults for run-time configuration variables
-->
実行時設定パラメータのデフォルト。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-default-acl">
  <title><structname>pg_default_acl</structname></title>

  <indexterm zone="catalog-pg-default-acl">
   <primary>pg_default_acl</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_default_acl</structname> stores initial
   privileges to be assigned to newly created objects.
-->
<structname>pg_default_acl</structname>カタログには、新規に作成されたオブジェクトに割り当てられた初期権限が格納されます。
  </para>

  <table>
<!--
   <title><structname>pg_default_acl</structname> Columns</title>
-->
   <title><structname>pg_default_acl</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>defaclrole</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the role associated with this entry
-->
この項目に関連するロールのOID。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>defaclnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace associated with this entry,
       or zero if none
-->
この項目に関連する名前空間のOID。何もない場合はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>defaclobjtype</structfield> <type>char</type>
      </para>
      <para>
<!--
       Type of object this entry is for:
       <literal>r</literal> = relation (table, view),
       <literal>S</literal> = sequence,
       <literal>f</literal> = function,
       <literal>T</literal> = type,
       <literal>n</literal> = schema
-->
この項目のオブジェクト種類。
<literal>r</literal> = リレーション(テーブル、ビュー)、<literal>S</literal> = シーケンス、<literal>f</literal> = 関数、<literal>T</literal> = 型、<literal>n</literal> = スキーマ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>defaclacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges that this type of object should have on creation
-->
この種類のオブジェクトが作成時に保持しなければならないアクセス権限。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   A <structname>pg_default_acl</structname> entry shows the initial privileges to
   be assigned to an object belonging to the indicated user.  There are
   currently two types of entry: <quote>global</quote> entries with
   <structfield>defaclnamespace</structfield> = zero, and <quote>per-schema</quote> entries
   that reference a particular schema.  If a global entry is present then
   it <emphasis>overrides</emphasis> the normal hard-wired default privileges
   for the object type.  A per-schema entry, if present, represents privileges
   to be <emphasis>added to</emphasis> the global or hard-wired default privileges.
-->
<structname>pg_default_acl</structname>の項目は、指示されたユーザに属するオブジェクトに割り当てられる初期権限を示します。
現在2種類の項目があります。
<structfield>defaclnamespace</structfield> = 0を持つ<quote>大域的</quote>な項目と特定のスキーマを参照する<quote>スキーマ単位</quote>の項目です。
大域的な項目が存在する場合、その種類のオブジェクトの通常の組み込まれたデフォルト権限を<emphasis>上書き</emphasis>します。
もしスキーマ単位の項目があれば、それは大域的な権限または組み込まれたデフォルト権限に<emphasis>追加される</emphasis>権限を表します。
  </para>

  <para>
<!--
   Note that when an ACL entry in another catalog is null, it is taken
   to represent the hard-wired default privileges for its object,
   <emphasis>not</emphasis> whatever might be in <structname>pg_default_acl</structname>
   at the moment.  <structname>pg_default_acl</structname> is only consulted during
   object creation.
-->
他のカタログ内のACL項目がNULLの場合、その時の<structname>pg_default_acl</structname>内のものでは<emphasis>ではなく</emphasis>そのオブジェクトの組み込まれたデフォルト権限を表すものが取られます。
<structname>pg_default_acl</structname>はオブジェクトの生成時のみに考慮されます。
  </para>

 </sect1>


 <sect1 id="catalog-pg-depend">
  <title><structname>pg_depend</structname></title>

  <indexterm zone="catalog-pg-depend">
   <primary>pg_depend</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_depend</structname> records the dependency
   relationships between database objects.  This information allows
   <command>DROP</command> commands to find which other objects must be dropped
   by <command>DROP CASCADE</command> or prevent dropping in the <command>DROP
   RESTRICT</command> case.
-->
<structname>pg_depend</structname>カタログは、データベースオブジェクト間の依存関係を記録します。
この情報によって<command>DROP</command>コマンドが、他のどのオブジェクトを<command>DROP CASCADE</command>で削除する必要があるか、また、<command>DROP RESTRICT</command>で削除を防止するかの場合を判断します。
  </para>

  <para>
<!--
   See also <link linkend="catalog-pg-shdepend"><structname>pg_shdepend</structname></link>,
   which performs a similar function for dependencies involving objects
   that are shared across a database cluster.
-->
<link linkend="catalog-pg-shdepend"><structname>pg_shdepend</structname></link>も参照してください。
これはデータベースクラスタ間で共有されるオブジェクトの依存関係に対する似たような機能を持っています。
  </para>

  <table>
<!--
   <title><structname>pg_depend</structname> Columns</title>
-->
   <title><structname>pg_depend</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog the dependent object is in,
       or zero for a <symbol>DEPENDENCY_PIN</symbol> entry
-->
依存するオブジェクトを含んだシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the specific dependent object,
       or zero for a <symbol>DEPENDENCY_PIN</symbol> entry
-->
特定の依存するオブジェクトのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objsubid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For a table column, this is the column number (the
       <structfield>objid</structfield> and <structfield>classid</structfield> refer to the
       table itself).  For all other object types, this column is
       zero.
-->
テーブル列の場合、これは列番号です（<structfield>objid</structfield>と<structfield>classid</structfield>はテーブル自身を参照します）。
他のすべての種類のオブジェクトでは、このフィールドはゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>refclassid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog the referenced object is in
-->
参照されるオブジェクトが存在するシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>refobjid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the specific referenced object
-->
特定の参照されるオブジェクトのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>refobjsubid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For a table column, this is the column number (the
       <structfield>refobjid</structfield> and <structfield>refclassid</structfield> refer
       to the table itself).  For all other object types, this column
       is zero.
-->
テーブル列の場合、これは列番号です（<structfield>refobjid</structfield>と<structfield>refclassid</structfield>はテーブル自身を参照します）。
他のすべての種類のオブジェクトでは、このフィールドはゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>deptype</structfield> <type>char</type>
      </para>
      <para>
<!--
       A code defining the specific semantics of this dependency relationship; see text
-->
この依存関係の特定のセマンティクスを定義するコード（後述）。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   In all cases, a <structname>pg_depend</structname> entry indicates that the
   referenced object cannot be dropped without also dropping the dependent
   object.  However, there are several subflavors identified by
   <structfield>deptype</structfield>:
-->
すべての場合において、<structname>pg_depend</structname>エントリは依存するオブジェクトも削除しない限り、参照されるオブジェクトを削除できないことを示します。
もっとも、<structfield>deptype</structfield>によって指定される以下のようないくつかのオプションもあります。

   <variablelist>
    <varlistentry>
     <term><symbol>DEPENDENCY_NORMAL</symbol> (<literal>n</literal>)</term>
     <listitem>
      <para>
<!--
       A normal relationship between separately-created objects.  The
       dependent object can be dropped without affecting the
       referenced object.  The referenced object can only be dropped
       by specifying <literal>CASCADE</literal>, in which case the dependent
       object is dropped, too.  Example: a table column has a normal
       dependency on its data type.
-->
個別に作成されたオブジェクト間の通常の関係です。
依存するオブジェクトは参照されるオブジェクトに影響を与えずに削除できます。
参照されるオブジェクトは<literal>CASCADE</literal>を指定することによってのみ削除することができます。
この場合は依存するオブジェクトも削除されます。
例：テーブルの列はそのデータ型に対して通常の依存関係を持ちます。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>DEPENDENCY_AUTO</symbol> (<literal>a</literal>)</term>
     <listitem>
      <para>
<!--
       The dependent object can be dropped separately from the
       referenced object, and should be automatically dropped
       (regardless of <literal>RESTRICT</literal> or <literal>CASCADE</literal>
       mode) if the referenced object is dropped.  Example: a named
       constraint on a table is made auto-dependent on the table, so
       that it will go away if the table is dropped.
-->
依存するオブジェクトは参照されるオブジェクトから独立して削除することができます。
そして、参照されるオブジェクトが削除される時は（<literal>RESTRICT</literal>もしくは<literal>CASCADE</literal>モードに関わりなく）依存するオブジェクトも自動的に削除されなければなりません。
例：テーブル上の名前付き制約はテーブル上に自動設定されているため、テーブルが削除されるとなくなります。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>DEPENDENCY_INTERNAL</symbol> (<literal>i</literal>)</term>
     <listitem>
      <para>
<!--
       The dependent object was created as part of creation of the
       referenced object, and is really just a part of its internal
       implementation.  A direct <command>DROP</command> of the dependent
       object will be disallowed outright (we'll tell the user to issue
       a <command>DROP</command> against the referenced object, instead).
       A <command>DROP</command> of the referenced object will result in
       automatically dropping the dependent object
       whether <literal>CASCADE</literal> is specified or not.  If the
       dependent object has to be dropped due to a dependency on some other
       object being removed, its drop is converted to a drop of the referenced
       object, so that <literal>NORMAL</literal> and <literal>AUTO</literal>
       dependencies of the dependent object behave much like they were
       dependencies of the referenced object.
       Example: a view's <literal>ON SELECT</literal> rule is made
       internally dependent on the view, preventing it from being dropped
       while the view remains.  Dependencies of the rule (such as tables it
       refers to) act as if they were dependencies of the view.
-->
依存するオブジェクトは参照されるオブジェクトの作成時に作成されたもので、実際には内部実装の一部に過ぎません。
依存するオブジェクトに対して<command>DROP</command>コマンドを直接的に実行できません
（その代わりに、参照されるオブジェクトに対して<command>DROP</command>を実行するように指示されます）。
参照されるオブジェクトに<command>DROP</command>を実行すると、<command>CASCADE</command>が指定されているかどうかに関わらず、依存するオブジェクトも削除されます。
削除されるオブジェクトへの依存関係で依存しているオブジェクトを削除しなければらない場合、その削除は参照されるオブジェクトの削除に変換されます。
ですから依存しているオブジェクトの<literal>NORMAL</literal>と<literal>AUTO</literal>依存関係は、参照されるオブジェクトの依存関係に非常に似通った振る舞いをします。
例：ビューの<literal>ON SELECT</literal>ルールがビューに依存して内部的に作られ、ビューが存在する限り削除されることを防ぎます。
ルールの依存関係（たとえばそれが参照するテーブル）はビューの依存関係であるかのように振る舞います。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>DEPENDENCY_PARTITION_PRI</symbol> (<literal>P</literal>)</term>
     <term><symbol>DEPENDENCY_PARTITION_SEC</symbol> (<literal>S</literal>)</term>
     <listitem>
      <para>
<!--
       The dependent object was created as part of creation of the
       referenced object, and is really just a part of its internal
       implementation; however, unlike <literal>INTERNAL</literal>,
       there is more than one such referenced object.  The dependent object
       must not be dropped unless at least one of these referenced objects
       is dropped; if any one is, the dependent object should be dropped
       whether or not <literal>CASCADE</literal> is specified.  Also
       unlike <literal>INTERNAL</literal>, a drop of some other object
       that the dependent object depends on does not result in automatic
       deletion of any partition-referenced object.  Hence, if the drop
       does not cascade to at least one of these objects via some other
       path, it will be refused.  (In most cases, the dependent object
       shares all its non-partition dependencies with at least one
       partition-referenced object, so that this restriction does not
       result in blocking any cascaded delete.)
       Primary and secondary partition dependencies behave identically
       except that the primary dependency is preferred for use in error
       messages; hence, a partition-dependent object should have one
       primary partition dependency and one or more secondary partition
       dependencies.
       Note that partition dependencies are made in addition to, not
       instead of, any dependencies the object would normally have.  This
       simplifies <command>ATTACH/DETACH PARTITION</command> operations:
       the partition dependencies need only be added or removed.
       Example: a child partitioned index is made partition-dependent
       on both the partition table it is on and the parent partitioned
       index, so that it goes away if either of those is dropped, but
       not otherwise.  The dependency on the parent index is primary,
       so that if the user tries to drop the child partitioned index,
       the error message will suggest dropping the parent index instead
       (not the table).
-->
依存するオブジェクトは参照されるオブジェクトの生成の一環で作成され、実際にはこれは内部的な実装の一部に過ぎません。
しかし、<literal>INTERNAL</literal>とは違って複数の参照されるオブジェクトが存在します。
参照されているオブジェクトの少なくとも１つが削除されない限り、依存するオブジェクトは削除されてはいけません。
もし参照されているオブジェクトの一つが削除されたら、<literal>CASCADE</literal>が指定されているかどうかに関わらず、依存しているオブジェクトは削除されるべきです。
また、<literal>INTERNAL</literal>とは違って、依存オブジェクトが依存しているオブジェクトを削除してもパーティション参照オブジェクトを自動的に削除することにはなりません。
ですからその削除処理によって他の経路でこれらのオブジェクトの少なくとも１つに連鎖波及しない限り、削除は拒否されます。
（たいていの場合、依存するオブジェクトはすべての非パーティション依存関係を、少なくとも１つのパーティション参照オブジェクトと共有するので、この制限によって連鎖削除をブロックすることにはなりません。）
エラーメッセージで優先的に主パーティションが使われることを除くと、主および二次パーティション依存関係は同じように振る舞います。
よって、パーティション依存オブジェクトは一つの主パーティション依存関係と1つ以上の二次パーティション依存関係を持つはずです。
パーティション依存関係は、オブジェクトが通常持っている依存関係に加えて作成されるのであり、それを置き換えるものではないことに注意してください。
これによって<command>ATTACH/DETACH PARTITION</command>操作が簡単になります。
パーティション依存関係は追加されるか削除されるかのどちらかになります。
例：子パーティション化インデックスは、それが作成されているパーティションテーブルと親パーティション化インデックスの両方にパーティション依存します。
ですから、このどちらかが削除されると削除されますが、それ以外の場合には削除されません。
親インデックスへの依存関係は主なので、ユーザが子パーティション化インデックスを削除しようとすると、エラーメッセージは（テーブルではなく）親インデックスを削除するように示唆します。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>DEPENDENCY_EXTENSION</symbol> (<literal>e</literal>)</term>
     <listitem>
      <para>
<!--
       The dependent object is a member of the <firstterm>extension</firstterm> that is
       the referenced object (see
       <link linkend="catalog-pg-extension"><structname>pg_extension</structname></link>).
       The dependent object can be dropped only via
       <link linkend="sql-dropextension"><command>DROP EXTENSION</command></link> on the referenced object.
       Functionally this dependency type acts the same as
       an <literal>INTERNAL</literal> dependency, but it's kept separate for
       clarity and to simplify <application>pg_dump</application>.
-->
依存するオブジェクトは参照されるオブジェクトの<firstterm>拡張</firstterm>のメンバです（<link linkend="catalog-pg-extension"><structname>pg_extension</structname></link>参照）。
依存するオブジェクトは参照されるオブジェクトに対する<command>DROP EXTENSION</command>経由でのみ削除することができます。
機能的にはこの種類の依存関係は<literal>INTERNAL</literal>依存関係と同様に動作しますが、明確さと<application>pg_dump</application>を単純化するために別々に保持されます。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>DEPENDENCY_AUTO_EXTENSION</symbol> (<literal>x</literal>)</term>
     <listitem>
      <para>
<!--
       The dependent object is not a member of the extension that is the
       referenced object (and so it should not be ignored
       by <application>pg_dump</application>), but it cannot function
       without the extension and should be auto-dropped if the extension is.
       The dependent object may be dropped on its own as well.
       Functionally this dependency type acts the same as
       an <literal>AUTO</literal> dependency, but it's kept separate for
       clarity and to simplify <application>pg_dump</application>.
-->
依存するオブジェクトは参照されるオブジェクトの拡張のメンバではありません（そしてそれゆえ<application>pg_dump</application>によって無視されません）が、拡張なしに機能することが出来ず、拡張自体が削除される時に自動的に削除されるでしょう。
依存するオブジェクトは、同様にそれ自身で削除されるかもしれません。
機能的にはこの種類の依存関係は<literal>AUTO</literal>依存関係と同様に動作しますが、明確さと<application>pg_dump</application>を単純化するために別々に保持されます。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>DEPENDENCY_PIN</symbol> (<literal>p</literal>)</term>
     <listitem>
      <para>
<!--
       There is no dependent object; this type of entry is a signal
       that the system itself depends on the referenced object, and so
       that object must never be deleted.  Entries of this type are
       created only by <application>initdb</application>.  The columns for the
       dependent object contain zeroes.
-->
依存するオブジェクトはありません。
この種類の項目は、参照されるオブジェクトにシステム自体が依存し、したがってオブジェクトを絶対に削除してはならないことを示します。
この種類の項目は<command>initdb</command>の実行時にのみ作成されます。
依存するオブジェクト列にはゼロが含まれます。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

<!--
   Other dependency flavors might be needed in future.
-->
将来的に、他の依存関係のオプションが必要になる可能性があります。
  </para>

  <para>
<!--
   Note that it's quite possible for two objects to be linked by more than
   one <structname>pg_depend</structname> entry.  For example, a child
   partitioned index would have both a partition-type dependency on its
   associated partition table, and an auto dependency on each column of
   that table that it indexes.  This sort of situation expresses the union
   of multiple dependency semantics.  A dependent object can be dropped
   without <literal>CASCADE</literal> if any of its dependencies satisfies
   its condition for automatic dropping.  Conversely, all the
   dependencies' restrictions about which objects must be dropped together
   must be satisfied.
-->
2つのオブジェクトが複数の<structname>pg_depend</structname>エントリでリンクされていることは十分ありえます。
たとえば子パーティション化インデックスは、パーティションテーブルに対してパーティション型依存関係を持ち、更にインデックスが貼ってあるテーブルの列に自動依存関係を持ちます。
この種の状況は、複数の依存関係セマンティクスの和で表現されます。
自動削除の条件をこの依存関係の一つが満たすならば依存するオブジェクトは<literal>CASCADE</literal>なしに削除できます。
逆に、どのオブジェクトが一緒に削除されなければならないかに関するすべての依存関係の制限は満足されなければなりません。
  </para>

 </sect1>


 <sect1 id="catalog-pg-description">
  <title><structname>pg_description</structname></title>

  <indexterm zone="catalog-pg-description">
   <primary>pg_description</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_description</structname> stores optional descriptions
   (comments) for each database object.  Descriptions can be manipulated
   with the <link linkend="sql-comment"><command>COMMENT</command></link> command and viewed with
   <application>psql</application>'s <literal>\d</literal> commands.
   Descriptions of many built-in system objects are provided in the initial
   contents of <structname>pg_description</structname>.
-->
各データベースオブジェクトに対して付けられたオプションの補足説明（コメント）は<structname>pg_description</structname>カタログに格納されます。
補足説明は<xref linkend="sql-comment"/>コマンドで編集でき、<application>psql</application>の<literal>\d</literal>コマンドで表示できます。
多くの組み込み型のシステムオブジェクトの説明は、<structname>pg_description</structname>の最初の部分で提供されています。
  </para>

  <para>
<!--
   See also <link linkend="catalog-pg-shdescription"><structname>pg_shdescription</structname></link>,
   which performs a similar function for descriptions involving objects that
   are shared across a database cluster.
-->
<link linkend="catalog-pg-shdescription"><structname>pg_shdescription</structname></link>も参照してください。
こちらは、データベースクラスタに渡って共有されるオブジェクトに関する説明について、同様の機能を行います。
  </para>

  <table>
<!--
   <title><structname>pg_description</structname> Columns</title>
-->
   <title><structname>pg_description</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objoid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the object this description pertains to
-->
この補足説明が属するオブジェクトのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog this object appears in
-->
このオブジェクトが現れるシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objsubid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For a comment on a table column, this is the column number (the
       <structfield>objoid</structfield> and <structfield>classoid</structfield> refer to
       the table itself).  For all other object types, this column is
       zero.
-->
テーブル列についてのコメントの場合、これは列の（<structfield>objoid</structfield>もしくは<structfield>classoid</structfield>はテーブル自身を参照します）列番号です。
他のすべての種類のオブジェクトでは、このフィールドはゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>description</structfield> <type>text</type>
      </para>
      <para>
<!--
       Arbitrary text that serves as the description of this object
-->
このオブジェクトの説明となる任意のテキスト
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>


 <sect1 id="catalog-pg-enum">
  <title><structname>pg_enum</structname></title>

  <indexterm zone="catalog-pg-enum">
   <primary>pg_enum</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_enum</structname> catalog contains entries
   showing the values and labels for each enum type. The
   internal representation of a given enum value is actually the OID
   of its associated row in <structname>pg_enum</structname>.
-->
<structname>pg_enum</structname>カタログは、各列挙型についてその値とラベルを示す項目を含みます。
ある与えられた列挙値の内部表現は、実際には<structname>pg_enum</structname>内の関連付けられた行のOIDです。
  </para>

  <table>
<!--
   <title><structname>pg_enum</structname> Columns</title>
-->
   <title><structname>pg_enum</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>enumtypid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the <link linkend="catalog-pg-type"><structname>pg_type</structname></link> entry owning this enum value
-->
この列挙値を所有している<structname>pg_type</structname>項目のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>enumsortorder</structfield> <type>float4</type>
      </para>
      <para>
<!--
       The sort position of this enum value within its enum type
-->
列挙型におけるこの列挙値のソート位置
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>enumlabel</structfield> <type>name</type>
      </para>
      <para>
<!--
       The textual label for this enum value
-->
この列挙値のテキストラベル
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The OIDs for <structname>pg_enum</structname> rows follow a special
   rule: even-numbered OIDs are guaranteed to be ordered in the same way
   as the sort ordering of their enum type.  That is, if two even OIDs
   belong to the same enum type, the smaller OID must have the smaller
   <structfield>enumsortorder</structfield> value.  Odd-numbered OID values
   need bear no relationship to the sort order.  This rule allows the
   enum comparison routines to avoid catalog lookups in many common cases.
   The routines that create and alter enum types attempt to assign even
   OIDs to enum values whenever possible.
-->
<structname>pg_enum</structname>行のOIDは次のような特別な規則に従います。
列挙型のソート順序と同じ順序で並んだ偶数のOIDが保証されています。
つまり、２つの偶数のOIDが同じ列挙型に属する場合、OIDの小さい方がより小さい<structfield>enumsortorder</structfield>値を持たなければなりません。
奇数のOID値はソート順序に関連を持ってはなりません。
この規則により列挙の比較処理は多くの一般的な場合でカタログの検索を防ぐことができます。
列挙型の作成および変更を行う処理は、可能であれば偶数のOIDを列挙値に割り当てようとします。
  </para>

  <para>
<!--
   When an enum type is created, its members are assigned sort-order
   positions 1..<replaceable>n</replaceable>.  But members added later might be given
   negative or fractional values of <structfield>enumsortorder</structfield>.
   The only requirement on these values is that they be correctly
   ordered and unique within each enum type.
-->
列挙型を作成する時、そのメンバには1..<replaceable>n</replaceable>のソート順位置が割り当てられます。
しかし後で追加されたメンバには負もしくは<structfield>enumsortorder</structfield>の小数値が与えられる可能性があります。
これらの値の要件は、各列挙型の中で正しく順序付けされ、かつ一意であることだけです。
  </para>
 </sect1>


 <sect1 id="catalog-pg-event-trigger">
  <title><structname>pg_event_trigger</structname></title>

  <indexterm zone="catalog-pg-event-trigger">
   <primary>pg_event_trigger</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_event_trigger</structname> stores event triggers.
   See <xref linkend="event-triggers"/> for more information.
-->
<structname>pg_event_trigger</structname>カタログはイベントトリガを格納します。
詳細は<xref linkend="event-triggers"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_event_trigger</structname> Columns</title>
-->
   <title><structname>pg_event_trigger</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>evtname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Trigger name (must be unique)
-->
トリガ名（一意でなければなりません）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>evtevent</structfield> <type>name</type>
      </para>
      <para>
<!--
       Identifies the event for which this trigger fires
-->
このトリガが発行する対象のイベントを識別します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>evtowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the event trigger
-->
イベントトリガの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>evtfoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The function to be called
-->
呼び出される関数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>evtenabled</structfield> <type>char</type>
      </para>
      <para>
<!--
       Controls in which <xref linkend="guc-session-replication-role"/> modes
       the event trigger fires.
       <literal>O</literal> = trigger fires in <quote>origin</quote> and <quote>local</quote> modes,
       <literal>D</literal> = trigger is disabled,
       <literal>R</literal> = trigger fires in <quote>replica</quote> mode,
       <literal>A</literal> = trigger fires always.
-->
どの<xref linkend="guc-session-replication-role"/> モードでこのイベントトリガを発行するかを制御します。
<literal>O</literal>では、トリガは<quote>origin</quote>および<quote>local</quote> モードで発行します。
<literal>D</literal>では、トリガは無効です。
<literal>R</literal> では、トリガは<quote>replica</quote>モードで発行します。
<literal>A</literal>では、トリガは常に発行します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>evttags</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Command tags for which this trigger will fire.  If NULL, the firing
       of this trigger is not restricted on the basis of the command tag.
-->
このトリガを発行するコマンドタグです。 NULLの場合、このトリガの発行はコマンドタグに基づいて制限されていません。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-extension">
  <title><structname>pg_extension</structname></title>

  <indexterm zone="catalog-pg-extension">
   <primary>pg_extension</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_extension</structname> stores information
   about the installed extensions.  See <xref linkend="extend-extensions"/>
   for details about extensions.
-->
<structname>pg_extension</structname>カタログにはインストールされた拡張に関する情報が格納されます。
拡張の詳細については<xref linkend="extend-extensions"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_extension</structname> Columns</title>
-->
   <title><structname>pg_extension</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>extname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the extension
-->
拡張の名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>extowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the extension
-->
拡張の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>extnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Schema containing the extension's exported objects
-->
拡張が提供するオブジェクトを含むスキーマ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>extrelocatable</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if extension can be relocated to another schema
-->
拡張が他のスキーマに再配置可能である場合真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>extversion</structfield> <type>text</type>
      </para>
      <para>
<!--
       Version name for the extension
-->
拡張のバージョン名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>extconfig</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Array of <type>regclass</type> OIDs for the extension's configuration
       table(s), or <literal>NULL</literal> if none
-->
拡張の設定テーブルの<type>regclass</type> OIDの配列。なければ<literal>NULL</literal>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>extcondition</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Array of <literal>WHERE</literal>-clause filter conditions for the
       extension's configuration table(s), or <literal>NULL</literal> if none
-->
拡張の設定テーブル用の<literal>WHERE</literal>句フィルタ条件の配列。なければ<literal>NULL</literal>
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Note that unlike most catalogs with a <quote>namespace</quote> column,
   <structfield>extnamespace</structfield> is not meant to imply
   that the extension belongs to that schema.  Extension names are never
   schema-qualified.  Rather, <structfield>extnamespace</structfield>
   indicates the schema that contains most or all of the extension's
   objects.  If <structfield>extrelocatable</structfield> is true, then
   this schema must in fact contain all schema-qualifiable objects
   belonging to the extension.
-->
ほとんどの<quote>名前空間</quote>に関する列を持つカタログと異なり、<structfield>extnamespace</structfield>は、拡張がそのスキーマに属することを意図したものではありません。
拡張の名前は決してスキーマで修飾されません。
<structfield>extnamespace</structfield>は、拡張のオブジェクトのすべて、あるいは、ほとんどを含むスキーマを示します。
<structfield>extrelocatable</structfield>が真の場合、このスキーマは拡張に属するすべてのスキーマ修飾可能なオブジェクトを含まなければなりません。
  </para>
 </sect1>


 <sect1 id="catalog-pg-foreign-data-wrapper">
  <title><structname>pg_foreign_data_wrapper</structname></title>

  <indexterm zone="catalog-pg-foreign-data-wrapper">
   <primary>pg_foreign_data_wrapper</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_foreign_data_wrapper</structname> stores
   foreign-data wrapper definitions.  A foreign-data wrapper is the
   mechanism by which external data, residing on foreign servers, is
   accessed.
-->
<structname>pg_foreign_data_wrapper</structname>カタログは外部データラッパの定義を保存します。
外部データラッパは外部サーバにあるデータにアクセスするための機構です。
  </para>

  <table>
<!--
   <title><structname>pg_foreign_data_wrapper</structname> Columns</title>
-->
   <title><structname>pg_foreign_data_wrapper</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>fdwname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the foreign-data wrapper
-->
外部データラッパの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>fdwowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the foreign-data wrapper
-->
外部データラッパの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>fdwhandler</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       References a handler function that is responsible for
       supplying execution routines for the foreign-data wrapper.
       Zero if no handler is provided
-->
外部データラッパに対する実行関数の提供に責任を持つハンドラ関数への参照。
ハンドラ関数がない場合はゼロになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>fdwvalidator</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       References a validator function that is responsible for
       checking the validity of the options given to the
       foreign-data wrapper, as well as options for foreign servers and user
       mappings using the foreign-data wrapper.  Zero if no validator
       is provided
-->
外部サーバや外部データラッパを使用するユーザマップと同様に外部データラッパに対して与えられたオプションの正当性を検査する有効性検証関数。
有効性検証関数がない場合はゼロになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>fdwacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>fdwoptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Foreign-data wrapper specific options, as <quote>keyword=value</quote> strings
-->
外部データラッパの<quote>keyword=value</quote>のような特定のオプション。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-foreign-server">
  <title><structname>pg_foreign_server</structname></title>

  <indexterm zone="catalog-pg-foreign-server">
   <primary>pg_foreign_server</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_foreign_server</structname> stores
   foreign server definitions.  A foreign server describes a source
   of external data, such as a remote server.  Foreign
   servers are accessed via foreign-data wrappers.
-->
<structname>pg_foreign_server</structname>カタログは外部サーバの定義を保存します。
外部サーバはリモートサーバなど外部データの源を記述します。
外部サーバは外部データラッパを介してアクセスされます。
  </para>

  <table>
<!--
   <title><structname>pg_foreign_server</structname> Columns</title>
-->
   <title><structname>pg_foreign_server</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the foreign server
-->
外部サーバの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the foreign server
-->
外部サーバの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvfdw</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-foreign-data-wrapper"><structname>pg_foreign_data_wrapper</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the foreign-data wrapper of this foreign server
-->
外部サーバの外部データラッパのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvtype</structfield> <type>text</type>
      </para>
      <para>
<!--
       Type of the server (optional)
-->
サーバの型 (オプション)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvversion</structfield> <type>text</type>
      </para>
      <para>
<!--
       Version of the server (optional)
-->
サーバのバージョン (オプション)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvoptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Foreign server specific options, as <quote>keyword=value</quote> strings
-->
外部サーバの<quote>keyword=value</quote>のような特定のオプション。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-foreign-table">
  <title><structname>pg_foreign_table</structname></title>

  <indexterm zone="catalog-pg-foreign-table">
   <primary>pg_foreign_table</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_foreign_table</structname> contains
   auxiliary information about foreign tables.  A foreign table is
   primarily represented by a
   <link linkend="catalog-pg-class"><structname>pg_class</structname></link>
   entry, just like a regular table.  Its <structname>pg_foreign_table</structname>
   entry contains the information that is pertinent only to foreign tables
   and not any other kind of relation.
-->
<structname>pg_foreign_table</structname>カタログには、外部テーブルに関する補助情報が含まれます。
外部テーブルは主に<structname>pg_class</structname>の項目により表されます。
<structname>pg_foreign_table</structname>の項目には、外部テーブルに属する情報のみに関する情報が含まれ、他の種類のリレーションは含まれません。
  </para>

  <table>
<!--
   <title><structname>pg_foreign_table</structname> Columns</title>
-->
   <title><structname>pg_foreign_table</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ftrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the <link linkend="catalog-pg-class"><structname>pg_class</structname></link> entry for this foreign table
-->
この外部テーブルに対する<structname>pg_class</structname>項目のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ftserver</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-foreign-server"><structname>pg_foreign_server</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the foreign server for this foreign table
-->
この外部テーブルに対する外部サーバOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ftoptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Foreign table options, as <quote>keyword=value</quote> strings
-->
<quote>keyword=value</quote>文字列のような、外部テーブルのオプション
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-index">
  <title><structname>pg_index</structname></title>

  <indexterm zone="catalog-pg-index">
   <primary>pg_index</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_index</structname> contains part of the information
   about indexes.  The rest is mostly in
   <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.
-->
<structname>pg_index</structname>カタログはインデックス情報の一部を保持します。
その他のほとんどの情報は<structname>pg_class</structname>にあります。
  </para>

  <table>
<!--
   <title><structname>pg_index</structname> Columns</title>
-->
   <title><structname>pg_index</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indexrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the <link linkend="catalog-pg-class"><structname>pg_class</structname></link> entry for this index
-->
このインデックスに対する<structname>pg_class</structname>項目のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the <link linkend="catalog-pg-class"><structname>pg_class</structname></link> entry for the table this index is for
-->
このインデックスが使われるテーブルに対する<structname>pg_class</structname>項目のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indnatts</structfield> <type>int2</type>
      </para>
      <para>
<!--
       The total number of columns in the index (duplicates
       <literal>pg_class.relnatts</literal>); this number includes both key and included attributes
-->
インデックス内の列数（<literal>pg_class.relnatts</literal>の複製）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indnkeyatts</structfield> <type>int2</type>
      </para>
      <para>
<!--
       The number of <firstterm>key columns</firstterm> in the index,
       not counting any <firstterm>included columns</firstterm>, which are
       merely stored and do not participate in the index semantics
-->
格納されているだけで、インデックスのセマンティクスに寄与していない<firstterm>included columns</firstterm>を含まないインデックス内の<firstterm>key columns</firstterm>の数。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indisunique</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, this is a unique index
-->
真の場合は一意性インデックス
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indisprimary</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, this index represents the primary key of the table
       (<structfield>indisunique</structfield> should always be true when this is true)
-->
真の場合このインデックスはテーブルの主キーを表します
（この値が真の時<structfield>indisunique</structfield>は常に真でなければなりません）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indisexclusion</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, this index supports an exclusion constraint
-->
真の場合、このインデックスは排他制約をサポートします。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indimmediate</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, the uniqueness check is enforced immediately on
       insertion
       (irrelevant if <structfield>indisunique</structfield> is not true)
-->
真の場合、一意性検査が挿入時即座に強制されます。
(<structfield>indisunique</structfield>が真でなければ無関係です。)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indisclustered</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, the table was last clustered on this index
-->
真の場合、前回このインデックスを元にテーブルはクラスタ化されました。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indisvalid</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, the index is currently valid for queries.  False means the
       index is possibly incomplete: it must still be modified by
       <link linkend="sql-insert"><command>INSERT</command></link>/<link linkend="sql-update"><command>UPDATE</command></link> operations, but it cannot safely
       be used for queries. If it is unique, the uniqueness property is not
       guaranteed true either.
-->
真の場合、現在このインデックスは問い合わせに対して有効です。
偽は、インデックスが不完全かもしれないことを意味します。
<command>INSERT</command>/<command>UPDATE</command>操作による変更が行われているはずで、問い合わせに使用するには安全ではありません。
一意性インデックスであれば、一意性も保証されません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indcheckxmin</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, queries must not use the index until the <structfield>xmin</structfield>
       of this <structname>pg_index</structname> row is below their <symbol>TransactionXmin</symbol>
       event horizon, because the table may contain broken HOT chains with
       incompatible rows that they can see
-->
真の場合、<structname>pg_index</structname>行の<structfield>xmin</structfield>が<symbol>TransactionXmin</symbol>イベント境界値を下回るまで、問い合わせはインデックスを使用してはいけません。
なぜなら、テーブルは互換性の無い行と共に破壊されたHOTチェインを含み、それらが可視であるかもしれないからです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indisready</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, the index is currently ready for inserts.  False means the
       index must be ignored by <link linkend="sql-insert"><command>INSERT</command></link>/<link linkend="sql-update"><command>UPDATE</command></link>
       operations.
-->
真の場合、インデックスは挿入に対する準備ができています。
偽の場合はインデックスは<command>INSERT</command>/<command>UPDATE</command>操作により無視されなければならないことを意味します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indislive</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If false, the index is in process of being dropped, and should be
       ignored for all purposes (including HOT-safety decisions)
-->
偽の場合、インデックスの削除処理が進行中であり、このためすべての目的において（HOT安全性の決定を含む）無視しなければなりません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indisreplident</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true this index has been chosen as <quote>replica identity</quote>
       using <link linkend="sql-altertable-replica-identity"><command>ALTER TABLE ...
       REPLICA IDENTITY USING INDEX ...</command></link>
-->
真の場合、このインデックスは<command>ALTER TABLE ... REPLICA IDENTITY USING INDEX ...</command>を用いて<quote>replica identity</quote>が選択されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indkey</structfield> <type>int2vector</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attnum</structfield>)
      </para>
      <para>
<!--
       This is an array of <structfield>indnatts</structfield> values that
       indicate which table columns this index indexes.  For example a value
       of <literal>1 3</literal> would mean that the first and the third table
       columns make up the index entries.  Key columns come before non-key
       (included) columns.  A zero in this array indicates that the
       corresponding index attribute is an expression over the table columns,
       rather than a simple column reference.
-->
このインデックスがどのテーブル列をインデックスとしているかを示す<structfield>indnatts</structfield>配列の値です。
例えば、<literal>1 3</literal>は1番目と3番目のテーブル列がインデックスキーとなっていることを示します。
キー列は、（INCLUDE句で指定した）非キー列の前に来ます。
この配列でゼロとなっているのは対応するインデックスの属性が単純な列参照ではなくテーブル列に渡った演算式であることを示します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indcollation</structfield> <type>oidvector</type>
       (references <link linkend="catalog-pg-collation"><structname>pg_collation</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       For each column in the index key
       (<structfield>indnkeyatts</structfield> values), this contains the OID
       of the collation to use for the index, or zero if the column is not of
       a collatable data type.
-->
インデックスキー（<structfield>indnkeyatts</structfield>の値）内の各列に関してここにはインデックスで使用される照合順序のOIDが含まれます。
照合できないデータ型の列ではゼロが入ります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indclass</structfield> <type>oidvector</type>
       (references <link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       For each column in the index key
       (<structfield>indnkeyatts</structfield> values), this contains the OID
       of the operator class to use.  See
       <link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link> for details.
-->
インデックスキー（<structfield>indnkeyatts</structfield>の値）内のそれぞれの列に対して、使用する演算子クラスのOIDを保持します。
<link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indoption</structfield> <type>int2vector</type>
      </para>
      <para>
<!--
       This is an array of <structfield>indnkeyatts</structfield> values that
       store per-column flag bits.  The meaning of the bits is defined by
       the index's access method.
-->
列毎のフラグビットを格納する<structfield>indnkeyatts</structfield>値の配列です。
ビットの意味はインデックスのアクセスメソッドによって定義されています。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indexprs</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       Expression trees (in <function>nodeToString()</function>
       representation) for index attributes that are not simple column
       references.  This is a list with one element for each zero
       entry in <structfield>indkey</structfield>.  Null if all index attributes
       are simple references.
-->
単純な列参照でないインデックス属性の（<function>nodeToString()</function>表現による）演算式ツリー。
<structfield>indkey</structfield>がゼロの各エントリについて1つの要素があるリストになっています。
すべてのインデックス属性が単純な参照ならNULLとなります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indpred</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       Expression tree (in <function>nodeToString()</function>
       representation) for partial index predicate.  Null if not a
       partial index.
-->
部分インデックス属性の（<function>nodeToString()</function>表現による）演算式ツリー。
部分インデックスでなければNULL。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>


 <sect1 id="catalog-pg-inherits">
  <title><structname>pg_inherits</structname></title>

  <indexterm zone="catalog-pg-inherits">
   <primary>pg_inherits</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_inherits</structname> records information about
   table and index inheritance hierarchies.  There is one entry for each direct
   parent-child table or index relationship in the database.  (Indirect
   inheritance can be determined by following chains of entries.)
-->
<structname>pg_inherits</structname>カタログはテーブルとインデックスの継承階層の情報を記録します。
データベース内の、それぞれの直接の親子テーブルあるいはインデックス関係に対して1つの記述があります（直接ではない継承は、記述の連鎖から決定されます）。
  </para>

  <table>
<!--
   <title><structname>pg_inherits</structname> Columns</title>
-->
   <title><structname>pg_inherits</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>inhrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the child table or index
-->
子テーブルあるいはインデックスのOID。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>inhparent</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the parent table or index
-->
親テーブルあるいはインデックスのOID。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>inhseqno</structfield> <type>int4</type>
      </para>
      <para>
<!--
       If there is more than one direct parent for a child table (multiple
       inheritance), this number tells the order in which the
       inherited columns are to be arranged.  The count starts at 1.
-->
子テーブルの直接の親が複数あるとき（多重継承）、この数は継承列を整える順序を導きます。
1から数えます。
      </para>
      <para>
<!--
       Indexes cannot have multiple inheritance, since they can only inherit
       when using declarative partitioning.
-->
インデックスは多重継承できません。宣言的パーティショニングを使用する際にしか継承できないからです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>inhdetachpending</structfield> <type>bool</type>
      </para>
      <para>
       <literal>true</literal> for a partition that is in the process of
       being detached; <literal>false</literal> otherwise.
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="catalog-pg-init-privs">
  <title><structname>pg_init_privs</structname></title>

  <indexterm zone="catalog-pg-init-privs">
   <primary>pg_init_privs</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_init_privs</structname> records information about
   the initial privileges of objects in the system.  There is one entry
   for each object in the database which has a non-default (non-NULL)
   initial set of privileges.
-->
<structname>pg_init_privs</structname>カタログは、システム内のオブジェクトの初期権限についての情報を記録します。
データベース内の初期権限のセットがデフォルトでない（NULLでない）オブジェクトごとに1つの記述があります。
  </para>

  <para>
<!--
   Objects can have initial privileges either by having those privileges set
   when the system is initialized (by <application>initdb</application>) or when the
   object is created during a <link linkend="sql-createextension"><command>CREATE EXTENSION</command></link> and the
   extension script sets initial privileges using the <link linkend="sql-grant"><command>GRANT</command></link>
   system.  Note that the system will automatically handle recording of the
   privileges during the extension script and that extension authors need
   only use the <command>GRANT</command> and <command>REVOKE</command>
   statements in their script to have the privileges recorded.  The
   <literal>privtype</literal> column indicates if the initial privilege was
   set by <application>initdb</application> or during a
   <command>CREATE EXTENSION</command> command.
-->
オブジェクトは、システムが（<application>initdb</application>によって）初期化された時、またはオブジェクトが<command>CREATE EXTENSION</command>の実行中に作成され、拡張スクリプトが<command>GRANT</command>コマンドを使用して初期権限をシステムにセットする時に初期権限を持つことができます。
システムは、拡張スクリプトの実行中に権限の記録を自動的に処理することや、拡張作成者が権限を記録させるためにスクリプトの中で<command>GRANT</command>と<command>REVOKE</command>ステートメントの使用のみを必要とすることに注意してください。
<literal>privtype</literal>列は、初期権限が<application>initdb</application>によって設定されたか、もしくは<command>CREATE EXTENSION</command>コマンド実行中に設定されたかを表示します。
  </para>

  <para>
<!--
   Objects which have initial privileges set by <application>initdb</application> will
   have entries where <literal>privtype</literal> is
   <literal>'i'</literal>, while objects which have initial privileges set
   by <command>CREATE EXTENSION</command> will have entries where
   <literal>privtype</literal> is <literal>'e'</literal>.
-->
<application>initdb</application>によって設定された初期権限を持つオブジェクトは、<literal>privtype</literal>が<literal>'i'</literal>で、<command>CREATE EXTENSION</command>によって設定された初期権限を持つオブジェクトは、<literal>privtype</literal>が<literal>'e'</literal>になります。
  </para>

  <table>
<!--
   <title><structname>pg_init_privs</structname> Columns</title>
-->
   <title><structname>pg_init_privs</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objoid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the specific object
-->
特定のオブジェクトのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog the object is in
-->
オブジェクトが存在するシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objsubid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For a table column, this is the column number (the
       <structfield>objoid</structfield> and <structfield>classoid</structfield> refer to the
       table itself).  For all other object types, this column is
       zero.
-->
テーブル列においては、列番号です（<structfield>objoid</structfield>と<structfield>classoid</structfield>はテーブル自身を参照します）。
その他すべてのオブジェクト型においては、この列はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>privtype</structfield> <type>char</type>
      </para>
      <para>
<!--
       A code defining the type of initial privilege of this object; see text
-->
オブジェクトの初期権限の型を設定しているコード。
テキストを参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>initprivs</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       The initial access privileges; see
       <xref linkend="ddl-priv"/> for details
-->
初期アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>


 <sect1 id="catalog-pg-language">
  <title><structname>pg_language</structname></title>

  <indexterm zone="catalog-pg-language">
   <primary>pg_language</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_language</structname> registers
   languages in which you can write functions or stored procedures.
   See <xref linkend="sql-createlanguage"/>
   and <xref linkend="xplang"/> for more information about language handlers.
-->
<structname>pg_language</structname>カタログはユーザ定義関数やストアドプロシージャを作成することができる言語を登録します。
言語ハンドラの詳細は<xref linkend="sql-createlanguage"/>と<xref linkend="xplang"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_language</structname> Columns</title>
-->
   <title><structname>pg_language</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lanname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the language
-->
言語名称
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lanowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the language
-->
言語の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lanispl</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This is false for internal languages (such as
       <acronym>SQL</acronym>) and true for user-defined languages.
       Currently, <application>pg_dump</application> still uses this
       to determine which languages need to be dumped, but this might be
       replaced by a different mechanism in the future.
-->
（<acronym>SQL</acronym>のような）内蔵言語ではfalseで、ユーザ定義言語ではtrueです。
現在、<application>pg_dump</application>ではどの言語がダンプされる必要があるかを特定するためにこれを利用していますが、近い将来に異なるメカニズムによって置き換わる可能性があります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lanpltrusted</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this is a trusted language, which means that it is believed
       not to grant access to anything outside the normal SQL execution
       environment.  Only superusers can create functions in untrusted
       languages.
-->
信頼できる言語の場合はtrueです。
信頼できる言語とは、通常のSQL実行環境の外側にある、いかなる言語へのアクセス許可も付与されていないと信用できる言語です。
スーパーユーザのみが信頼されない言語で関数を作成することができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lanplcallfoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       For noninternal languages this references the language
       handler, which is a special function that is responsible for
       executing all functions that are written in the particular
       language. Zero for internal languages.
-->
非内蔵言語用の、言語ハンドラを参照します。
これは、この言語で記述されたすべての関数を実行するための責任を持つ特別な関数です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>laninline</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       This references a function that is responsible for executing
       <quote>inline</quote> anonymous code blocks
       (<xref linkend="sql-do"/> blocks).
       Zero if inline blocks are not supported.
-->
これは<quote>インライン</quote>匿名コードブロック(<xref linkend="sql-do"/>ブロック)の実行に責任を持つ関数を参照します。
インラインブロックをサポートしない場合はゼロ。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lanvalidator</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       This references a language validator function that is responsible
       for checking the syntax and validity of new functions when they
       are created.  Zero if no validator is provided.
-->
これは、新しい関数が作成された時に構文や有効性の検査を引き受ける言語有効性検査関数を参照します。
有効性検査関数がない場合はゼロになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lanacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>


 <sect1 id="catalog-pg-largeobject">
  <title><structname>pg_largeobject</structname></title>

  <indexterm zone="catalog-pg-largeobject">
   <primary>pg_largeobject</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_largeobject</structname> holds the data making up
   <quote>large objects</quote>.  A large object is identified by an OID
   assigned when it is created.  Each large object is broken into
   segments or <quote>pages</quote> small enough to be conveniently stored as rows
   in <structname>pg_largeobject</structname>.
   The amount of data per page is defined to be <symbol>LOBLKSIZE</symbol> (which is currently
   <literal>BLCKSZ/4</literal>, or typically 2 kB).
-->
<structname>pg_largeobject</structname>カタログは<quote>ラージオブジェクト</quote>を構築するデータを保持します。
ラージオブジェクトは作成された時に割り当てられたOIDで識別されます。
それぞれのラージオブジェクトは<structname>pg_largeobject</structname>の行に都合良く格納されるのに十分に足る小さなセグメント、もしくは<quote>ページ</quote>に分割されます。
ページごとのデータ量は（現在<literal>BLCKSZ/4</literal>あるいは典型的に2キロバイトの）<symbol>LOBLKSIZE</symbol>として定義されます。
  </para>

  <para>
<!--
   Prior to <productname>PostgreSQL</productname> 9.0, there was no permission structure
   associated with large objects.  As a result,
   <structname>pg_largeobject</structname> was publicly readable and could be
   used to obtain the OIDs (and contents) of all large objects in the system.
   This is no longer the case; use
   <link linkend="catalog-pg-largeobject-metadata"><structname>pg_largeobject_metadata</structname></link>
   to obtain a list of large object OIDs.
-->
<productname>PostgreSQL</productname> 9.0より前までは、ラージオブジェクトに関連した権限構造はありませんでした。
その結果<structname>pg_largeobject</structname>は可読性が高いもので、システム内のすべてのラージオブジェクトのOIDを入手するために使用することができました。
これはもはや当てはまりません。
ラージオブジェクトのOIDのリストを入手するためには<link linkend="catalog-pg-largeobject-metadata"><structname>pg_largeobject_metadata</structname></link>を使用してください。
  </para>

  <table>
<!--
   <title><structname>pg_largeobject</structname> Columns</title>
-->
   <title><structname>pg_largeobject</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>loid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-largeobject-metadata"><structname>pg_largeobject_metadata</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Identifier of the large object that includes this page
-->
このページを含んだラージオブジェクトの識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pageno</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Page number of this page within its large object
       (counting from zero)
-->
ラージオブジェクト内の（ゼロから数えた）このページのページ番号
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data</structfield> <type>bytea</type>
      </para>
      <para>
<!--
       Actual data stored in the large object.
       This will never be more than <symbol>LOBLKSIZE</symbol> bytes and might be less.
-->
ラージオブジェクト内に保存された実データ。
<symbol>LOBLKSIZE</symbol>バイトを絶対上回りません。
たぶんそれより小さいでしょう。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Each row of <structname>pg_largeobject</structname> holds data
   for one page of a large object, beginning at
   byte offset (<literal>pageno * LOBLKSIZE</literal>) within the object.  The implementation
   allows sparse storage: pages might be missing, and might be shorter than
   <literal>LOBLKSIZE</literal> bytes even if they are not the last page of the object.
   Missing regions within a large object read as zeroes.
-->
<structname>pg_largeobject</structname>のそれぞれの行はオブジェクト内のバイトオフセット（<literal>pageno * LOBLKSIZE</literal>）から始まるラージオブジェクトの1ページ分のデータを保持します。
ページが見つからなかったり、たとえオブジェクトの最後のページでない場合でも<literal>LOBLKSIZE</literal>より小さくてもよいといった、あちこちに散らばって保存されてもよいような実装になっています。
ラージオブジェクトの中で見つからない部分はゼロとして読み込まれます。
  </para>

 </sect1>

 <sect1 id="catalog-pg-largeobject-metadata">
  <title><structname>pg_largeobject_metadata</structname></title>

  <indexterm zone="catalog-pg-largeobject-metadata">
   <primary>pg_largeobject_metadata</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_largeobject_metadata</structname>
   holds metadata associated with large objects.  The actual large object
   data is stored in
   <link linkend="catalog-pg-largeobject"><structname>pg_largeobject</structname></link>.
-->
<structname>pg_largeobject_metadata</structname>はラージオブジェクトに関連したメタデータを保持します。
実際のラージオブジェクトデータは<link linkend="catalog-pg-largeobject"><structname>pg_largeobject</structname></link>に格納されます。
  </para>

  <table>
<!--
   <title><structname>pg_largeobject_metadata</structname> Columns</title>
-->
   <title><structname>pg_largeobject_metadata</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lomowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the large object
-->
ラージオブジェクトの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>lomacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-namespace">
  <title><structname>pg_namespace</structname></title>

  <indexterm zone="catalog-pg-namespace">
   <primary>pg_namespace</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_namespace</structname> stores namespaces.
   A namespace is the structure underlying SQL schemas: each namespace
   can have a separate collection of relations, types, etc. without name
   conflicts.
-->
<structname>pg_namespace</structname>カタログは名前空間を保存します。
名前空間はSQLスキーマの裏にある構造です。
それぞれの名前空間は、リレーション、型などの集合を、名前が競合することなく、個別に持ちます。
  </para>

  <table>
<!--
   <title><structname>pg_namespace</structname> Columns</title>
-->
   <title><structname>pg_namespace</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>nspname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the namespace
-->
名前空間の名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>nspowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the namespace
-->
名前空間の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>nspacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>


 <sect1 id="catalog-pg-opclass">
  <title><structname>pg_opclass</structname></title>

  <indexterm zone="catalog-pg-opclass">
   <primary>pg_opclass</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_opclass</structname> defines
   index access method operator classes.  Each operator class defines
   semantics for index columns of a particular data type and a particular
   index access method.  An operator class essentially specifies that a
   particular operator family is applicable to a particular indexable column
   data type.  The set of operators from the family that are actually usable
   with the indexed column are whichever ones accept the column's data type
   as their left-hand input.
-->
<structname>pg_opclass</structname>カタログはインデックスアクセスメソッド演算子クラスを定義します。
それぞれの演算子クラスは特定のデータ型のインデックス列のセマンティクスと特定のインデックスアクセスメソッドを定義します。
演算子クラスは、ある特定の演算子族は特定のインデックス可能な列データの型に対して適用できる、ということを本質的に特定します。
インデックス付けされた列を実際に使用可能な演算子族の演算子群は、その列のデータ型を左辺の入力として受け付けます。
  </para>

  <para>
<!--
   Operator classes are described at length in <xref linkend="xindex"/>.
-->
   演算子クラスについては<xref linkend="xindex"/>に詳細に説明されています。
  </para>

  <table>
<!--
   <title><structname>pg_opclass</structname> Columns</title>
-->
   <title><structname>pg_opclass</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opcmethod</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-am"><structname>pg_am</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Index access method operator class is for
-->
対象のインデックスアクセスメソッド演算子クラス
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opcname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of this operator class
-->
この演算子クラスの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opcnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Namespace of this operator class
-->
この演算子クラスの名前空間
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opcowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the operator class
-->
演算子クラスの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opcfamily</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-opfamily"><structname>pg_opfamily</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Operator family containing the operator class
-->
演算子クラスを含んでいる演算子族
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opcintype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Data type that the operator class indexes
-->
演算子クラスがインデックスを作成するデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opcdefault</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this operator class is the default for <structfield>opcintype</structfield>
-->
演算子クラスが<structfield>opcintype</structfield>のデフォルトである場合は真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opckeytype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Type of data stored in index, or zero if same as <structfield>opcintype</structfield>
-->
インデックス内に格納されているデータ型。<structfield>opcintype</structfield>と同じ場合はゼロ
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   An operator class's <structfield>opcmethod</structfield> must match the
   <structfield>opfmethod</structfield> of its containing operator family.
   Also, there must be no more than one <structname>pg_opclass</structname>
   row having <structfield>opcdefault</structfield> true for any given combination of
   <structfield>opcmethod</structfield> and <structfield>opcintype</structfield>.
-->
演算子クラスの<structfield>opcmethod</structfield>は、演算子クラスが含んでいる演算子族の<structname>opfmethod</structname>に一致しなければいけません。
また、任意の<structname>opcmethod</structname>と<structname>opcintype</structname>の組み合わせに対して<structname>opcdefault</structname>が真となるような<structname>pg_opclass</structname>行が複数存在してはいけません。
  </para>

 </sect1>


 <sect1 id="catalog-pg-operator">
  <title><structname>pg_operator</structname></title>

  <indexterm zone="catalog-pg-operator">
   <primary>pg_operator</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_operator</structname> stores information about operators.
   See <xref linkend="sql-createoperator"/>
   and <xref linkend="xoper"/> for more information.
-->
<structname>pg_operator</structname>カタログは演算子の情報を保存します。
<xref linkend="sql-createoperator"/>と<xref linkend="xoper"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_operator</structname> Columns</title>
-->
   <title><structname>pg_operator</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the operator
-->
演算子名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this operator
-->
この演算子を含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the operator
-->
演算子の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprkind</structfield> <type>char</type>
      </para>
      <para>
<!--
       <literal>b</literal> = infix operator (<quote>both</quote>),
       or <literal>l</literal> = prefix operator (<quote>left</quote>)
-->
<literal>b</literal> = 挿入辞（<quote>両側</quote>）、
<literal>l</literal> = 接頭辞（<quote>左側</quote>)、
<literal>r</literal> = 接尾辞（<quote>右側</quote>）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprcanmerge</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This operator supports merge joins
-->
この演算子はマージ結合をサポートします。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprcanhash</structfield> <type>bool</type>
      </para>
      <para>
<!--
       This operator supports hash joins
-->
この演算子はハッシュ結合をサポートします。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprleft</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Type of the left operand (zero for a prefix operator)
-->
左辺オペランドの型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprright</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Type of the right operand
-->
右辺オペランドの型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprresult</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Type of the result
       (zero for a not-yet-defined <quote>shell</quote> operator)
-->
結果の型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprcom</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Commutator of this operator (zero if none)
-->
もし存在すればこの演算子の交代演算子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprnegate</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Negator of this operator (zero if none)
-->
もし存在すればこの演算子の否定子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprcode</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Function that implements this operator
       (zero for a not-yet-defined <quote>shell</quote> operator)
-->
この演算子を実装する関数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprrest</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Restriction selectivity estimation function for this operator
       (zero if none)
-->
この演算子の制約選択評価関数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oprjoin</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Join selectivity estimation function for this operator
       (zero if none)
-->
この演算子の結合選択評価関数
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>


 <sect1 id="catalog-pg-opfamily">
  <title><structname>pg_opfamily</structname></title>

  <indexterm zone="catalog-pg-opfamily">
   <primary>pg_opfamily</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_opfamily</structname> defines operator families.
   Each operator family is a collection of operators and associated
   support routines that implement the semantics specified for a particular
   index access method.  Furthermore, the operators in a family are all
   <quote>compatible</quote>, in a way that is specified by the access method.
   The operator family concept allows cross-data-type operators to be used
   with indexes and to be reasoned about using knowledge of access method
   semantics.
-->
<structname>pg_opfamily</structname>カタログは演算子族を定義します。
それぞれの演算子族は、演算子とサポートルーチン(特定のインデックスアクセスメソッドのために特化されたセマンティクスを実装するような関連付けられたもの)を集めたものです。
さらに、演算子族内の演算子はすべて、アクセスメソッドにより特定される方法において<quote>互換性</quote>があります。
演算子族の概念は、データ型を跨る演算子がインデックスで使用されることを許可し、さらにアクセスメソッドのセマンティクスの知識を使用することについて理由付けすることも許可します。
  </para>

  <para>
<!--
   Operator families are described at length in <xref linkend="xindex"/>.
-->
演算子族については<xref linkend="xindex"/>で詳しく説明します。
  </para>

  <table>
<!--
   <title><structname>pg_opfamily</structname> Columns</title>
-->
   <title><structname>pg_opfamily</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opfmethod</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-am"><structname>pg_am</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Index access method operator family is for
-->
演算子族用のインデックスアクセスメソッド
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opfname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of this operator family
-->
演算子族の名称
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opfnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Namespace of this operator family
-->
演算子族の名前空間
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>opfowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the operator family
-->
演算子族の所有者
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The majority of the information defining an operator family is not in its
   <structname>pg_opfamily</structname> row, but in the associated rows in
   <link linkend="catalog-pg-amop"><structname>pg_amop</structname></link>,
   <link linkend="catalog-pg-amproc"><structname>pg_amproc</structname></link>,
   and
   <link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link>.
-->
演算子族を定義している情報の大部分が、<structname>pg_opfamily</structname>行にあるわけではなく、<link linkend="catalog-pg-amop"><structname>pg_amop</structname></link>や<link linkend="catalog-pg-amproc"><structname>pg_amproc</structname></link>や<link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link>行にあります。
  </para>

 </sect1>

<!-- split-catalogs1-end -->
<!-- split-catalogs2-start -->

 <sect1 id="catalog-pg-partitioned-table">
  <title><structname>pg_partitioned_table</structname></title>

  <indexterm zone="catalog-pg-partitioned-table">
   <primary>pg_partitioned_table</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_partitioned_table</structname> stores
   information about how tables are partitioned.
-->
カタログ<structname>pg_partitioned_table</structname>はテーブルがどのようにパーティションに分けられているかに関する情報を格納します。
  </para>

  <table>
<!--
   <title><structname>pg_partitioned_table</structname> Columns</title>
-->
   <title><structname>pg_partitioned_table</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>partrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the <link linkend="catalog-pg-class"><structname>pg_class</structname></link> entry for this partitioned table
-->
このパーティションテーブルの<structname>pg_class</structname>のエントリのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>partstrat</structfield> <type>char</type>
      </para>
      <para>
<!--
       Partitioning strategy; <literal>h</literal> = hash partitioned table,
       <literal>l</literal> = list partitioned table, <literal>r</literal> = range partitioned table
-->
パーティショニング戦略。
<literal>h</literal>ならハッシュパーティションテーブル、<literal>l</literal>ならリストパーティションテーブル、<literal>r</literal>なら範囲パーティションテーブル。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>partnatts</structfield> <type>int2</type>
      </para>
      <para>
<!--
       The number of columns in the partition key
-->
パーティションキーの列の数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>partdefid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the <link linkend="catalog-pg-class"><structname>pg_class</structname></link> entry for the default partition
       of this partitioned table, or zero if this partitioned table does not
       have a default partition
-->
このパーティションのデフォルトパーティションの<structname>pg_class</structname>エントリのOID。
このパーティションテーブルにデフォルトパーティションがなければ0。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>partattrs</structfield> <type>int2vector</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attnum</structfield>)
      </para>
      <para>
<!--
       This is an array of <structfield>partnatts</structfield> values that
       indicate which table columns are part of the partition key.  For
       example, a value of <literal>1 3</literal> would mean that the first
       and the third table columns make up the partition key.  A zero in this
       array indicates that the corresponding partition key column is an
       expression, rather than a simple column reference.
-->
これは<structfield>partnatts</structfield>値の配列で、どのテーブル列がパーティションキーの一部となっているかを示します。
例えば、値が<literal>1 3</literal>であれば、テーブルの1番目と3番目の列がパーティションキーを構成することを意味します。
この配列がゼロの場合は、対応するパーティションキー列が式であって、単なる列参照ではないことを示します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>partclass</structfield> <type>oidvector</type>
       (references <link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       For each column in the partition key, this contains the OID of the
       operator class to use.  See
       <link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link> for details.
-->
これは、パーティションキーの各列について、使用する演算子クラスのOIDが入ります。
詳細については<link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>partcollation</structfield> <type>oidvector</type>
       (references <link linkend="catalog-pg-collation"><structname>pg_collation</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       For each column in the partition key, this contains the OID of the
       collation to use for partitioning, or zero if the column is not
       of a collatable data type.
-->
これは、パーティションキーの各列について、パーティショニングで使用する照合のOIDが入ります。
列が照合できないデータ型の場合はゼロが入ります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>partexprs</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       Expression trees (in <function>nodeToString()</function>
       representation) for partition key columns that are not simple column
       references.  This is a list with one element for each zero
       entry in <structfield>partattrs</structfield>.  Null if all partition key columns
       are simple references.
-->
単純な列参照ではないパーティションキー列についての（<function>nodeToString()</function>形式での）式ツリーです。
<structfield>partattrs</structfield>がゼロの各エントリについて1つの要素があるリストになっています。
すべてのパーティションキー列が単純な参照ならNULLとなります。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-policy">
  <title><structname>pg_policy</structname></title>

  <indexterm zone="catalog-pg-policy">
   <primary>pg_policy</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_policy</structname> stores row-level
   security policies for tables.  A policy includes the kind of
   command that it applies to (possibly all commands), the roles that it
   applies to, the expression to be added as a security-barrier
   qualification to queries that include the table, and the expression
   to be added as a <literal>WITH CHECK</literal> option for queries that attempt to
   add new records to the table.
-->
カタログ<structname>pg_policy</structname>はテーブルの行単位セキュリティのポリシーを格納します。
ポリシーには、それが適用されるコマンドの種類（すべてのコマンドのこともあります）、それが適用されるロール、セキュリティバリアの制約として、そのテーブルを含む問い合わせに追加される式、そしてテーブルに新しいレコードを追加しようとする問い合わせのために<literal>WITH CHECK</literal>オプションとして追加される式が含まれます。
  </para>

  <table>
<!--
   <title><structname>pg_policy</structname> Columns</title>
-->
   <title><structname>pg_policy</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>polname</structfield> <type>name</type>
      </para>
      <para>
<!--
       The name of the policy
-->
ポリシーの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>polrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The table to which the policy applies
-->
ポリシーが適用されるテーブル
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>polcmd</structfield> <type>char</type>
      </para>
      <para>
<!--
       The command type to which the policy is applied:
       <literal>r</literal> for <xref linkend="sql-select"/>,
       <literal>a</literal> for <xref linkend="sql-insert"/>,
       <literal>w</literal> for <xref linkend="sql-update"/>,
       <literal>d</literal> for <xref linkend="sql-delete"/>,
       or <literal>*</literal> for all
-->
ポリシーが適用されるコマンドの種類：
<literal>r</literal> <command>SELECT</command>、
<literal>a</literal> <command>INSERT</command>、
<literal>w</literal> <command>UPDATE</command>、
<literal>d</literal> <command>DELETE</command>、
<literal>*</literal> すべて
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>polpermissive</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Is the policy permissive or restrictive?
-->
許容(permissive)ポリシーか、制限(restrictive)ポリシーか
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>polroles</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The roles to which the policy is applied;
       zero means <literal>PUBLIC</literal>
       (and normally appears alone in the array)
-->
ポリシーが適用されるロール
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>polqual</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       The expression tree to be added to the security barrier qualifications for queries that use the table
-->
テーブルを使用する問い合わせにセキュリティバリアの制約として追加される式のツリー
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>polwithcheck</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       The expression tree to be added to the WITH CHECK qualifications for queries that attempt to add rows to the table
-->
テーブルに行を追加する問い合わせにWITH CHECKの制約として追加される式のツリー
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <note>
   <para>
<!--
    Policies stored in <structname>pg_policy</structname> are applied only when
    <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relrowsecurity</structfield> is set for
    their table.
-->
<structname>pg_policy</structname>に格納されるポリシーは、そのテーブルに<structname>pg_class</structname>.<structfield>relrowsecurity</structfield>が設定されている場合にのみ適用されます。
   </para>
  </note>

 </sect1>

 <sect1 id="catalog-pg-proc">
  <title><structname>pg_proc</structname></title>

  <indexterm zone="catalog-pg-proc">
   <primary>pg_proc</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_proc</structname> stores information about
   functions, procedures, aggregate functions, and window functions
   (collectively also known as routines).  See <xref
   linkend="sql-createfunction"/>, <xref linkend="sql-createprocedure"/>, and
   <xref linkend="xfunc"/> for more information.
-->
<structname>pg_proc</structname>カタログは関数、プロシージャ、集約関数あるいはWINDOW関数（これらをまとめてルーチンとも言います）に関する情報を格納します。
<xref linkend="sql-createfunction"/>と<xref linkend="xfunc"/>を参照してください。
  </para>

  <para>
<!--
   If <structfield>prokind</structfield> indicates that the entry is for an
   aggregate function, there should be a matching row in
   <link linkend="catalog-pg-aggregate"><structfield>pg_aggregate</structfield></link>.
-->
<structfield>prokind</structfield>がそのエントリが集約関数であることを示しているなら、<structfield>pg_aggregate</structfield>に一致する行があるはずです。
  </para>

  <table>
<!--
   <title><structname>pg_proc</structname> Columns</title>
-->
   <title><structname>pg_proc</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the function
-->
関数名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pronamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this function
-->
この関数を含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the function
-->
関数の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prolang</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-language"><structname>pg_language</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Implementation language or call interface of this function
-->
この関数の実装言語または呼び出しインタフェース
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>procost</structfield> <type>float4</type>
      </para>
      <para>
<!--
       Estimated execution cost (in units of
       <xref linkend="guc-cpu-operator-cost"/>); if <structfield>proretset</structfield>,
       this is cost per row returned
-->
推定実行コスト(<xref linkend="guc-cpu-operator-cost"/>単位です)。
<structfield>proretset</structfield>の場合は、返される行毎のコストになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prorows</structfield> <type>float4</type>
      </para>
      <para>
<!--
       Estimated number of result rows (zero if not <structfield>proretset</structfield>)
-->
結果の推定行数(<structfield>proretset</structfield>でなければゼロになります)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>provariadic</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Data type of the variadic array parameter's elements,
       or zero if the function does not have a variadic parameter
-->
可変配列パラメータの要素のデータ型。関数が可変パラメータを持っていない場合はゼロになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prosupport</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Planner support function for this function
       (see <xref linkend="xfunc-optimization"/>), or zero if none
-->
この関数に対する任意のプランナサポート関数
（<xref linkend="xfunc-optimization"/>参照）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prokind</structfield> <type>char</type>
      </para>
      <para>
<!--
       <literal>f</literal> for a normal function, <literal>p</literal>
       for a procedure, <literal>a</literal> for an aggregate function, or
       <literal>w</literal> for a window function
-->
<literal>f</literal>なら通常の関数、<literal>p</literal>ならプロシージャ、<literal>a</literal>なら集約関数、<literal>w</literal>ならWINDOW関数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prosecdef</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Function is a security definer (i.e., a <quote>setuid</quote>
       function)
-->
セキュリティ定義の関数（すなわち<quote>setuid</quote>関数）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proleakproof</structfield> <type>bool</type>
      </para>
      <para>
<!--
       The function has no side effects.  No information about the
       arguments is conveyed except via the return value.  Any function
       that might throw an error depending on the values of its arguments
       is not leak-proof.
-->
この関数には副作用がありません。引数に関する情報が戻り値以外から伝わることがありません。
引数の値に依存するエラーを発生する可能性がある関数はすべてリークプルーフ関数ではありません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proisstrict</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Function returns null if any call argument is null.  In that
       case the function won't actually be called at all.  Functions
       that are not <quote>strict</quote> must be prepared to handle
       null inputs.
-->
関数は呼び出し引数がNULLの場合にはNULLを返します。
その場合、関数は実際にはまったく呼び出されません。
<quote>厳密</quote>ではない関数はNULL値入力を取り扱えるようにしなければいけません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proretset</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Function returns a set (i.e., multiple values of the specified
       data type)
-->
集合（すなわち指定されたデータ型の複数の値）を返す関数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>provolatile</structfield> <type>char</type>
      </para>
      <para>
<!--
       <structfield>provolatile</structfield> tells whether the function's
       result depends only on its input arguments, or is affected by outside
       factors.
       It is <literal>i</literal> for <quote>immutable</quote> functions,
       which always deliver the same result for the same inputs.
       It is <literal>s</literal> for <quote>stable</quote> functions,
       whose results (for fixed inputs) do not change within a scan.
       It is <literal>v</literal> for <quote>volatile</quote> functions,
       whose results might change at any time.  (Use <literal>v</literal> also
       for functions with side-effects, so that calls to them cannot get
       optimized away.)
-->
<structfield>provolatile</structfield>は、関数の結果が入力引数のみで決定されるか、または外部要素に影響されるかを示します。
<literal>i</literal>は<quote>immutable(不変)</quote>関数を表し、同じ入力に対し常に同じ結果をもたらします。
<literal>s</literal>は<quote>stable(安定)</quote>関数を表し、（固定入力に対する）結果はスキャン内で変わりません。
<literal>v</literal>は<quote>volatile(不安定)</quote>関数を表し、どのような場合にも結果は異なる可能性があります。
（また、副作用を持つ関数に<literal>v</literal>を使用することで、その関数に対する呼び出しが最適化で消されないようにできます。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proparallel</structfield> <type>char</type>
      </para>
      <para>
<!--
       <structfield>proparallel</structfield> tells whether the function
       can be safely run in parallel mode.
       It is <literal>s</literal> for functions which are safe to run in
       parallel mode without restriction.
       It is <literal>r</literal> for functions which can be run in parallel
       mode, but their execution is restricted to the parallel group leader;
       parallel worker processes cannot invoke these functions.
       It is <literal>u</literal> for functions which are unsafe in parallel
       mode; the presence of such a function forces a serial execution plan.
-->
<structfield>proparallel</structfield>は関数が並列モードにて安全に実行できるかを示します。
<literal>s</literal>は、制限なしに並列モードにて実行することが安全である関数を表します。
<literal>r</literal>は、並列モードにて実行可能な関数を表しますが、実行は並列グループリーダに制限されます。
並列ワーカプロセスはこれらの関数を呼び出すことができません。
<literal>u</literal>は、並列モードにて安全ではない関数を表します。
このような関数が存在すると、直列的な実行プランが強制されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pronargs</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Number of input arguments
-->
入力の引数の数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pronargdefaults</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Number of arguments that have defaults
-->
デフォルト値を持つ引数の数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prorettype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Data type of the return value
-->
戻り値のデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proargtypes</structfield> <type>oidvector</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       An array of the data types of the function arguments.  This includes
       only input arguments (including <literal>INOUT</literal> and
       <literal>VARIADIC</literal> arguments), and thus represents
       the call signature of the function.
-->
関数の引数のデータ型を格納した配列。
これは入力引数（<literal>INOUT</literal>と<literal>VARIADIC</literal>も含みます）のみを含んでいて、関数の呼び出しシグネチャを表現します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proallargtypes</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       An array of the data types of the function arguments.  This includes
       all arguments (including <literal>OUT</literal> and
       <literal>INOUT</literal> arguments); however, if all the
       arguments are <literal>IN</literal> arguments, this field will be null.
       Note that subscripting is 1-based, whereas for historical reasons
       <structfield>proargtypes</structfield> is subscripted from 0.
-->
関数の引数のデータ型を格納した配列。
これは（<literal>OUT</literal>と<literal>INOUT</literal>引数を含んだ）全ての引数を含みます。
しかし、すべての引数が<literal>IN</literal>であった場合は、この列はNULLになります。
歴史的な理由から<structfield>proargtypes</structfield>は0から番号が振られていますが、添字は1から始まっていることに注意してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proargmodes</structfield> <type>char[]</type>
      </para>
      <para>
<!--
       An array of the modes of the function arguments, encoded as
       <literal>i</literal> for <literal>IN</literal> arguments,
       <literal>o</literal> for <literal>OUT</literal> arguments,
       <literal>b</literal> for <literal>INOUT</literal> arguments,
       <literal>v</literal> for <literal>VARIADIC</literal> arguments,
       <literal>t</literal> for <literal>TABLE</literal> arguments.
       If all the arguments are <literal>IN</literal> arguments,
       this field will be null.
       Note that subscripts correspond to positions of
       <structfield>proallargtypes</structfield> not <structfield>proargtypes</structfield>.
-->
関数の引数のモードを格納した配列。
以下のようにエンコードされています。
<literal>IN</literal>引数に対しては<literal>i</literal>、
<literal>OUT</literal>引数に対しては<literal>o</literal>、
<literal>INOUT</literal>引数に対しては<literal>b</literal>、
<literal>VARIADIC</literal>引数に対しては<literal>v</literal>、
<literal>TABLE</literal>引数に対しては<literal>t</literal>。
もしすべての引数が<literal>IN</literal>引数であった場合は、この列はNULLです。
添字は<structfield>proargtypes</structfield>ではなく<structfield>proallargtypes</structfield>の位置に対応していることに注意してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proargnames</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       An array of the names of the function arguments.
       Arguments without a name are set to empty strings in the array.
       If none of the arguments have a name, this field will be null.
       Note that subscripts correspond to positions of
       <structfield>proallargtypes</structfield> not <structfield>proargtypes</structfield>.
-->
関数の引数名を格納する配列。
名前のない引数は、配列内では空文字列で設定されます。
もしすべての引数に名前がない場合は、この列はNULLです。
添字は<structfield>proargtypes</structfield>ではなく<structfield>proallargtypes</structfield>の位置に対応していることに注意してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proargdefaults</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       Expression trees (in <function>nodeToString()</function> representation)
       for default values.  This is a list with
       <structfield>pronargdefaults</structfield> elements, corresponding to the last
       <replaceable>N</replaceable> <emphasis>input</emphasis> arguments (i.e., the last
       <replaceable>N</replaceable> <structfield>proargtypes</structfield> positions).
       If none of the arguments have defaults, this field will be null.
-->
デフォルト値のための(<function>nodeToString()</function>表現の)演算式ツリー。
これは<structfield>pronargdefaults</structfield>の要素のリストで、最後の<replaceable>N</replaceable>個の<emphasis>入力</emphasis>引数と対応しています（つまり最後の<replaceable>N</replaceable> <structfield>proargtypes</structfield>の位置ということです）。
もし引数にデフォルト値がない場合は、この列はNULLになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>protrftypes</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       An array of the argument/result data type(s) for which to apply
       transforms (from the function's <literal>TRANSFORM</literal>
       clause).  Null if none.
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prosrc</structfield> <type>text</type>
      </para>
      <para>
<!--
       This tells the function handler how to invoke the function.  It
       might be the actual source code of the function for interpreted
       languages, a link symbol, a file name, or just about anything
       else, depending on the implementation language/call convention.
-->
関数の起動方法を関数ハンドラに伝えます。
実装言語や呼び出し規約に依存して、使用する言語用の関数の実際のソースコード、リンクシンボル、ファイル名などになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>probin</structfield> <type>text</type>
      </para>
      <para>
<!--
       Additional information about how to invoke the function.
       Again, the interpretation is language-specific.
-->
関数の起動方法についての追加情報。
同じように解釈は言語に依存します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prosqlbody</structfield> <type>pg_node_tree</type>
      </para>
      <para>
       Pre-parsed SQL function body.  This is used for SQL-language
       functions when the body is given in SQL-standard notation
       rather than as a string literal.  It's null in other cases.
       </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proconfig</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Function's local settings for run-time configuration variables
-->
実行時の設定変数に対する関数のローカル設定
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>proacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   For compiled functions, both built-in and dynamically loaded,
   <structfield>prosrc</structfield> contains the function's C-language
   name (link symbol).
   For SQL-language functions, <structfield>prosrc</structfield> contains
   the function's source text if that is specified as a string literal;
   but if the function body is specified in SQL-standard style,
   <structfield>prosrc</structfield> is unused (typically it's an empty
   string) and <structfield>prosqlbody</structfield> contains the
   pre-parsed definition.
   For all other currently-known language types,
   <structfield>prosrc</structfield> contains the function's source
   text.  <structfield>probin</structfield> is null except for
   dynamically-loaded C functions, for which it gives the name of the
   shared library file containing the function.
-->
コンパイル言語で作成された、組み込みおよび動的にロードされる関数では、<structfield>prosrc</structfield>は関数のC言語名（リンクシンボル）を持ちます。
他の種類の言語はすべて、<structfield>prosrc</structfield>は関数のソーステキストを持ちます。
<structfield>probin</structfield>は動的にロードされるC関数に対してその関数を保有する共有ライブラリファイルの名前を与える以外には使用されていません。
  </para>

 </sect1>

 <sect1 id="catalog-pg-publication">
  <title><structname>pg_publication</structname></title>

  <indexterm zone="catalog-pg-publication">
   <primary>pg_publication</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_publication</structname> contains all
   publications created in the database.  For more on publications see
   <xref linkend="logical-replication-publication"/>.
-->
カタログ<structname>pg_publication</structname>には、データベース内に作成されたすべてのパブリケーションが含まれます。
パブリケーションについての詳細は<xref linkend="logical-replication-publication"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_publication</structname> Columns</title>
-->
   <title><structname>pg_publication</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pubname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the publication
-->
パブリケーションの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pubowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the publication
-->
パブリケーションの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>puballtables</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, this publication automatically includes all tables
       in the database, including any that will be created in the future.
-->
真の場合、このパブリケーションは、将来作成されるテーブルを含め、データベース内の全テーブルを自動的に含みます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pubinsert</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, <xref linkend="sql-insert"/> operations are replicated for
       tables in the publication.
-->
真の場合、パブリケーション内のテーブルに対する<command>INSERT</command>操作は複製されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pubupdate</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, <xref linkend="sql-update"/> operations are replicated for
       tables in the publication.
-->
真の場合、パブリケーション内のテーブルに対する<command>UPDATE</command>操作は複製されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pubdelete</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, <xref linkend="sql-delete"/> operations are replicated for
       tables in the publication.
-->
真の場合、パブリケーション内のテーブルに対する<command>DELETE</command>操作は複製されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pubtruncate</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, <xref linkend="sql-truncate"/> operations are replicated for
       tables in the publication.
-->
真の場合、パブリケーション内のテーブルに対する<command>TRUNCATE</command>操作は複製されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pubviaroot</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, operations on a leaf partition are replicated using the
       identity and schema of its topmost partitioned ancestor mentioned in the
       publication instead of its own.
-->
真の場合、自分自身ではなく、パブリケーションが言及しているパーティションの最上位の祖先の識別子とスキーマを使って、リーフパーティションに対する操作が複製されます。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="catalog-pg-publication-rel">
  <title><structname>pg_publication_rel</structname></title>

  <indexterm zone="catalog-pg-publication-rel">
   <primary>pg_publication_rel</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_publication_rel</structname> contains the
   mapping between relations and publications in the database.  This is a
   many-to-many mapping.  See also <xref linkend="view-pg-publication-tables"/>
   for a more user-friendly view of this information.
-->
カタログ<structname>pg_publication_rel</structname>にはデータベース内のリレーションとパブリケーションのマッピングが含まれます。
これは多対多のマッピングです。
この情報のよりユーザフレンドリなビューについては<xref linkend="view-pg-publication-tables"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_publication_rel</structname> Columns</title>
-->
   <title><structname>pg_publication_rel</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prpubid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-publication"><structname>pg_publication</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Reference to publication
-->
パブリケーションの参照
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Reference to relation
-->
リレーションの参照
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="catalog-pg-range">
  <title><structname>pg_range</structname></title>

  <indexterm zone="catalog-pg-range">
   <primary>pg_range</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_range</structname> stores information about
   range types.  This is in addition to the types' entries in
   <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.
-->
<structname>pg_range</structname>カタログは、範囲型についての情報を保存します。
これは<link linkend="catalog-pg-type"><structname>pg_type</structname></link>内の型のエントリに追加されます。
  </para>

  <table>
<!--
   <title><structname>pg_range</structname> Columns</title>
-->
   <title><structname>pg_range</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rngtypid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the range type
-->
範囲型のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rngsubtype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the element type (subtype) of this range type
-->
この範囲型の要素型(派生元型)のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rngmultitypid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       OID of the multirange type for this range type
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rngcollation</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-collation"><structname>pg_collation</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the collation used for range comparisons, or zero if none
-->
範囲比較のために使用される照合のOID。何もない場合はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rngsubopc</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-opclass"><structname>pg_opclass</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the subtype's operator class used for range comparisons
-->
範囲比較のために使用される派生元型の演算子クラスのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rngcanonical</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the function to convert a range value into canonical form,
       or zero if none
-->
範囲型を標準型に変換する関数のOID。何もない場合はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rngsubdiff</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the function to return the difference between two element
       values as <type>double precision</type>, or zero if none
-->
２つの要素値の間の違いを<type>double precision</type>として返す関数のOID、なければゼロ
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   <structfield>rngsubopc</structfield> (plus <structfield>rngcollation</structfield>, if the
   element type is collatable) determines the sort ordering used by the range
   type.  <structfield>rngcanonical</structfield> is used when the element type is
   discrete.  <structfield>rngsubdiff</structfield> is optional but should be supplied to
   improve performance of GiST indexes on the range type.
-->
   <structfield>rngsubopc</structfield> (および、要素型が照合可能である場合は<structfield>rngcollation</structfield>)は
   範囲型で使用されるソートの順番を決定します。<structfield>rngcanonical</structfield>は要素型が離散的である場合に使用されます。
   <structfield>rngsubdiff</structfield>は省略可能ですが、範囲型に対するGiSTインデックスの性能を向上するためには提供しなければなりません。
  </para>

 </sect1>

 <sect1 id="catalog-pg-replication-origin">
  <title><structname>pg_replication_origin</structname></title>

  <indexterm zone="catalog-pg-replication-origin">
   <primary>pg_replication_origin</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_replication_origin</structname> catalog contains
   all replication origins created.  For more on replication origins
   see <xref linkend="replication-origins"/>.
-->
<structname>pg_replication_origin</structname>カタログは、作成されたすべてのレプリケーション起点を含んでいます。
レプリケーション起点についての詳細は<xref linkend="replication-origins"/>を参照してください。
  </para>

  <para>
<!--
   Unlike most system catalogs, <structname>pg_replication_origin</structname>
   is shared across all databases of a cluster: there is only one copy
   of <structname>pg_replication_origin</structname> per cluster, not one per
   database.
-->
ほとんどのシステムカタログとは異なり、<structname>pg_replication_origin</structname>はクラスタ内の全データベースで共有されます。
つまりクラスタごとに<structname>pg_pg_replication_origin</structname>の実体は1つだけ存在し、データベースごとに1つではありません。
  </para>

  <table>
<!--
   <title><structname>pg_replication_origin</structname> Columns</title>
-->
   <title><structname>pg_replication_origin</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>roident</structfield> <type>oid</type>
      </para>
      <para>
<!--
       A unique, cluster-wide identifier for the replication
       origin. Should never leave the system.
-->
クラスタ全体で一意なレプリケーション起点の識別子。
システムから除かれてはいけません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>roname</structfield> <type>text</type>
      </para>
      <para>
<!--
       The external, user defined, name of a replication
       origin.
-->
レプリケーション起点のユーザ定義の外部名
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="catalog-pg-rewrite">
  <title><structname>pg_rewrite</structname></title>

  <indexterm zone="catalog-pg-rewrite">
   <primary>pg_rewrite</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_rewrite</structname> stores rewrite rules for tables and views.
-->
   <structname>pg_rewrite</structname>カタログはテーブルとビューに対する書き換えルールを保存します。
  </para>

  <table>
<!--
   <title><structname>pg_rewrite</structname> Columns</title>
-->
   <title><structname>pg_rewrite</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rulename</structfield> <type>name</type>
      </para>
      <para>
<!--
       Rule name
-->
ルール名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ev_class</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The table this rule is for
-->
ルールを適用するテーブル
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ev_type</structfield> <type>char</type>
      </para>
      <para>
<!--
       Event type that the rule is for: 1 = <xref linkend="sql-select"/>, 2 =
       <xref linkend="sql-update"/>, 3 = <xref linkend="sql-insert"/>, 4 =
       <xref linkend="sql-delete"/>
-->
ルールを適用するイベントの型：
1 = <command>SELECT</command>、
2 = <command>UPDATE</command>、
3 = <command>INSERT</command>、
4 = <command>DELETE</command>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ev_enabled</structfield> <type>char</type>
      </para>
      <para>
<!--
       Controls in which <xref linkend="guc-session-replication-role"/> modes
       the rule fires.
       <literal>O</literal> = rule fires in <quote>origin</quote> and <quote>local</quote> modes,
       <literal>D</literal> = rule is disabled,
       <literal>R</literal> = rule fires in <quote>replica</quote> mode,
       <literal>A</literal> = rule fires always.
-->
ルールがどの<xref linkend="guc-session-replication-role"/>モードで発行されるかを制御します。
<literal>O</literal> = ルールは<quote>origin</quote>および<quote>local</quote>モードで発行。
<literal>D</literal> = ルールは無効。
<literal>R</literal> = ルールは<quote>replica</quote>モードで発行。
<literal>A</literal> = ルールは常に発行。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_instead</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if the rule is an <literal>INSTEAD</literal> rule
-->
ルールが<literal>INSTEAD</literal>ルールの場合は真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ev_qual</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       Expression tree (in the form of a
       <function>nodeToString()</function> representation) for the
       rule's qualifying condition
-->
ルールの制約条件に対する（<function>nodeToString()</function>表現による）演算式ツリー
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ev_action</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       Query tree (in the form of a
       <function>nodeToString()</function> representation) for the
       rule's action
-->
ルールのアクションに対する（<function>nodeToString()</function>表現による）問い合わせツリー
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <note>
   <para>
<!--
    <literal>pg_class.relhasrules</literal>
    must be true if a table has any rules in this catalog.
-->
   テーブルがこのカタログ内のルールを持つ場合、<literal>pg_class.relhasrules</literal>は真でなければなりません。
   </para>
  </note>

 </sect1>

 <sect1 id="catalog-pg-seclabel">
  <title><structname>pg_seclabel</structname></title>

  <indexterm zone="catalog-pg-seclabel">
   <primary>pg_seclabel</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_seclabel</structname> stores security
   labels on database objects.  Security labels can be manipulated
   with the <link linkend="sql-security-label"><command>SECURITY LABEL</command></link> command.  For an easier
   way to view security labels, see <xref linkend="view-pg-seclabels"/>.
-->
<structname>pg_seclabel</structname>カタログにはデータベースオブジェクト上のセキュリティラベルが格納されます。
セキュリティラベルは<xref linkend="sql-security-label"/>コマンドを用いて操作することができます。
セキュリティラベルを閲覧するより簡単な方法については<xref linkend="view-pg-seclabels"/>を参照してください。
  </para>

  <para>
<!--
   See also <link linkend="catalog-pg-shseclabel"><structname>pg_shseclabel</structname></link>,
   which performs a similar function for security labels of database objects
   that are shared across a database cluster.
-->
<link linkend="catalog-pg-shseclabel"><structname>pg_shseclabel</structname></link>を参照してください。
これは、データベースクラスタ間で共有されたデータベースオブジェクトにおけるセキュリティラベルのための類似した機能を提供します。
  </para>

  <table>
<!--
   <title><structname>pg_seclabel</structname> Columns</title>
-->
   <title><structname>pg_seclabel</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objoid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the object this security label pertains to
-->
このセキュリティラベルが関係するオブジェクトのOIDです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog this object appears in
-->
このオブジェクトが現れるシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objsubid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For a security label on a table column, this is the column number (the
       <structfield>objoid</structfield> and <structfield>classoid</structfield> refer to
       the table itself).  For all other object types, this column is
       zero.
-->
テーブル列上のセキュリティラベルでは、これは列番号です（<structfield>objoid</structfield>および<structfield>classoid</structfield>はテーブル自身を参照します）。
他のすべての種類のオブジェクトでは、この列はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>provider</structfield> <type>text</type>
      </para>
      <para>
<!--
       The label provider associated with this label.
-->
このラベルに関連付いたラベルプロバイダです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>label</structfield> <type>text</type>
      </para>
      <para>
<!--
       The security label applied to this object.
-->
このオブジェクトに適用されるセキュリティラベルです。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="catalog-pg-sequence">
  <title><structname>pg_sequence</structname></title>

  <indexterm zone="catalog-pg-sequence">
   <primary>pg_sequence</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_sequence</structname> contains information about
   sequences.  Some of the information about sequences, such as the name and
   the schema, is in
   <link linkend="catalog-pg-class"><structname>pg_class</structname></link>
-->
カタログ<structname>pg_sequence</structname>にはシーケンスに関する情報が含まれます。
名前やスキーマなどシーケンスに関する情報の一部は<structname>pg_class</structname>にあります。
  </para>

  <table>
<!--
   <title><structname>pg_sequence</structname> Columns</title>
-->
   <title><structname>pg_sequence</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the <link linkend="catalog-pg-class"><structname>pg_class</structname></link> entry for this sequence
-->
このシーケンスの<structname>pg_class</structname>のエントリのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqtypid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Data type of the sequence
-->
シーケンスのデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqstart</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Start value of the sequence
-->
シーケンスの開始値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqincrement</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Increment value of the sequence
-->
シーケンスの増分値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqmax</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Maximum value of the sequence
-->
シーケンスの最大値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqmin</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Minimum value of the sequence
-->
シーケンスの最小値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqcache</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Cache size of the sequence
-->
シーケンスのキャッシュサイズ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqcycle</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Whether the sequence cycles
-->
シーケンスが周回するかどうか
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="catalog-pg-shdepend">
  <title><structname>pg_shdepend</structname></title>

  <indexterm zone="catalog-pg-shdepend">
   <primary>pg_shdepend</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_shdepend</structname> records the
   dependency relationships between database objects and shared objects,
   such as roles.  This information allows
   <productname>PostgreSQL</productname> to ensure that those objects are
   unreferenced before attempting to delete them.
-->
<structname>pg_shdepend</structname>カタログは、データベースオブジェクトとロールのような共有オブジェクト間のリレーション依存関係を保持します。
この情報は<productname>PostgreSQL</productname>が依存関係を削除しようとする前に、これらのオブジェクトを参照されないようにすることを保証することを許可します。
  </para>

  <para>
<!--
   See also <link linkend="catalog-pg-depend"><structname>pg_depend</structname></link>,
   which performs a similar function for dependencies involving objects
   within a single database.
-->
<link linkend="catalog-pg-depend"><structname>pg_depend</structname></link>も参照してください。
<structname>pg_depend</structname>は単一のデータベース内のオブジェクトに関する依存関係について同じような機能を実行します。
  </para>

  <para>
<!--
   Unlike most system catalogs, <structname>pg_shdepend</structname>
   is shared across all databases of a cluster: there is only one
   copy of <structname>pg_shdepend</structname> per cluster, not
   one per database.
-->
多くのシステムカタログと異なり<structname>pg_shdepend</structname>はクラスタの全てのデータベースに共有されています。
データベース毎ではなく、クラスタ毎にただ1つの<structname>pg_shdepend</structname>のコピーがあります。
  </para>

  <table>
<!--
   <title><structname>pg_shdepend</structname> Columns</title>
-->
   <title><structname>pg_shdepend</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dbid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the database the dependent object is in,
       or zero for a shared object
       or a <symbol>SHARED_DEPENDENCY_PIN</symbol> entry
-->
依存するオブジェクトが格納されたデータベースのOID。共有オブジェクトではゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog the dependent object is in,
       or zero for a <symbol>SHARED_DEPENDENCY_PIN</symbol> entry
-->
依存するオブジェクトを含んだシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the specific dependent object,
       or zero for a <symbol>SHARED_DEPENDENCY_PIN</symbol> entry
-->
特定の依存するオブジェクトのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objsubid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For a table column, this is the column number (the
       <structfield>objid</structfield> and <structfield>classid</structfield> refer to the
       table itself).  For all other object types, this column is zero.
-->
テーブル列の場合、これは列番号です(<structfield>objid</structfield>と<structfield>classid</structfield>はテーブル自身を参照します)。
他のすべての種類のオブジェクトでは、この列はゼロになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>refclassid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog the referenced object is in
       (must be a shared catalog)
-->
参照されるオブジェクトが入っているシステムカタログのOID（共有カタログである必要があります）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>refobjid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the specific referenced object
-->
特定の参照されるオブジェクトのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>deptype</structfield> <type>char</type>
      </para>
      <para>
<!--
       A code defining the specific semantics of this dependency relationship; see text
-->
この依存関係の特定のセマンティクスを定義するコード（後述）。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   In all cases, a <structname>pg_shdepend</structname> entry indicates that
   the referenced object cannot be dropped without also dropping the dependent
   object.  However, there are several subflavors identified by
   <structfield>deptype</structfield>:
-->
すべての場合において、<structname>pg_shdepend</structname>項目は依存するオブジェクトも削除しない限り、参照されるオブジェクトを削除できないことを示します。
もっとも、<structfield>deptype</structfield>によって指定される以下のようないくつかのオプションもあります。

   <variablelist>
    <varlistentry>
     <term><symbol>SHARED_DEPENDENCY_OWNER</symbol> (<literal>o</literal>)</term>
     <listitem>
      <para>
<!--
       The referenced object (which must be a role) is the owner of the
       dependent object.
-->
       参照されるオブジェクト（ロールである必要があります）が依存するオブジェクトの所有者です。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>SHARED_DEPENDENCY_ACL</symbol> (<literal>a</literal>)</term>
     <listitem>
      <para>
<!--
       The referenced object (which must be a role) is mentioned in the
       ACL (access control list, i.e., privileges list) of the
       dependent object.  (A <symbol>SHARED_DEPENDENCY_ACL</symbol> entry is
       not made for the owner of the object, since the owner will have
       a <symbol>SHARED_DEPENDENCY_OWNER</symbol> entry anyway.)
-->
参照されたオブジェクト（ロールである必要があります）が、依存するオブジェクトのACL（アクセス制御リスト。権限リストのこと）内で述べられています。
（所有者は<symbol>SHARED_DEPENDENCY_OWNER</symbol>項目を持つため、<symbol>SHARED_DEPENDENCY_ACL</symbol>項目は、オブジェクトの所有者に対して作成されません。）
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>SHARED_DEPENDENCY_POLICY</symbol> (<literal>r</literal>)</term>
     <listitem>
      <para>
<!--
       The referenced object (which must be a role) is mentioned as the
       target of a dependent policy object.
-->
参照されたオブジェクト（ロールである必要があります）が、依存するポリシーオブジェクトのターゲットとして述べられています。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>SHARED_DEPENDENCY_PIN</symbol> (<literal>p</literal>)</term>
     <listitem>
      <para>
<!--
       There is no dependent object; this type of entry is a signal
       that the system itself depends on the referenced object, and so
       that object must never be deleted.  Entries of this type are
       created only by <application>initdb</application>.  The columns for the
       dependent object contain zeroes.
-->
依存するオブジェクトはありません。
この種類の項目は、システム自体が参照されるオブジェクトに依存している記号です。
よってオブジェクトは削除されてはいけません。
この種類の項目は<command>initdb</command>によってのみ作成されます。
依存するオブジェクトの列はゼロを含んでいます。
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><symbol>SHARED_DEPENDENCY_TABLESPACE</symbol> (<literal>t</literal>)</term>
     <listitem>
      <para>
       The referenced object (which must be a tablespace) is mentioned as
       the tablespace for a relation that doesn't have storage.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

<!--
   Other dependency flavors might be needed in future.  Note in particular
   that the current definition only supports roles and tablespaces as referenced
   objects.
-->
他の依存関係のオプションが将来必要になる可能性があります。
現状の定義は、参照されるオブジェクトとしてロールのみをサポートしていることに特に注意してください。
  </para>

 </sect1>

 <sect1 id="catalog-pg-shdescription">
  <title><structname>pg_shdescription</structname></title>

  <indexterm zone="catalog-pg-shdescription">
   <primary>pg_shdescription</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_shdescription</structname> stores optional
   descriptions (comments) for shared database objects.  Descriptions can be
   manipulated with the <link linkend="sql-comment"><command>COMMENT</command></link> command and viewed with
   <application>psql</application>'s <literal>\d</literal> commands.
-->
<structname>pg_shdescription</structname>には共有データベースオブジェクトに対する補足説明（コメント）を格納します。
補足説明は<xref linkend="sql-comment"/>コマンドを使用して編集でき、<application>psql</application>の<literal>\d</literal>コマンドを使用して閲覧することができます。
  </para>

  <para>
<!--
   See also <link linkend="catalog-pg-description"><structname>pg_description</structname></link>,
   which performs a similar function for descriptions involving objects
   within a single database.
-->
<link linkend="catalog-pg-description"><structname>pg_description</structname></link>も参照してください。
こちらは、単一データベース内のオブジェクトに関する説明について、同様の機能を行います。
  </para>

  <para>
<!--
   Unlike most system catalogs, <structname>pg_shdescription</structname>
   is shared across all databases of a cluster: there is only one
   copy of <structname>pg_shdescription</structname> per cluster, not
   one per database.
-->
他のシステムカタログと異なり、<structname>pg_shdescription</structname>はクラスタ内のすべてのデータベースに渡って共有されます。
データベース毎に存在するのではなく、1つのクラスタに<structname>pg_shdescription</structname>が1つのみ存在します。
  </para>

  <table>
<!--
   <title><structname>pg_shdescription</structname> Columns</title>
-->
   <title><structname>pg_shdescription</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objoid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the object this description pertains to
-->
この補足説明が属するオブジェクトのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog this object appears in
-->
このオブジェクトが現れるシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>description</structfield> <type>text</type>
      </para>
      <para>
<!--
       Arbitrary text that serves as the description of this object
-->
このオブジェクトの説明となる任意のテキスト
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="catalog-pg-shseclabel">
  <title><structname>pg_shseclabel</structname></title>

  <indexterm zone="catalog-pg-shseclabel">
   <primary>pg_shseclabel</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_shseclabel</structname> stores security
   labels on shared database objects.  Security labels can be manipulated
   with the <link linkend="sql-security-label"><command>SECURITY LABEL</command></link> command.  For an easier
   way to view security labels, see <xref linkend="view-pg-seclabels"/>.
-->
<structname>pg_shseclabel</structname>カタログは、共有データベースオブジェクト上のセキュリティラベルを保存します。
セキュリティラベルは<xref linkend="sql-security-label"/>コマンドで操作されます。
セキュリティラベルを見る簡単な方法は、<xref linkend="view-pg-seclabels"/>を参照してください。
  </para>

  <para>
<!--
   See also <link linkend="catalog-pg-seclabel"><structname>pg_seclabel</structname></link>,
   which performs a similar function for security labels involving objects
   within a single database.
-->
<link linkend="catalog-pg-seclabel"><structname>pg_seclabel</structname></link>も参照してください。
これは、単一データベース内のオブジェクトを含むセキュリティラベルのための類似した機能を提供します。
  </para>

  <para>
<!--
   Unlike most system catalogs, <structname>pg_shseclabel</structname>
   is shared across all databases of a cluster: there is only one
   copy of <structname>pg_shseclabel</structname> per cluster, not
   one per database.
-->
多くのシステムカタログと違い、<structname>pg_shseclabel</structname>はクラスタ内の全てのデータベース間で共有されます。
<structname>pg_shseclabel</structname>は、データベースごとではなく、クラスタごとに1つのみ存在します。
  </para>

  <table>
<!--
   <title><structname>pg_shseclabel</structname> Columns</title>
-->
   <title><structname>pg_shseclabel</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objoid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the object this security label pertains to
-->
このセキュリティラベルが関係するオブジェクトのOIDです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog this object appears in
-->
このオブジェクトが現れるシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>provider</structfield> <type>text</type>
      </para>
      <para>
<!--
       The label provider associated with this label.
-->
このラベルに関連付いたラベルプロバイダです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>label</structfield> <type>text</type>
      </para>
      <para>
<!--
       The security label applied to this object.
-->
このオブジェクトに適用されるセキュリティラベルです。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="catalog-pg-statistic">
  <title><structname>pg_statistic</structname></title>

  <indexterm zone="catalog-pg-statistic">
   <primary>pg_statistic</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_statistic</structname> stores
   statistical data about the contents of the database.  Entries are
   created by <link linkend="sql-analyze"><command>ANALYZE</command></link>
   and subsequently used by the query planner.  Note that all the
   statistical data is inherently approximate, even assuming that it
   is up-to-date.
-->
<structname>pg_statistic</structname>カタログはデータベースの内容に関する統計データを保存します。
項目は<xref linkend="sql-analyze"/>で作成され、後に問い合わせプランナで使用されます。
最新のものと思ってもすべての統計データは本質的に大雑把なものであることに注意してください。
  </para>

  <para>
<!--
   Normally there is one entry, with <structfield>stainherit</structfield> =
   <literal>false</literal>, for each table column that has been analyzed.
   If the table has inheritance children, a second entry with
   <structfield>stainherit</structfield> = <literal>true</literal> is also created.  This row
   represents the column's statistics over the inheritance tree, i.e.,
   statistics for the data you'd see with
   <literal>SELECT <replaceable>column</replaceable> FROM <replaceable>table</replaceable>*</literal>,
   whereas the <structfield>stainherit</structfield> = <literal>false</literal> row represents
   the results of
   <literal>SELECT <replaceable>column</replaceable> FROM ONLY <replaceable>table</replaceable></literal>.
-->
通常は、解析されるテーブル列毎に、<structfield>stainherit</structfield> = <literal>false</literal>を持つ1つの項目が存在します。
テーブルが継承された子を持つ場合、<structfield>stainherit</structfield> = <literal>true</literal>を持つ2つ目の項目が作成されます。
この行は継承ツリー全体に渡る列の統計情報、つまり、<literal>SELECT <replaceable>column</replaceable> FROM <replaceable>table</replaceable>*</literal>で確認できるデータに対する統計情報を表します。
一方で<structfield>stainherit</structfield> = <literal>false</literal>の行は<literal>SELECT <replaceable>column</replaceable> FROM ONLY <replaceable>table</replaceable></literal>の結果を表します。
  </para>

  <para>
<!--
   <structname>pg_statistic</structname> also stores statistical data about
   the values of index expressions.  These are described as if they were
   actual data columns; in particular, <structfield>starelid</structfield>
   references the index.  No entry is made for an ordinary non-expression
   index column, however, since it would be redundant with the entry
   for the underlying table column.  Currently, entries for index expressions
   always have <structfield>stainherit</structfield> = <literal>false</literal>.
-->
<structname>pg_statistic</structname>はインデックス式の値についての統計データも格納します。
これらはあたかも値が実際のデータ列であるかのように表現されます。
特に<structfield>starelid</structfield>はインデックスを参照します。
これは元のテーブル列の項目に対して冗長となるので、普通の式を持たないインデックス列では項目は作成されません。
現在インデックス式用の項目は常に<structfield>stainherit</structfield> = <literal>false</literal>を持ちます。
  </para>

  <para>
<!--
   Since different kinds of statistics might be appropriate for different
   kinds of data, <structname>pg_statistic</structname> is designed not
   to assume very much about what sort of statistics it stores.  Only
   extremely general statistics (such as nullness) are given dedicated
   columns in <structname>pg_statistic</structname>.  Everything else
   is stored in <quote>slots</quote>, which are groups of associated columns
   whose content is identified by a code number in one of the slot's columns.
   For more information see
   <filename>src/include/catalog/pg_statistic.h</filename>.
-->
異なる種類のデータに対しては違った種類の統計が相応しいことから<structname>pg_statistic</structname>はどのような情報を保存するか深く推定しないように設計されています。
（例えばNULLであるような）極端に一般的な統計のみ<structname>pg_statistic</structname>の特定の列に入ります。
その他すべてはスロット列の内の1つのコード番号でその内容が識別される相関している列のグループである<quote>スロット</quote>に保存されます。
<filename>src/include/catalog/pg_statistic.h</filename>を参照してください。
  </para>

  <para>
<!--
   <structname>pg_statistic</structname> should not be readable by the
   public, since even statistical information about a table's contents
   might be considered sensitive.  (Example: minimum and maximum values
   of a salary column might be quite interesting.)
   <link linkend="view-pg-stats"><structname>pg_stats</structname></link>
   is a publicly readable view on
   <structname>pg_statistic</structname> that only exposes information
   about those tables that are readable by the current user.
-->
<structname>pg_statistic</structname>はテーブル内容に関する統計情報と言えども秘密の情報とみなされますので、一般のユーザが読み取り可能であってはいけません。
（給与列の最高額と最低額などは誰もが興味をそそられる良い例ですよね。）
<link linkend="view-pg-stats"><structname>pg_stats</structname></link>は一般のユーザが読み取り可能な<structname>pg_statistic</structname>に対するビューで、既存のユーザが読んでも差し支えないテーブルの情報のみを開示しています。
  </para>

  <table>
<!--
   <title><structname>pg_statistic</structname> Columns</title>
-->
   <title><structname>pg_statistic</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>starelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The table or index that the described column belongs to
-->
記述された列が属するテーブルもしくはインデックス
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>staattnum</structfield> <type>int2</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attnum</structfield>)
      </para>
      <para>
<!--
       The number of the described column
-->
記述された列数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stainherit</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, the stats include inheritance child columns, not just the
       values in the specified relation
-->
真の場合、統計情報には指定されたテーブルの値だけではなく、継承関係の子の列が含まれます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stanullfrac</structfield> <type>float4</type>
      </para>
      <para>
<!--
       The fraction of the column's entries that are null
-->
NULL値である列項目の割合
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stawidth</structfield> <type>int4</type>
      </para>
      <para>
<!--
       The average stored width, in bytes, of nonnull entries
-->
非NULL項目の平均保存幅（バイト単位）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stadistinct</structfield> <type>float4</type>
      </para>
      <para>
<!--
       The number of distinct nonnull data values in the column.
       A value greater than zero is the actual number of distinct values.
       A value less than zero is the negative of a multiplier for the number
       of rows in the table; for example, a column in which about 80% of the
       values are nonnull and each nonnull value appears about twice on
       average could be represented by <structfield>stadistinct</structfield> = -0.4.
       A zero value means the number of distinct values is unknown.
-->
列内で非NULL個別値を持つデータ数。
ゼロより大きい値は実際の個別値の数です。
ゼロより小さい値はテーブル内の行数に対する乗数を負にしたものです。
例えば、約80%の値が非NULLで、それぞれの非NULL値が平均して2回ほど出現する列は<structfield>stadistinct</structfield> = -0.4であると表現されます。
ゼロは個別値の数を特定できない場合です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stakind<replaceable>N</replaceable></structfield> <type>int2</type>
      </para>
      <para>
<!--
       A code number indicating the kind of statistics stored in the
       <replaceable>N</replaceable>th <quote>slot</quote> of the
       <structname>pg_statistic</structname> row.
-->
<structname>pg_statistic</structname>行の<replaceable>N</replaceable>番目の<quote>スロット</quote>に保存されている統計情報の種類を示すコード番号。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>staop<replaceable>N</replaceable></structfield> <type>oid</type>
       (references <link linkend="catalog-pg-operator"><structname>pg_operator</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       An operator used to derive the statistics stored in the
       <replaceable>N</replaceable>th <quote>slot</quote>.  For example, a
       histogram slot would show the <literal>&lt;</literal> operator
       that defines the sort order of the data.
       Zero if the statistics kind does not require an operator.
-->
<replaceable>N</replaceable>番目の<quote>スロット</quote>に保存されている統計情報を引き出すために使われる演算子。
例えば、度数分布スロットはデータの並び換えの順序を定義する<literal>&lt;</literal>演算子を示します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stacoll<replaceable>N</replaceable></structfield> <type>oid</type>
       (references <link linkend="catalog-pg-collation"><structname>pg_collation</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The collation used to derive the statistics stored in the
       <replaceable>N</replaceable>th <quote>slot</quote>.  For example, a
       histogram slot for a collatable column would show the collation that
       defines the sort order of the data.  Zero for noncollatable data.
-->
<replaceable>N</replaceable>番目の<quote>スロット</quote>に格納された統計情報を派生させるために使われる照合順序。
たとえば、照合可能な列のヒストグラムスロットはそのデータをソート順を定義する照合順を表示します。
ゼロなら照合可能ではないデータです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stanumbers<replaceable>N</replaceable></structfield> <type>float4[]</type>
      </para>
      <para>
<!--
       Numerical statistics of the appropriate kind for the
       <replaceable>N</replaceable>th <quote>slot</quote>, or null if the slot
       kind does not involve numerical values
-->
<replaceable>N</replaceable>番目の<quote>スロット</quote>に対する適切な種類の数値統計情報、もしくはスロットの種類に数値が含まれない時はNULLです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stavalues<replaceable>N</replaceable></structfield> <type>anyarray</type>
      </para>
      <para>
<!--
       Column data values of the appropriate kind for the
       <replaceable>N</replaceable>th <quote>slot</quote>, or null if the slot
       kind does not store any data values.  Each array's element
       values are actually of the specific column's data type, or a related
       type such as an array's element type, so there is no way to define
       these columns' type more specifically than <type>anyarray</type>.
-->
<replaceable>N</replaceable>番目の<quote>スロット</quote>に対する適切な種類の列データの値、もしくはスロットの種類にデータ値が何も保存されていない場合はNULL。
それぞれの配列要素の値は実際には特定された列のデータ型、もしくは配列要素の型といったような関連のある型になります。ですから<type>anyarray</type>とする以外に列型を定義することはできません。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="catalog-pg-statistic-ext">
  <title><structname>pg_statistic_ext</structname></title>

  <indexterm zone="catalog-pg-statistic-ext">
   <primary>pg_statistic_ext</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_statistic_ext</structname>
   holds definitions of extended planner statistics.
   Each row in this catalog corresponds to a <firstterm>statistics object</firstterm>
   created with <link linkend="sql-createstatistics"><command>CREATE STATISTICS</command></link>.
-->
カタログ<structname>pg_statistic_ext</structname>はプランナの拡張統計情報の定義を保持します。
このカタログの各行は<xref linkend="sql-createstatistics"/>で作成された<firstterm>統計オブジェクト</firstterm>に対応します。
  </para>

  <table>
<!--
   <title><structname>pg_statistic_ext</structname> Columns</title>
-->
   <title><structname>pg_statistic_ext</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Table containing the columns described by this object
-->
このオブジェクトが記述する列を含むテーブル
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the statistics object
-->
統計オブジェクトの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this statistics object
-->
この統計オブジェクトを含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the statistics object
-->
統計オブジェクトの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxstattarget</structfield> <type>int4</type>
      </para>
      <para>
<!--
       <structfield>stxstattarget</structfield> controls the level of detail
       of statistics accumulated for this statistics object by
       <link linkend="sql-analyze"><command>ANALYZE</command></link>.
       A zero value indicates that no statistics should be collected.
       A negative value says to use the maximum of the statistics targets of
       the referenced columns, if set, or the system default statistics target.
       Positive values of <structfield>stxstattarget</structfield>
       determine the target number of <quote>most common values</quote>
       to collect.
-->
<structfield>stxstattarget</structfield>は<xref linkend="sql-analyze"/>によるこの列に対する蓄積された統計情報をどの程度詳しく管理するかを規定します。
値がゼロの場合は統計情報を収集しません。
負の値の場合は、参照する列の統計情報の収集目標の最大値があればそれを使い、なければシステムのデフォルトの統計目標を使用すべきであるということです。
正の値の<structfield>stxstattarget</structfield>は、収集する<quote>最も一般的な値</quote>の目標となる数を決定します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxkeys</structfield> <type>int2vector</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attnum</structfield>)
      </para>
      <para>
<!--
       An array of attribute numbers, indicating which table columns are
       covered by this statistics object;
       for example a value of <literal>1 3</literal> would
       mean that the first and the third table columns are covered
-->
属性番号の配列で、どのテーブル列が統計オブジェクトに含まれるかを示します。
例えば、値が<literal>1 3</literal>なら、テーブルの1番目と3番目の列が含まれるということになります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxkind</structfield> <type>char[]</type>
      </para>
      <para>
<!--
       An array containing codes for the enabled statistics kinds;
       valid values are:
       <literal>d</literal> for n-distinct statistics,
       <literal>f</literal> for functional dependency statistics,
       <literal>m</literal> for most common values (MCV) list statistics, and
       <literal>e</literal> for expression statistics
-->
有効にされた統計種別のコードが入る配列です。
有効な値は、N個別統計を表す<literal>d</literal>と、関数従属統計を表す<literal>f</literal>と最も共通した値(MCV)を表す<literal>m</literal>です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxexprs</structfield> <type>pg_node_tree</type>
      </para>
      <para>
       Expression trees (in <function>nodeToString()</function>
       representation) for statistics object attributes that are not simple
       column references.  This is a list with one element per expression.
       Null if all statistics object attributes are simple references.
      </para></entry>
     </row>

    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The <structname>pg_statistic_ext</structname> entry is filled in
   completely during <link linkend="sql-createstatistics"><command>CREATE STATISTICS</command></link>, but the actual
   statistical values are not computed then.
   Subsequent <link linkend="sql-analyze"><command>ANALYZE</command></link> commands compute the desired values
   and populate an entry in the
   <link linkend="catalog-pg-statistic-ext-data"><structname>pg_statistic_ext_data</structname></link>
   catalog.
-->
<command>CREATE STATISTICS</command>の実行中に<structname>pg_statistic_ext</structname>エントリはすべて満たされますが、実際の統計データ値は計算されません。
あとで実行される<command>ANALYZE</command>コマンドが必要な値を計算し、<link linkend="catalog-pg-statistic-ext-data"><structname>pg_statistic_ext_data</structname></link>カタログのエントリに投入します。
  </para>
 </sect1>

 <sect1 id="catalog-pg-statistic-ext-data">
  <title><structname>pg_statistic_ext_data</structname></title>

  <indexterm zone="catalog-pg-statistic-ext">
   <primary>pg_statistic_ext_data</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_statistic_ext_data</structname>
   holds data for extended planner statistics defined in
   <link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>.
   Each row in this catalog corresponds to a <firstterm>statistics object</firstterm>
   created with <link linkend="sql-createstatistics"><command>CREATE STATISTICS</command></link>.
-->
カタログ<structname>pg_statistic_ext_data</structname>は、<structname>pg_statistic_ext</structname>で定義されたプランナの拡張統計情報のデータを保持します。
このカタログの個々の行は<xref linkend="sql-createstatistics"/>で作成された<firstterm>統計情報オブジェクト</firstterm>に関連します。
  </para>

  <para>
<!--
   Like <link linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link>,
   <structname>pg_statistic_ext_data</structname> should not be
   readable by the public, since the contents might be considered sensitive.
   (Example: most common combinations of values in columns might be quite
   interesting.)
   <link linkend="view-pg-stats-ext"><structname>pg_stats_ext</structname></link>
   is a publicly readable view
   on <structname>pg_statistic_ext_data</structname> (after joining
   with <link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>) that only exposes
   information about those tables and columns that are readable by the
   current user.
-->
<structname>pg_statistic</structname>同様、<structname>pg_statistic_ext_data</structname>はテーブル内容が秘密の情報とみなされますので、一般のユーザが読み取り可能であってはいけません。
（列の値の最も共通した組み合わせは誰もが興味をそそられる良い例ですよね。）
<link linkend="view-pg-stats-ext"><structname>pg_stats_ext</structname></link>は一般のユーザが読み取り可能な（<structname>pg_statistic_ext</structname>と結合後の）<structname>pg_statistic_ext_data</structname>に対するビューで、現在のユーザが読んでも差し支えないテーブルと列の情報のみを開示しています。
  </para>

  <table>
<!--
   <title><structname>pg_statistic_ext_data</structname> Columns</title>
-->
   <title><structname>pg_statistic_ext_data</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Extended statistics object containing the definition for this data
-->
このデータの定義を含む拡張統計情報オブジェクト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxdndistinct</structfield> <type>pg_ndistinct</type>
      </para>
      <para>
<!--
       N-distinct counts, serialized as <structname>pg_ndistinct</structname> type
-->
<structname>pg_ndistinct</structname>型にシリアライズされたN個別値の数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxddependencies</structfield> <type>pg_dependencies</type>
      </para>
      <para>
<!--
       Functional dependency statistics, serialized
       as <structname>pg_dependencies</structname> type
-->
<structname>pg_dependencies</structname>型にシリアライズされた関数従属統計
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxdmcv</structfield> <type>pg_mcv_list</type>
      </para>
      <para>
<!--
       MCV (most-common values) list statistics, serialized as
       <structname>pg_mcv_list</structname> type
-->
<structname>pg_mcv_list</structname>型にシリアライズされたMCV（最も共通の値）リスト統計情報
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>stxdexpr</structfield> <type>pg_statistic[]</type>
      </para>
      <para>
       Per-expression statistics, serialized as an array of
       <structname>pg_statistic</structname> type
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="catalog-pg-subscription">
  <title><structname>pg_subscription</structname></title>

  <indexterm zone="catalog-pg-subscription">
   <primary>pg_subscription</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_subscription</structname> contains all existing
   logical replication subscriptions.  For more information about logical
   replication see <xref linkend="logical-replication"/>.
-->
カタログ<structname>pg_subscription</structname>には、存在するすべての論理レプリケーションのサブスクリプションが入ります。
論理レプリケーションについての詳細な情報は<xref linkend="logical-replication"/>を参照してください。
  </para>

  <para>
<!--
   Unlike most system catalogs, <structname>pg_subscription</structname> is
   shared across all databases of a cluster: there is only one copy
   of <structname>pg_subscription</structname> per cluster, not one per
   database.
-->
ほとんどのシステムカタログとは異なり、<structname>pg_subscription</structname>はクラスタ内の全データベースで共有されます。
つまりクラスタごとに<structname>pg_subscription</structname>の実体は1つだけ存在し、データベースごとに1つではありません。
  </para>

  <para>
<!--
   Access to the column <structfield>subconninfo</structfield> is revoked from
   normal users, because it could contain plain-text passwords.
-->
列<structfield>subconninfo</structfield>には平文のパスワードが含まれる可能性があるため、一般ユーザによるアクセス権は取り消されています。
  </para>

  <table>
<!--
   <title><structname>pg_subscription</structname> Columns</title>
-->
   <title><structname>pg_subscription</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subdbid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the database that the subscription resides in
-->
サブスクリプションが存在するデータベースのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the subscription
-->
サブスクリプションの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the subscription
-->
サブスクリプションの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subenabled</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, the subscription is enabled and should be replicating
-->
真の場合、サブスクリプションは有効でレプリケーションが行われています。
      </para></entry>
     </row>

    <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subbinary</structfield> <type>bool</type>
      </para>
      <para>
       If true, the subscription will request that the publisher send data
       in binary format
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>substream</structfield> <type>bool</type>
      </para>
      <para>
       If true, the subscription will allow streaming of in-progress
       transactions
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subconninfo</structfield> <type>text</type>
      </para>
      <para>
<!--
       Connection string to the upstream database
-->
上流のデータベースへの接続文字列
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subslotname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the replication slot in the upstream database (also used
       for the local replication origin name);
       null represents <literal>NONE</literal>
-->
上流のデータベースのレプリケーションスロットの名前。
（ローカルレプリケーションのオリジン名としても使われます。）
NULLは<literal>NONE</literal>を表します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subsynccommit</structfield> <type>text</type>
      </para>
      <para>
<!--
       The <varname>synchronous_commit</varname>
       setting for the subscription's workers to use
-->
サブスクリプションワーカの<varname>synchronous_commit</varname>の設定値が入ります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>subpublications</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Array of subscribed publication names. These reference
       publications defined in the upstream database. For more on publications
       see <xref linkend="logical-replication-publication"/>.
-->
サブスクライブされるパブリケーション名の配列です。
パブリッシャーのサーバのパブリケーションを参照します。
パブリケーションについての詳細は<xref linkend="logical-replication-publication"/>を参照してください。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="catalog-pg-subscription-rel">
  <title><structname>pg_subscription_rel</structname></title>

  <indexterm zone="catalog-pg-subscription-rel">
   <primary>pg_subscription_rel</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_subscription_rel</structname> contains the
   state for each replicated relation in each subscription.  This is a
   many-to-many mapping.
-->
カタログ<structname>pg_subscription_rel</structname>には各サブスクリプションで複製される各リレーションの状態が入ります。
これは多対多のマッピングです。
  </para>

  <para>
<!--
   This catalog only contains tables known to the subscription after running
   either <link linkend="sql-createsubscription"><command>CREATE SUBSCRIPTION</command></link> or
   <link linkend="sql-altersubscription"><command>ALTER SUBSCRIPTION ... REFRESH
   PUBLICATION</command></link>.
-->
このカタログには<command>CREATE SUBSCRIPTION</command>あるいは<command>ALTER SUBSCRIPTION ... REFRESH PUBLICATION</command>を実行した後でサブスクリプションに知られることになったテーブルのみが含まれます。
  </para>

  <table>
<!--
   <title><structname>pg_subscription_rel</structname> Columns</title>
-->
   <title><structname>pg_subscription_rel</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srsubid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-subscription"><structname>pg_subscription</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Reference to subscription
-->
サブスクリプションの参照
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Reference to relation
-->
リレーションの参照
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srsubstate</structfield> <type>char</type>
      </para>
      <para>
<!--
       State code:
       <literal>i</literal> = initialize,
       <literal>d</literal> = data is being copied,
       <literal>f</literal> = finished table copy,
       <literal>s</literal> = synchronized,
       <literal>r</literal> = ready (normal replication)
-->
状態コードで、<literal>i</literal>は初期化、<literal>d</literal>はデータのコピー中、<literal>s</literal>は同期済み、<literal>r</literal>は準備完了（通常のレプリケーション）を表します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srsublsn</structfield> <type>pg_lsn</type>
      </para>
      <para>
<!--
       Remote LSN of the state change used for synchronization coordination
       when in <literal>s</literal> or <literal>r</literal> states,
       otherwise null
-->
<literal>s</literal>あるいは<literal>r</literal>の状態なら、同期の調停で使われる状態変更のリモートLSNです。
それ以外の場合はNULLです。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="catalog-pg-tablespace">
  <title><structname>pg_tablespace</structname></title>

  <indexterm zone="catalog-pg-tablespace">
   <primary>pg_tablespace</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_tablespace</structname> stores information
   about the available tablespaces.  Tables can be placed in particular
   tablespaces to aid administration of disk layout.
-->
<structname>pg_tablespace</structname>カタログは利用できるテーブル空間についての情報を格納します。
テーブルは、ディスクの配置を管理できるようにするために特定のテーブル空間に格納することができます。
  </para>

  <para>
<!--
   Unlike most system catalogs, <structname>pg_tablespace</structname>
   is shared across all databases of a cluster: there is only one
   copy of <structname>pg_tablespace</structname> per cluster, not
   one per database.
-->
システムカタログの大部分とは違って、<structname>pg_tablespace</structname>は、すべてのクラスタのデータベース間で共有されます。
（データベース毎ではなく）クラスタ毎に、<structname>pg_tablespace</structname>のコピーが1つだけ存在します。
  </para>

  <table>
<!--
   <title><structname>pg_tablespace</structname> Columns</title>
-->
   <title><structname>pg_tablespace</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>spcname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Tablespace name
-->
テーブル空間名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>spcowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the tablespace, usually the user who created it
-->
テーブル空間の所有者。たいていはテーブル空間を作成したユーザ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>spcacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>spcoptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Tablespace-level options, as <quote>keyword=value</quote> strings
-->
<quote>keyword=value</quote>文字列のようなテーブル空間レベルのオプション。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-transform">
  <title><structname>pg_transform</structname></title>

  <indexterm zone="catalog-pg-transform">
   <primary>pg_transform</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_transform</structname> stores information about
   transforms, which are a mechanism to adapt data types to procedural
   languages.  See <xref linkend="sql-createtransform"/> for more information.
-->
カタログ<structname>pg_transform</structname>は変換についての情報を格納します。
変換はデータ型を手続き言語に適合させるための機構です。
詳しくは<xref linkend="sql-createtransform"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_transform</structname> Columns</title>
-->
   <title><structname>pg_transform</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trftype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the data type this transform is for
-->
この変換の対象のデータ型のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trflang</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-language"><structname>pg_language</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the language this transform is for
-->
この変換の対象の言語のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trffromsql</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the function to use when converting the data type for input
       to the procedural language (e.g., function parameters).  Zero is stored
       if the default behavior should be used.
-->
データ型を手続き言語への入力（例えば関数のパラメータ）に変換する時に使う関数のOID。
この操作がサポートされない場合はゼロが格納されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trftosql</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the function to use when converting output from the
       procedural language (e.g., return values) to the data type.  Zero is
       stored if the default behavior should be used.
-->
手続き言語からの出力（例えば戻り値）をデータ型に変換する時に使う関数のOID。
この操作がサポートされないときはゼロが格納されます。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-trigger">
  <title><structname>pg_trigger</structname></title>

  <indexterm zone="catalog-pg-trigger">
   <primary>pg_trigger</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_trigger</structname> stores triggers on tables
   and views.
   See <xref linkend="sql-createtrigger"/>
   for more information.
-->
<structname>pg_trigger</structname>カタログはテーブルおよびビュー上のトリガを保存します。
<xref linkend="sql-createtrigger"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_trigger</structname> Columns</title>
-->
   <title><structname>pg_trigger</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The table this trigger is on
-->
トリガのかかっているテーブル
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgparentid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-trigger"><structname>pg_trigger</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Parent trigger that this trigger is cloned from (this happens when
       partitions are created or attached to a partitioned table);
       zero if not a clone
-->
このトリガが複製された親のトリガです。複製されていなければゼロです。
パーティションが作成されたか、あるいはパーティションテーブルにアタッチされたときに起こります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Trigger name (must be unique among triggers of same table)
-->
トリガ名（同一テーブル内で一意である必要があります）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgfoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The function to be called
-->
呼び出される関数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgtype</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Bit mask identifying trigger firing conditions
-->
トリガ発行条件を指定するビットマスク
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgenabled</structfield> <type>char</type>
      </para>
      <para>
<!--
       Controls in which <xref linkend="guc-session-replication-role"/> modes
       the trigger fires.
       <literal>O</literal> = trigger fires in <quote>origin</quote> and <quote>local</quote> modes,
       <literal>D</literal> = trigger is disabled,
       <literal>R</literal> = trigger fires in <quote>replica</quote> mode,
       <literal>A</literal> = trigger fires always.
-->
どの<xref linkend="guc-session-replication-role"/>モードでトリガが発行されるかを制御します。
<literal>O</literal> = <quote>起点</quote>モードと<quote>ローカル</quote>モードでトリガを発行します,
<literal>D</literal> = トリガは無効です,
<literal>R</literal> = <quote>replica</quote>モードでトリガを発行します,
<literal>A</literal> = 常にトリガを発行します.
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgisinternal</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if trigger is internally generated (usually, to enforce
       the constraint identified by <structfield>tgconstraint</structfield>)
-->
トリガが(通常<structfield>tgconstraint</structfield>により識別される制約を強制するために)内部的に生成される場合は真。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgconstrrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The table referenced by a referential integrity constraint
       (zero if trigger is not for a referential integrity constraint)
-->
参照整合性制約で参照されるテーブル
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgconstrindid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The index supporting a unique, primary key, referential integrity,
       or exclusion constraint
       (zero if trigger is not for one of these types of constraint)
-->
一意性、主キー、参照整合性制約や排他制約をサポートするインデックス
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgconstraint</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-constraint"><structname>pg_constraint</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The <link linkend="catalog-pg-constraint"><structname>pg_constraint</structname></link> entry associated with the trigger
       (zero if trigger is not for a constraint)
-->
存在する場合は、トリガに関連する<structname>pg_constraint</structname>の項目
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgdeferrable</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if constraint trigger is deferrable
-->
トリガが遅延可能である場合は真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tginitdeferred</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if constraint trigger is initially deferred
-->
トリガの初期状態が遅延可能と宣言されていれば真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgnargs</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Number of argument strings passed to trigger function
-->
トリガ関数に渡される引数の数
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgattr</structfield> <type>int2vector</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attnum</structfield>)
      </para>
      <para>
<!--
       Column numbers, if trigger is column-specific; otherwise an
       empty array
-->
トリガが列固有であれば列番号。さもなくば空の配列
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgargs</structfield> <type>bytea</type>
      </para>
      <para>
<!--
       Argument strings to pass to trigger, each NULL-terminated
-->
トリガに渡される引数文字列で、それぞれヌル文字で終結
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgqual</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       Expression tree (in <function>nodeToString()</function>
       representation) for the trigger's <literal>WHEN</literal> condition, or null
       if none
-->
トリガの<literal>WHEN</literal>条件に関する(<function>nodeToString()</function>表現による)式ツリー。
存在しなければNULL
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgoldtable</structfield> <type>name</type>
      </para>
      <para>
<!--
       <literal>REFERENCING</literal> clause name for <literal>OLD TABLE</literal>,
       or null if none
-->
<literal>OLD TABLE</literal>に対する<literal>REFERENCING</literal>句の名前、なければNULL
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tgnewtable</structfield> <type>name</type>
      </para>
      <para>
<!--
       <literal>REFERENCING</literal> clause name for <literal>NEW TABLE</literal>,
       or null if none
-->
<literal>NEW TABLE</literal>に対する<literal>REFERENCING</literal>句の名前、なければNULL
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Currently, column-specific triggering is supported only for
   <literal>UPDATE</literal> events, and so <structfield>tgattr</structfield> is relevant
   only for that event type.  <structfield>tgtype</structfield> might
   contain bits for other event types as well, but those are presumed
   to be table-wide regardless of what is in <structfield>tgattr</structfield>.
-->
現在、列固有のトリガ処理は<literal>UPDATE</literal>イベントのみでサポートされていますので、<structfield>tgattr</structfield>はこの種類のイベントにのみ関連します。
<structfield>tgtype</structfield>にはこの他のイベント用のビットが含まれているかもしれませんが、これらは<structfield>tgattr</structfield>の値とは関係ないテーブル全体のものであると仮定されます。
  </para>

  <note>
   <para>
<!--
    When <structfield>tgconstraint</structfield> is nonzero,
    <structfield>tgconstrrelid</structfield>, <structfield>tgconstrindid</structfield>,
    <structfield>tgdeferrable</structfield>, and <structfield>tginitdeferred</structfield> are
    largely redundant with the referenced <link linkend="catalog-pg-constraint"><structname>pg_constraint</structname></link> entry.
    However, it is possible for a non-deferrable trigger to be associated
    with a deferrable constraint: foreign key constraints can have some
    deferrable and some non-deferrable triggers.
-->
<structfield>tgconstraint</structfield>がゼロではないとき、<structfield>tgconstrrelid</structfield>、<structfield>tgconstrindid</structfield>、<structfield>tgdeferrable</structfield>、<structfield>tginitdeferred</structfield>は参照される<structname>pg_constraint</structname>項目と共に冗長となっています。
しかし遅延不可能なトリガを遅延可能な制約に関連付けさせることが可能です。
外部キー制約では一部を遅延可能、一部を遅延不可能なトリガを持つことができます。
   </para>
  </note>

  <note>
   <para>
<!--
    <literal>pg_class.relhastriggers</literal>
    must be true if a relation has any triggers in this catalog.
-->
<literal>pg_class.relhastriggers</literal>は、リレーションがこのカタログ内にトリガを持っている場合は真とならなければなりません。
   </para>
  </note>

 </sect1>


 <sect1 id="catalog-pg-ts-config">
  <title><structname>pg_ts_config</structname></title>

  <indexterm zone="catalog-pg-ts-config">
   <primary>pg_ts_config</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_ts_config</structname> catalog contains entries
   representing text search configurations.  A configuration specifies
   a particular text search parser and a list of dictionaries to use
   for each of the parser's output token types.  The parser is shown
   in the <structname>pg_ts_config</structname> entry, but the
   token-to-dictionary mapping is defined by subsidiary entries in <link
   linkend="catalog-pg-ts-config-map"><structname>pg_ts_config_map</structname></link>.
-->
<structname>pg_ts_config</structname>カタログは、テキスト検索の設定を表す項目を含みます。
設定は、特定のテキスト検索パーサと、それぞれのパーサの出力トークン型のために使用される辞書の一覧を指定します。
パーサは<structname>pg_ts_config</structname>項目内に示されていますが、トークンと辞書の対応付けは、<link linkend="catalog-pg-ts-config-map"><structname>pg_ts_config_map</structname></link>内の補助項目内に定義されています。
  </para>

  <para>
<!--
   <productname>PostgreSQL</productname>'s text search features are
   described at length in <xref linkend="textsearch"/>.
-->
   <productname>PostgreSQL</productname>のテキスト検索機能については<xref linkend="textsearch"/>で詳しく説明します。
  </para>

  <table>
<!--
   <title><structname>pg_ts_config</structname> Columns</title>
-->
   <title><structname>pg_ts_config</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cfgname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Text search configuration name
-->
テキスト検索設定の名称
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cfgnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this configuration
-->
この設定を含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cfgowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the configuration
-->
この設定の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cfgparser</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-ts-parser"><structname>pg_ts_parser</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the text search parser for this configuration
-->
この設定のためのテキスト検索パーサのOID
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

<!-- split-catalogs2-end -->
<!-- split-catalogs3-start -->

 <sect1 id="catalog-pg-ts-config-map">
  <title><structname>pg_ts_config_map</structname></title>

  <indexterm zone="catalog-pg-ts-config-map">
   <primary>pg_ts_config_map</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_ts_config_map</structname> catalog contains entries
   showing which text search dictionaries should be consulted, and in
   what order, for each output token type of each text search configuration's
   parser.
-->
<structname>pg_ts_config_map</structname>カタログは、どのテキスト検索辞書を参照するべきかを示す項目を含みます。
さらに、それぞれのテキスト検索設定のパーサの出力トークンをどの順番で参照すべきかを示す項目を含みます。
  </para>

  <para>
<!--
   <productname>PostgreSQL</productname>'s text search features are
   described at length in <xref linkend="textsearch"/>.
-->
   <productname>PostgreSQL</productname>のテキスト検索機能については<xref linkend="textsearch"/>で詳しく説明します。
  </para>

  <table>
<!--
   <title><structname>pg_ts_config_map</structname> Columns</title>
-->
   <title><structname>pg_ts_config_map</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>mapcfg</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-ts-config"><structname>pg_ts_config</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the <link linkend="catalog-pg-ts-config"><structname>pg_ts_config</structname></link> entry owning this map entry
-->
このマップ項目を所有する<structname>pg_ts_config</structname>項目のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>maptokentype</structfield> <type>int4</type>
      </para>
      <para>
<!--
       A token type emitted by the configuration's parser
-->
設定のパーサにより発行されるトークンの種類
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>mapseqno</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Order in which to consult this entry (lower
       <structfield>mapseqno</structfield>s first)
-->
この項目を参照する順番(小さい<structfield>mapseqno</structfield>が先です)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>mapdict</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-ts-dict"><structname>pg_ts_dict</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the text search dictionary to consult
-->
参照するテキスト検索辞書のOID
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-ts-dict">
  <title><structname>pg_ts_dict</structname></title>

  <indexterm zone="catalog-pg-ts-dict">
   <primary>pg_ts_dict</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_ts_dict</structname> catalog contains entries
   defining text search dictionaries.  A dictionary depends on a text
   search template, which specifies all the implementation functions
   needed; the dictionary itself provides values for the user-settable
   parameters supported by the template.  This division of labor allows
   dictionaries to be created by unprivileged users.  The parameters
   are specified by a text string <structfield>dictinitoption</structfield>,
   whose format and meaning vary depending on the template.
-->
<structname>pg_ts_dict</structname>カタログは、テキスト検索辞書を定義する項目を含みます。
辞書は、必要な実装関数すべてを指定するテキスト検索のテンプレートに依存します。
辞書自身は、テンプレートによりサポートされている、ユーザが設定可能なパラメータ値を提供します。
ここでは、辞書が特権のないユーザにより作成されることを許可します。
パラメータは、<structfield>dictinitoption</structfield>テキスト文字列で指定されます。
その書式と意味はテンプレートにより変化します。
  </para>

  <para>
<!--
   <productname>PostgreSQL</productname>'s text search features are
   described at length in <xref linkend="textsearch"/>.
-->
   <productname>PostgreSQL</productname>のテキスト検索機能については<xref linkend="textsearch"/>で詳しく説明します。
  </para>

  <table>
<!--
   <title><structname>pg_ts_dict</structname> Columns</title>
-->
   <title><structname>pg_ts_dict</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dictname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Text search dictionary name
-->
テキスト検索辞書の名称
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dictnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this dictionary
-->
この辞書を含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dictowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the dictionary
-->
辞書の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dicttemplate</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-ts-template"><structname>pg_ts_template</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the text search template for this dictionary
-->
辞書のためのテキスト検索テンプレートのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dictinitoption</structfield> <type>text</type>
      </para>
      <para>
<!--
       Initialization option string for the template
-->
テンプレートのための初期化オプション文字列
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-ts-parser">
  <title><structname>pg_ts_parser</structname></title>

  <indexterm zone="catalog-pg-ts-parser">
   <primary>pg_ts_parser</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_ts_parser</structname> catalog contains entries
   defining text search parsers.  A parser is responsible for splitting
   input text into lexemes and assigning a token type to each lexeme.
   Since a parser must be implemented by C-language-level functions,
   creation of new parsers is restricted to database superusers.
-->
<structname>pg_ts_parser</structname>カタログはテキスト検索パーサを定義する項目を含みます。
パーサは、入力テキストを語彙素に分割することとトークン型を語彙素に割り当てることに責任を持ちます。
パーサはC言語レベルの関数で実装されていなくてはいけないため、新規のパーサの作成はデータベースのスーパーユーザに制限されています。
  </para>

  <para>
<!--
   <productname>PostgreSQL</productname>'s text search features are
   described at length in <xref linkend="textsearch"/>.
-->
   <productname>PostgreSQL</productname>のテキスト検索機能については<xref linkend="textsearch"/>で詳しく説明します。
  </para>

  <table>
<!--
   <title><structname>pg_ts_parser</structname> Columns</title>
-->
   <title><structname>pg_ts_parser</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prsname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Text search parser name
-->
テキスト検索パーサの名称
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prsnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this parser
-->
このパーサを含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prsstart</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the parser's startup function
-->
パーサ起動関数のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prstoken</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the parser's next-token function
-->
パーサの次のトークン関数のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prsend</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the parser's shutdown function
-->
パーサの終了関数のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prsheadline</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the parser's headline function (zero if none)
-->
パーサの見出し関数のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prslextype</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the parser's lextype function
-->
パーサの字句型関数のOID
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-ts-template">
  <title><structname>pg_ts_template</structname></title>

  <indexterm zone="catalog-pg-ts-template">
   <primary>pg_ts_template</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_ts_template</structname> catalog contains entries
   defining text search templates.  A template is the implementation
   skeleton for a class of text search dictionaries.
   Since a template must be implemented by C-language-level functions,
   creation of new templates is restricted to database superusers.
-->
<structname>pg_ts_template</structname>カタログはテキスト検索テンプレートを定義する項目を含みます。
テンプレートはテキスト検索辞書クラスの骨格を実装したものです。
テンプレートはC言語レベルの関数で実装されなくてはいけないため、新規のテンプレートの作成はデータベースのスーパーユーザに制限されています。
  </para>

  <para>
<!--
   <productname>PostgreSQL</productname>'s text search features are
   described at length in <xref linkend="textsearch"/>.
-->
   <productname>PostgreSQL</productname>のテキスト検索機能については<xref linkend="textsearch"/>で詳しく説明します。
  </para>

  <table>
<!--
   <title><structname>pg_ts_template</structname> Columns</title>
-->
   <title><structname>pg_ts_template</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tmplname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Text search template name
-->
テキスト検索テンプレートの名称
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tmplnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this template
-->
このテンプレートを含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tmplinit</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the template's initialization function (zero if none)
-->
テンプレートの初期化関数のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tmpllexize</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the template's lexize function
-->
テンプレートの字句関数のOID
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="catalog-pg-type">
  <title><structname>pg_type</structname></title>

  <indexterm zone="catalog-pg-type">
   <primary>pg_type</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_type</structname> stores information about data
   types.  Base types and enum types (scalar types) are created with
   <link linkend="sql-createtype"><command>CREATE TYPE</command></link>, and
   domains with
   <link linkend="sql-createdomain"><command>CREATE DOMAIN</command></link>.
   A composite type is automatically created for each table in the database, to
   represent the row structure of the table.  It is also possible to create
   composite types with <command>CREATE TYPE AS</command>.
-->
<structname>pg_type</structname>カタログはデータ型の情報を保存します。
基本型と列挙型（スカラ型）は<xref linkend="sql-createtype"/>で作成され、ドメインは<xref linkend="sql-createdomain"/>で作成されます。
複合型がテーブルの行構成を表すためデータベースの個々のテーブルに対して自動的に作成されます。
複合型を<command>CREATE TYPE AS</command>で作成することもできます。
  </para>

  <table>
<!--
   <title><structname>pg_type</structname> Columns</title>
-->
   <title><structname>pg_type</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Data type name
-->
データ型名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace that contains this type
-->
この型を含む名前空間のOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typowner</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Owner of the type
-->
型の所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typlen</structfield> <type>int2</type>
      </para>
      <para>
<!--
       For a fixed-size type, <structfield>typlen</structfield> is the number
       of bytes in the internal representation of the type.  But for a
       variable-length type, <structfield>typlen</structfield> is negative.
       -1 indicates a <quote>varlena</quote> type (one that has a length word),
       -2 indicates a null-terminated C string.
-->
固定長型では、<structfield>typlen</structfield>は型の内部表現内でのバイト数です。
しかし、可変長型では<structfield>typlen</structfield>は負です。
-1は<quote>varlena</quote>型（最初の4バイトにデータ長を含むもの）を意味し、-2はヌル終端のC言語の文字列を示します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typbyval</structfield> <type>bool</type>
      </para>
      <para>
<!--
       <structfield>typbyval</structfield> determines whether internal
       routines pass a value of this type by value or by reference.
       <structfield>typbyval</structfield> had better be false if
       <structfield>typlen</structfield> is not 1, 2, or 4 (or 8 on machines
       where Datum is 8 bytes).
       Variable-length types are always passed by reference. Note that
       <structfield>typbyval</structfield> can be false even if the
       length would allow pass-by-value.
-->
<structfield>typbyval</structfield>は内部関数がこの型の値を値渡しか、参照渡しかを決定します。
<structfield>typlen</structfield>が1、2、4バイト長（もしくはDatumが8バイトのマシン上では8バイト長）以外であれば、<structfield>typbyval</structfield>を偽にする必要があります。
可変長型は必ず参照渡しになります。
<structfield>typbyval</structfield>は長さが値渡し可能でも偽になり得ることに注意してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typtype</structfield> <type>char</type>
      </para>
      <para>
<!--
       <structfield>typtype</structfield> is
       <literal>b</literal> for a base type,
       <literal>c</literal> for a composite type (e.g., a table's row type),
       <literal>d</literal> for a domain,
       <literal>e</literal> for an enum type,
       <literal>p</literal> for a pseudo-type,
       <literal>r</literal> for a range type, or
       <literal>m</literal> for a multirange type.
       See also <structfield>typrelid</structfield> and
       <structfield>typbasetype</structfield>.
-->
<structfield>typtype</structfield>では、<literal>b</literal>は基本型、<literal>c</literal>は複合型（例えばテーブルの行の型）、<literal>d</literal>は派生型（ドメインなど）、<literal>e</literal>は列挙型、<literal>p</literal>は疑似型、<literal>r</literal>は範囲型です。
<structfield>typrelid</structfield>および<structfield>typbasetype</structfield>も参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typcategory</structfield> <type>char</type>
      </para>
      <para>
<!--
       <structfield>typcategory</structfield> is an arbitrary classification
       of data types that is used by the parser to determine which implicit
       casts should be <quote>preferred</quote>.
       See <xref linkend="catalog-typcategory-table"/>.
-->
<structfield>typcategory</structfield>は、パーサがどの暗黙のキャストが<quote>選択</quote>されるべきか決定するのに使用されるデータ型の任意の分類です。
<xref linkend="catalog-typcategory-table"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typispreferred</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if the type is a preferred cast target within its
       <structfield>typcategory</structfield>
-->
型が<structfield>typcategory</structfield>内で選択されたキャスト対象である場合に真です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typisdefined</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if the type is defined, false if this is a placeholder
       entry for a not-yet-defined type.  When
       <structfield>typisdefined</structfield> is false, nothing
       except the type name, namespace, and OID can be relied on.
-->
型が定義されると真、ここが未定義型に対する予備の場所である時は偽。
<structfield>typisdefined</structfield>が偽の場合、型名と名前空間とOID以外は信頼すべきでありません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typdelim</structfield> <type>char</type>
      </para>
      <para>
<!--
       Character that separates two values of this type when parsing
       array input.  Note that the delimiter is associated with the array
       element data type, not the array data type.
-->
配列入力の構文解析をする際にこの型の2つの値を分離する文字。
区切り文字は配列データ型ではなく配列要素データ型に関連付けられることに注意してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typrelid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If this is a composite type (see
       <structfield>typtype</structfield>), then this column points to
       the <link linkend="catalog-pg-class"><structname>pg_class</structname></link> entry that defines the
       corresponding table.  (For a free-standing composite type, the
       <link linkend="catalog-pg-class"><structname>pg_class</structname></link> entry doesn't really represent
       a table, but it is needed anyway for the type's
       <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link> entries to link to.)
       Zero for non-composite types.
-->
もしこれが複合型（<structname>typtype</structname>を参照）であれば、この列は関連するテーブルを定義する<structfield>pg_class</structfield>項目を指します。
（独立の複合型の場合、<structname>pg_class</structname>項目は実際にはテーブルを表しませんが、いずれにしても型の<structname>pg_attribute</structname>項目をリンクするために必要です。）
複合型でない場合はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typsubscript</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
       Subscripting handler function's OID, or zero if this type doesn't
       support subscripting.  Types that are <quote>true</quote> array
       types have <structfield>typsubscript</structfield>
       = <function>array_subscript_handler</function>, but other types may
       have other handler functions to implement specialized subscripting
       behavior.
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typelem</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If <structfield>typelem</structfield> is not zero then it
       identifies another row in <structname>pg_type</structname>,
       defining the type yielded by subscripting.  This should be zero
       if <structfield>typsubscript</structfield> is zero.  However, it can
       be zero when <structfield>typsubscript</structfield> isn't zero, if the
       handler doesn't need <structfield>typelem</structfield> to
       determine the subscripting result type.
       Note that a <structfield>typelem</structfield> dependency is
       considered to imply physical containment of the element type in
       this type; so DDL changes on the element type might be restricted
       by the presence of this type.
-->
<structfield>typelem</structfield>がゼロでない場合、これは<structname>pg_type</structname>の別の列を特定します。
現在の型は、<structfield>typelem</structfield>型の値を生成する配列のように、配列要素を持てるようになります。
<quote>本当の</quote>の配列型は可変長（<structfield>typlen</structfield> = -1）ですが、例えば<type>name</type>と<type>point</type>のように、いくつかの固定長（<structfield>typlen</structfield> &gt; 0）型は同時に非ゼロの<structfield>typelem</structfield>を持つことができます。
もし固定長型が<structfield>typelem</structfield>を持つ場合、その内部表現は他のデータを持たない<structfield>typelem</structfield>データ型の数個の値でなければなりません。
可変長配列型には配列サブルーチンで定義されたヘッダを持ちます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typarray</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If <structfield>typarray</structfield> is not zero then it
       identifies another row in <structname>pg_type</structname>, which
       is the <quote>true</quote> array type having this type as element
-->
<structfield>typarray</structfield>がゼロでない場合、<structfield>typarray</structfield>は<structname>pg_type</structname>内のもうひとつの行を特定します。
もうひとつの行は、この型を要素として持っている<quote>本当</quote>の配列型です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typinput</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Input conversion function (text format)
-->
入力変換関数（テキスト形式）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typoutput</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Output conversion function (text format)
-->
出力変換関数（テキスト形式）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typreceive</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Input conversion function (binary format), or zero if none
-->
入力変換関数（バイナリ形式）、なければゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typsend</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Output conversion function (binary format), or zero if none
-->
出力変換関数（バイナリ形式）、なければゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typmodin</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Type modifier input function, or zero if type does not support modifiers
-->
型修飾子の入力関数。型が修飾子をサポートしていない場合はゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typmodout</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Type modifier output function, or zero to use the standard format
-->
型修飾子の出力関数。標準書式を使用する場合はゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typanalyze</structfield> <type>regproc</type>
       (references <link linkend="catalog-pg-proc"><structname>pg_proc</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Custom <xref linkend="sql-analyze"/> function,
       or zero to use the standard function
-->
独自の<command>ANALYZE</command>関数。標準関数を使用する場合はゼロ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typalign</structfield> <type>char</type>
      </para>
      <para>
<!--
       <structfield>typalign</structfield> is the alignment required
       when storing a value of this type.  It applies to storage on
       disk as well as most representations of the value inside
       <productname>PostgreSQL</productname>.
       When multiple values are stored consecutively, such
       as in the representation of a complete row on disk, padding is
       inserted before a datum of this type so that it begins on the
       specified boundary.  The alignment reference is the beginning
       of the first datum in the sequence.
       Possible values are:
-->
<structfield>typalign</structfield>はこの型の値を格納する際に必要な整列です。
ディスク上での格納だけでなく、<productname>PostgreSQL</productname>内部の値の表現にも適用されます。
ディスク上の完全な行の表現のように、複数の値が隣接して格納される際には、指定された境界で始まるように、この型のデータの前にパディングが挿入されます。
アライメントの参照先は、連続しているデータ中の先頭のデータの開始位置です。
使用可能な値は以下の通りです。
       <itemizedlist>
        <listitem>
<!--
         <para><literal>c</literal> = <type>char</type> alignment, i.e., no alignment needed.</para>
-->
         <para><literal>c</literal> = <type>char</type>整列（すなわち、整列は必要ありません）。</para>
        </listitem>
        <listitem>
<!--
         <para><literal>s</literal> = <type>short</type> alignment (2 bytes on most machines).</para>
-->
         <para><literal>s</literal> = <type>short</type>整列（多くのマシンでは2バイトになります）。</para>
        </listitem>
        <listitem>
<!--
         <para><literal>i</literal> = <type>int</type> alignment (4 bytes on most machines).</para>
-->
         <para><literal>i</literal> = <type>int</type>整列（多くのマシンでは4バイトになります）。</para>
        </listitem>
        <listitem>
<!--
         <para><literal>d</literal> = <type>double</type> alignment (8 bytes on many machines, but by no means all).</para>
-->
         <para><literal>d</literal> = <type>double</type>整列（多くのマシンでは8バイトになりますが、必ずしもすべてがそうであるとは限りません）。</para>
        </listitem>
       </itemizedlist>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typstorage</structfield> <type>char</type>
      </para>
      <para>
<!--
       <structfield>typstorage</structfield> tells for varlena
       types (those with <structfield>typlen</structfield> = -1) if
       the type is prepared for toasting and what the default strategy
       for attributes of this type should be.
       Possible values are:
-->
<structfield>typstorage</structfield>は、varlena型（<structfield>typlen</structfield> = -1であるもの）において、その型がトーストされる予定であるか、この型においてアトリビュートに対するデフォルトの戦略が何であるかを示します。
可能な値は以下です。
       <itemizedlist>
        <listitem>
         <para>
<!--
          <literal>p</literal> (plain): Values must always be stored plain
          (non-varlena types always use this value).
-->
<literal>p</literal> (plain)：値は常にplainで格納されなければなりません（非varlena型は常にこの値を使います）。
         </para>
        </listitem>
        <listitem>
         <para>
<!--
          <literal>e</literal> (external): Values can be stored in a
          secondary <quote>TOAST</quote> relation (if relation has one, see
          <literal>pg_class.reltoastrelid</literal>).
-->
          <literal>e</literal>：値は<quote>従属的</quote>リレーションに格納できます（リレーションがあるとき。リレーションに関しては<literal>pg_class.reltoastrelid</literal>を参照してください）。
         </para>
        </listitem>
        <listitem>
         <para>
<!--
          <literal>m</literal> (main): Values can be compressed and stored
          inline.
-->
<literal>m</literal> (main)：値は圧縮してインラインで格納できます。
         </para>
        </listitem>
        <listitem>
         <para>
<!--
          <literal>x</literal> (extended): Values can be compressed and/or
          moved to a secondary relation.
-->
<literal>x</literal> (extended)：値は圧縮することもできますし、圧縮した上で更に従属的リレーションに移動することもできます。
         </para>
        </listitem>
       </itemizedlist>
<!--
       <literal>x</literal> is the usual choice for toast-able types.
       Note that <literal>m</literal> values can also be moved out to
       secondary storage, but only as a last resort (<literal>e</literal>
       and <literal>x</literal> values are moved first).
-->
トースト可能な型に対しては<literal>x</literal>が通常の選択です。
<literal>m</literal>値も、どうしても必要なら従属的格納に移動できることに注意してください（<literal>e</literal>と<literal>x</literal>値は、まず最初に移動します）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typnotnull</structfield> <type>bool</type>
      </para>
      <para>
<!--
       <structfield>typnotnull</structfield> represents a not-null
       constraint on a type.  Used for domains only.
-->
<structfield>typnotnull</structfield>は型に対し非NULL制約を表します。
ドメインでのみ使用されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typbasetype</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       If this is a domain (see <structfield>typtype</structfield>), then
       <structfield>typbasetype</structfield> identifies the type that this
       one is based on.  Zero if this type is not a domain.
-->
もしこれがドメイン（<structfield>typtype</structfield>を参照）であれば、<structfield>typbasetype</structfield>はこれが基づいている型を指定します。
ドメインでない場合はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typtypmod</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Domains use <structfield>typtypmod</structfield> to record the <literal>typmod</literal>
       to be applied to their base type (-1 if base type does not use a
       <literal>typmod</literal>).  -1 if this type is not a domain.
-->
ドメインは<structfield>typtypmod</structfield>を使用して、基本型に適用される<literal>typmod</literal>を記録します
（基本型が<literal>typmod</literal>を使用しない場合は-1）。
この型がドメインでない場合は-1です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typndims</structfield> <type>int4</type>
      </para>
      <para>
<!--
       <structfield>typndims</structfield> is the number of array dimensions
       for a domain over an array (that is, <structfield>typbasetype</structfield> is
       an array type).
       Zero for types other than domains over array types.
-->
<structfield>typndims</structfield>は配列であるドメインの配列の次元数です
（つまり、<structfield>typbasetype</structfield>は配列型です。）。
配列型のドメインでない場合はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typcollation</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-collation"><structname>pg_collation</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       <structfield>typcollation</structfield> specifies the collation
       of the type.  If the type does not support collations, this will
       be zero.  A base type that supports collations will have a nonzero
       value here, typically <symbol>DEFAULT_COLLATION_OID</symbol>.
       A domain over a collatable type can have a collation OID different
       from its base type's, if one was specified for the domain.
-->
<structfield>typcollation</structfield>は型の照合順序を指定します。
型が照合順序をサポートしない場合、ゼロになります。
照合順序をサポートする基本型はここでゼロ以外の値を持ちます。典型的には<symbol>DEFAULT_COLLATION_OID</symbol>です。
照合順序の設定可能な型全体のドメインは、そのドメインで照合順序が指定されていれば、基本型とは異なる照合順序OIDを持つことができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typdefaultbin</structfield> <type>pg_node_tree</type>
      </para>
      <para>
<!--
       If <structfield>typdefaultbin</structfield> is not null, it is the
       <function>nodeToString()</function>
       representation of a default expression for the type.  This is
       only used for domains.
-->
<structfield>typdefaultbin</structfield>がNULLでない場合、これは型のデフォルト式の<function>nodeToString()</function>表現です。
ドメインでのみ使用されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typdefault</structfield> <type>text</type>
      </para>
      <para>
<!--
       <structfield>typdefault</structfield> is null if the type has no associated
       default value. If <structfield>typdefaultbin</structfield> is not null,
       <structfield>typdefault</structfield> must contain a human-readable version of the
       default expression represented by <structfield>typdefaultbin</structfield>.  If
       <structfield>typdefaultbin</structfield> is null and <structfield>typdefault</structfield> is
       not, then <structfield>typdefault</structfield> is the external representation of
       the type's default value, which can be fed to the type's input
       converter to produce a constant.
-->
関連するデフォルト値を持たない型であれば<structfield>typdefault</structfield>はNULLです。
<structfield>typdefaultbin</structfield>がNULLでない場合、<structfield>typdefault</structfield>は、<structfield>typdefaultbin</structfield>によって表される人間が見てわかる形式のデフォルト式を含む必要があります。
<structfield>typdefaultbin</structfield>がNULLで<structfield>typdefault</structfield>がNULLでない場合、<structfield>typdefault</structfield>は型のデフォルト値の外部表現です。
これは、定数を生成するために型の入力変換処理に渡されることがあります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>typacl</structfield> <type>aclitem[]</type>
      </para>
      <para>
<!--
       Access privileges; see <xref linkend="ddl-priv"/> for details
-->
アクセス権限。
詳細は<xref linkend="ddl-priv"/>を参照してください。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <note>
   <para>
<!--
    For fixed-width types used in system tables, it is critical that the size
    and alignment defined in <structname>pg_type</structname>
    agree with the way that the compiler will lay out the column in
    a structure representing a table row.
-->
固定長型のシステムテーブルでは、<structname>pg_type</structname>で定義されているサイズとアライメントと、コンパイラがテーブル行を表現する構造体の中で列を格納する方法とで合意が取れていることが重要です。
   </para>
  </note>

  <para>
<!--
   <xref linkend="catalog-typcategory-table"/> lists the system-defined values
   of <structfield>typcategory</structfield>.  Any future additions to this list will
   also be upper-case ASCII letters.  All other ASCII characters are reserved
   for user-defined categories.
-->
<xref linkend="catalog-typcategory-table"/>はシステムで定義された<structfield>typcategory</structfield>の値の一覧です。
今後この一覧に追加されるものは同様に大文字のASCII文字になります。
他のすべてのASCII文字はユーザ定義のカテゴリのために予約されています。
  </para>

  <table id="catalog-typcategory-table">
<!--
   <title><structfield>typcategory</structfield> Codes</title>
-->
   <title><structfield>typcategory</structfield>のコード</title>

   <tgroup cols="2">
    <thead>
     <row>
<!--
      <entry>Code</entry>
      <entry>Category</entry>
-->
      <entry>コード</entry>
      <entry>カテゴリ</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>A</literal></entry>
<!--
      <entry>Array types</entry>
-->
      <entry>配列型</entry>
     </row>
     <row>
      <entry><literal>B</literal></entry>
<!--
      <entry>Boolean types</entry>
-->
      <entry>論理値型</entry>
     </row>
     <row>
      <entry><literal>C</literal></entry>
<!--
      <entry>Composite types</entry>
-->
      <entry>複合型</entry>
     </row>
     <row>
      <entry><literal>D</literal></entry>
<!--
      <entry>Date/time types</entry>
-->
      <entry>日付時刻型</entry>
     </row>
     <row>
      <entry><literal>E</literal></entry>
<!--
      <entry>Enum types</entry>
-->
      <entry>列挙型</entry>
     </row>
     <row>
      <entry><literal>G</literal></entry>
<!--
      <entry>Geometric types</entry>
-->
      <entry>幾何学型</entry>
     </row>
     <row>
      <entry><literal>I</literal></entry>
<!--
      <entry>Network address types</entry>
-->
      <entry>ネットワークアドレス型</entry>
     </row>
     <row>
      <entry><literal>N</literal></entry>
<!--
      <entry>Numeric types</entry>
-->
      <entry>数値型</entry>
     </row>
     <row>
      <entry><literal>P</literal></entry>
<!--
      <entry>Pseudo-types</entry>
-->
      <entry>仮想型</entry>
     </row>
     <row>
      <entry><literal>R</literal></entry>
<!--
      <entry>Range types</entry>
-->
      <entry>範囲型</entry>
     </row>
     <row>
      <entry><literal>S</literal></entry>
<!--
      <entry>String types</entry>
-->
      <entry>文字列型</entry>
     </row>
     <row>
      <entry><literal>T</literal></entry>
<!--
      <entry>Timespan types</entry>
-->
      <entry>時間間隔型</entry>
     </row>
     <row>
      <entry><literal>U</literal></entry>
<!--
      <entry>User-defined types</entry>
-->
      <entry>ユーザ定義型</entry>
     </row>
     <row>
      <entry><literal>V</literal></entry>
<!--
      <entry>Bit-string types</entry>
-->
      <entry>ビット列型</entry>
     </row>
     <row>
      <entry><literal>X</literal></entry>
<!--
      <entry><type>unknown</type> type</entry>
-->
      <entry><type>unknown</type>型</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>


 <sect1 id="catalog-pg-user-mapping">
  <title><structname>pg_user_mapping</structname></title>

  <indexterm zone="catalog-pg-user-mapping">
   <primary>pg_user_mapping</primary>
  </indexterm>

  <para>
<!--
   The catalog <structname>pg_user_mapping</structname> stores
   the mappings from local user to remote.  Access to this catalog is
   restricted from normal users, use the view
   <link linkend="view-pg-user-mappings"><structname>pg_user_mappings</structname></link>
   instead.
-->
<structname>pg_user_mapping</structname>カタログはローカルのユーザから遠隔のユーザへのマッピングを保持します。
一般ユーザからのこのカタログへのアクセスは制限されています。
代わりに<link linkend="view-pg-user-mappings"><structname>pg_user_mappings</structname></link>を使用してください。
  </para>

  <table>
<!--
   <title><structname>pg_user_mapping</structname> Columns</title>
-->
   <title><structname>pg_user_mapping</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       Row identifier
-->
行識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>umuser</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the local role being mapped, or zero if the user mapping is public
-->
マッピングされているローカルのロールのOID。
ユーザマッピングが公開されている場合は0になります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>umserver</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-foreign-server"><structname>pg_foreign_server</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the foreign server that contains this mapping
-->
マッピングを保持する外部サーバのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>umoptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       User mapping specific options, as <quote>keyword=value</quote> strings
-->
<quote>keyword=value</quote>文字列のようなユーザマッピングの特定のオプション
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>


 <sect1 id="views-overview">
<!--
  <title>System Views</title>
-->
  <title>システムビュー</title>

  <para>
<!--
   In addition to the system catalogs, <productname>PostgreSQL</productname>
   provides a number of built-in views.  Some system views provide convenient
   access to some commonly used queries on the system catalogs.  Other views
   provide access to internal server state.
-->
システムカタログに加え<productname>PostgreSQL</productname>は数多くの組み込みビューを提供しています。
システムビューはいくつかの一般的に使用されるシステムカタログに対する問い合わせに手近にアクセスできるようにします。
他のビューはサーバ状態内部へのアクセスを提供します。
  </para>

  <para>
<!--
   The information schema (<xref linkend="information-schema"/>) provides
   an alternative set of views which overlap the functionality of the system
   views.  Since the information schema is SQL-standard whereas the views
   described here are <productname>PostgreSQL</productname>-specific,
   it's usually better to use the information schema if it provides all
   the information you need.
-->
情報スキーマ（<xref linkend="information-schema"/>）はシステムビューと重複する、もう一方のビューの集合を提供しています。
ここで説明しているビューは<productname>PostgreSQL</productname>特有のものであるのに対し、情報スキーマはSQL標準であることから、もし情報スキーマが必要とする情報をすべて提供してくれるのであれば情報スキーマを使用する方が良いでしょう。
  </para>

  <para>
<!--
   <xref linkend="view-table"/> lists the system views described here.
   More detailed documentation of each view follows below.
   There are some additional views that provide access to the results of
   the statistics collector; they are described in <xref
   linkend="monitoring-stats-views-table"/>.
-->
<xref linkend="view-table"/>は、ここで説明しているシステムビューの一覧です。
それぞれのビューのさらに詳細な説明は、これより後に述べられています。
統計情報の結果にアクセスするためのいくつかの追加のビューがあります。
それらは<xref linkend="monitoring-stats-views-table"/>で説明されています。
  </para>

  <para>
<!--
   Except where noted, all the views described here are read-only.
-->
注意書きがない限り、ここでのすべてのビューは読み取り専用です。
  </para>

  <table id="view-table">
<!--
   <title>System Views</title>
-->
   <title>システムビュー</title>

   <tgroup cols="2">
    <thead>
     <row>
<!--
      <entry>View Name</entry>
      <entry>Purpose</entry>
-->
      <entry>ビュー名</entry>
      <entry>目的</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><link linkend="view-pg-available-extensions"><structname>pg_available_extensions</structname></link></entry>
<!--
      <entry>available extensions</entry>
-->
      <entry>利用可能な拡張</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-available-extension-versions"><structname>pg_available_extension_versions</structname></link></entry>
<!--
      <entry>available versions of extensions</entry>
-->
      <entry>利用可能な拡張のバージョン</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-backend-memory-contexts"><structname>pg_backend_memory_contexts</structname></link></entry>
      <entry>backend memory contexts</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-config"><structname>pg_config</structname></link></entry>
<!--
      <entry>compile-time configuration parameters</entry>
-->
      <entry>コンパイル時の設定パラメータ</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-cursors"><structname>pg_cursors</structname></link></entry>
<!--
      <entry>open cursors</entry>
-->
      <entry>開いているカーソル</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-file-settings"><structname>pg_file_settings</structname></link></entry>
<!--
      <entry>summary of configuration file contents</entry>
-->
      <entry>設定ファイルの内容の要約</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-group"><structname>pg_group</structname></link></entry>
<!--
      <entry>groups of database users</entry>
-->
      <entry>データベースのユーザのグループ</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-hba-file-rules"><structname>pg_hba_file_rules</structname></link></entry>
<!--
      <entry>summary of client authentication configuration file contents</entry>
-->
      <entry>クライアント認証の設定ファイルの内容の要約</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-indexes"><structname>pg_indexes</structname></link></entry>
<!--
      <entry>indexes</entry>
-->
      <entry>インデックス</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-locks"><structname>pg_locks</structname></link></entry>
<!--
      <entry>locks currently held or awaited</entry>
-->
      <entry>現在保持されている、または待っているロック</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-matviews"><structname>pg_matviews</structname></link></entry>
<!--
      <entry>materialized views</entry>
-->
      <entry>マテリアライズドビュー</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-policies"><structname>pg_policies</structname></link></entry>
<!--
      <entry>policies</entry>
-->
      <entry>ポリシー</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-prepared-statements"><structname>pg_prepared_statements</structname></link></entry>
<!--
      <entry>prepared statements</entry>
-->
      <entry>準備済みの文</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link></entry>
<!--
      <entry>prepared transactions</entry>
-->
      <entry>準備済みのトランザクション</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-publication-tables"><structname>pg_publication_tables</structname></link></entry>
<!--
      <entry>publications and their associated tables</entry>
-->
      <entry>パブリケーションとそれに関連するテーブル</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-replication-origin-status"><structname>pg_replication_origin_status</structname></link></entry>
<!--
      <entry>information about replication origins, including replication progress</entry>
-->
      <entry>レプリケーションの進捗を含めたレプリケーション起点に関する情報</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-replication-slots"><structname>pg_replication_slots</structname></link></entry>
<!--
      <entry>replication slot information</entry>
-->
      <entry>レプリケーションスロットの情報</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-roles"><structname>pg_roles</structname></link></entry>
<!--
      <entry>database roles</entry>
-->
      <entry>データベースロール</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-rules"><structname>pg_rules</structname></link></entry>
<!--
      <entry>rules</entry>
-->
      <entry>ルール</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-seclabels"><structname>pg_seclabels</structname></link></entry>
<!--
      <entry>security labels</entry>
-->
      <entry>セキュリティラベル</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-sequences"><structname>pg_sequences</structname></link></entry>
<!--
      <entry>sequences</entry>
-->
      <entry>シーケンス</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-settings"><structname>pg_settings</structname></link></entry>
<!--
      <entry>parameter settings</entry>
-->
      <entry>パラメータ設定</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-shadow"><structname>pg_shadow</structname></link></entry>
<!--
      <entry>database users</entry>
-->
      <entry>データベースのユーザ</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-shmem-allocations"><structname>pg_shmem_allocations</structname></link></entry>
      <entry>shared memory allocations</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-stats"><structname>pg_stats</structname></link></entry>
<!--
      <entry>planner statistics</entry>
-->
      <entry>プランナの統計</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-stats-ext"><structname>pg_stats_ext</structname></link></entry>
<!--
      <entry>extended planner statistics</entry>
-->
      <entry>プランナの拡張統計情報</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-stats-ext-exprs"><structname>pg_stats_ext_exprs</structname></link></entry>
      <entry>extended planner statistics for expressions</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-tables"><structname>pg_tables</structname></link></entry>
<!--
      <entry>tables</entry>
-->
      <entry>テーブル</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-timezone-abbrevs"><structname>pg_timezone_abbrevs</structname></link></entry>
<!--
      <entry>time zone abbreviations</entry>
-->
      <entry>時間帯省略形</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-timezone-names"><structname>pg_timezone_names</structname></link></entry>
<!--
      <entry>time zone names</entry>
-->
      <entry>時間帯名</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-user"><structname>pg_user</structname></link></entry>
<!--
      <entry>database users</entry>
-->
      <entry>データベースのユーザ</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-user-mappings"><structname>pg_user_mappings</structname></link></entry>
<!--
      <entry>user mappings</entry>
-->
      <entry>ユーザマッピング</entry>
     </row>

     <row>
      <entry><link linkend="view-pg-views"><structname>pg_views</structname></link></entry>
<!--
      <entry>views</entry>
-->
      <entry>ビュー</entry>
     </row>

    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="view-pg-available-extensions">
  <title><structname>pg_available_extensions</structname></title>

  <indexterm zone="view-pg-available-extensions">
   <primary>pg_available_extensions</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_available_extensions</structname> view lists the
   extensions that are available for installation.
   See also the
   <link linkend="catalog-pg-extension"><structname>pg_extension</structname></link>
   catalog, which shows the extensions currently installed.
-->
<structname>pg_available_extensions</structname>ビューはインストレーションで利用可能な拡張を列挙します。
現在インストールされている拡張を表す<link linkend="catalog-pg-extension"><structname>pg_extension</structname></link>カタログも参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_available_extensions</structname> Columns</title>
-->
   <title><structname>pg_available_extensions</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>name</type>
      </para>
      <para>
<!--
       Extension name
-->
拡張名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>default_version</structfield> <type>text</type>
      </para>
      <para>
<!--
       Name of default version, or <literal>NULL</literal> if none is
       specified
-->
デフォルトのバージョン名称。何も指定がなければ<literal>NULL</literal>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>installed_version</structfield> <type>text</type>
      </para>
      <para>
<!--
       Currently installed version of the extension,
       or <literal>NULL</literal> if not installed
-->
現在インストールされている拡張のバージョン。インストールされていない場合は<literal>NULL</literal>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comment</structfield> <type>text</type>
      </para>
      <para>
<!--
       Comment string from the extension's control file
-->
拡張の制御ファイルからのコメント文字列
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The <structname>pg_available_extensions</structname> view is read-only.
-->
<structname>pg_available_extensions</structname>ビューは読み取り専用です。
  </para>
 </sect1>

 <sect1 id="view-pg-available-extension-versions">
  <title><structname>pg_available_extension_versions</structname></title>

  <indexterm zone="view-pg-available-extension-versions">
   <primary>pg_available_extension_versions</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_available_extension_versions</structname> view lists the
   specific extension versions that are available for installation.
   See also the <link
   linkend="catalog-pg-extension"><structname>pg_extension</structname></link>
   catalog, which shows the extensions currently installed.
-->
<structname>pg_available_extension_versions</structname>ビューはインストレーションで利用可能な特定の拡張のバージョンを列挙します。
現在インストールされている拡張を表す<link linkend="catalog-pg-extension"><structname>pg_extension</structname></link>カタログも参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_available_extension_versions</structname> Columns</title>
-->
   <title><structname>pg_available_extension_versions</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>name</type>
      </para>
      <para>
<!--
       Extension name
-->
拡張名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>version</structfield> <type>text</type>
      </para>
      <para>
<!--
       Version name
-->
バージョン名称
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>installed</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this version of this extension is currently
       installed
-->
現在このバージョンの拡張がインストールされている場合に真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>superuser</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if only superusers are allowed to install this extension
       (but see <structfield>trusted</structfield>)
-->
スーパユーザがこの拡張をインストールできるなら真です（ただし、<structfield>trusted</structfield>を見てください）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>trusted</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if the extension can be installed by non-superusers
       with appropriate privileges
-->
適切な権限を持つ非スーパユーザがこの拡張をインストールできるなら真です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relocatable</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if extension can be relocated to another schema
-->
拡張が他のスキーマに再配置可能である場合真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schema</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the schema that the extension must be installed into,
       or <literal>NULL</literal> if partially or fully relocatable
-->
拡張がインストールされなければならないスキーマの名前。
一部の再配置またはすべての再配置を行うことができる場合は<literal>NULL</literal>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>requires</structfield> <type>name[]</type>
      </para>
      <para>
<!--
       Names of prerequisite extensions,
       or <literal>NULL</literal> if none
-->
前もって必要な拡張の名前。なければ<literal>NULL</literal>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>comment</structfield> <type>text</type>
      </para>
      <para>
<!--
       Comment string from the extension's control file
-->
拡張の制御ファイルからのコメント文字列
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The <structname>pg_available_extension_versions</structname> view is
   read-only.
-->
<structname>pg_available_extension_versions</structname>ビューは読み取り専用です。
  </para>
 </sect1>

 <sect1 id="view-pg-backend-memory-contexts">
  <title><structname>pg_backend_memory_contexts</structname></title>

  <indexterm zone="view-pg-backend-memory-contexts">
   <primary>pg_backend_memory_contexts</primary>
  </indexterm>

  <para>
   The view <structname>pg_backend_memory_contexts</structname> displays all
   the memory contexts of the server process attached to the current session.
  </para>
  <para>
   <structname>pg_backend_memory_contexts</structname> contains one row
   for each memory context.
  </para>

  <table>
   <title><structname>pg_backend_memory_contexts</structname> Columns</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>text</type>
      </para>
      <para>
       Name of the memory context
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ident</structfield> <type>text</type>
      </para>
      <para>
       Identification information of the memory context. This field is truncated at 1024 bytes
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parent</structfield> <type>text</type>
      </para>
      <para>
       Name of the parent of this memory context
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>level</structfield> <type>int4</type>
      </para>
      <para>
       Distance from TopMemoryContext in context tree
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>total_bytes</structfield> <type>int8</type>
      </para>
      <para>
       Total bytes allocated for this memory context
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>total_nblocks</structfield> <type>int8</type>
      </para>
      <para>
       Total number of blocks allocated for this memory context
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>free_bytes</structfield> <type>int8</type>
      </para>
      <para>
       Free space in bytes
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>free_chunks</structfield> <type>int8</type>
      </para>
      <para>
       Total number of free chunks
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>used_bytes</structfield> <type>int8</type>
      </para>
      <para>
       Used space in bytes
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   By default, the <structname>pg_backend_memory_contexts</structname> view can be
   read only by superusers.
  </para>
 </sect1>

 <sect1 id="view-pg-config">
  <title><structname>pg_config</structname></title>

  <indexterm zone="view-pg-config">
   <primary>pg_config</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_config</structname> describes the
   compile-time configuration parameters of the currently installed
   version of <productname>PostgreSQL</productname>. It is intended, for example, to
   be used by software packages that want to interface to
   <productname>PostgreSQL</productname> to facilitate finding the required header
   files and libraries. It provides the same basic information as the
   <xref linkend="app-pgconfig"/> <productname>PostgreSQL</productname> client
   application.
-->
<structname>pg_config</structname>ビューは、現在インストールされている<productname>PostgreSQL</productname>のバージョンのコンパイル時設定パラメータを表示します。
例えば、<productname>PostgreSQL</productname>とインタフェースしたいソフトウェアパッケージによって、要求されるヘッダファイルとライブラリを探す手助けとなるために使用されることが意図されます。
<productname>PostgreSQL</productname>クライアントアプリケーションである<xref linkend="app-pgconfig"/>と同様な基本的な情報を提供します。
  </para>

  <para>
<!--
   By default, the <structname>pg_config</structname> view can be read
   only by superusers.
-->
デフォルトでは<structname>pg_config</structname>ビューはスーパユーザだけが読み取りできます。
  </para>

  <table>
<!--
   <title><structname>pg_config</structname> Columns</title>
-->
   <title><structname>pg_config</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>text</type>
      </para>
      <para>
<!--
       The parameter name
-->
パラメータ名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>setting</structfield> <type>text</type>
      </para>
      <para>
<!--
       The parameter value
-->
パラメータ値
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-cursors">
  <title><structname>pg_cursors</structname></title>

  <indexterm zone="view-pg-cursors">
   <primary>pg_cursors</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_cursors</structname> view lists the cursors that
   are currently available. Cursors can be defined in several ways:
-->
<structname>pg_cursors</structname>ビューは現在利用可能なカーソルを列挙します。
以下のようにカーソルは複数の方法で定義可能です。
   <itemizedlist>
    <listitem>
     <para>
<!--
      via the <link linkend="sql-declare"><command>DECLARE</command></link>
      statement in SQL
-->
SQLから<xref linkend="sql-declare"/>文経由。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      via the Bind message in the frontend/backend protocol, as
      described in <xref linkend="protocol-flow-ext-query"/>
-->
<xref linkend="protocol-flow-ext-query"/>で説明する、フロントエンド/バックエンドプロトコルからBindメッセージ経由。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      via the Server Programming Interface (SPI), as described in
      <xref linkend="spi-interface"/>
-->
<xref linkend="spi-interface"/>で説明する、サーバプログラミングインタフェース（SPI）経由。
     </para>
    </listitem>
   </itemizedlist>

<!--
   The <structname>pg_cursors</structname> view displays cursors
   created by any of these means. Cursors only exist for the duration
   of the transaction that defines them, unless they have been
   declared <literal>WITH HOLD</literal>. Therefore non-holdable
   cursors are only present in the view until the end of their
   creating transaction.
-->
<structname>pg_cursors</structname>ビューは、上のいずれかの方法で作成されたカーソルを表示します。
カーソルは、<literal>WITH HOLD</literal>と宣言されていない限り、それを定義したトランザクション期間しか存在しません。
したがって、保持不可能なカーソルは、作成元トランザクションが終わるまでの間のみ、このビューに現れます。

   <note>
    <para>
<!--
     Cursors are used internally to implement some of the components
     of <productname>PostgreSQL</productname>, such as procedural languages.
     Therefore, the <structname>pg_cursors</structname> view might include cursors
     that have not been explicitly created by the user.
-->
手続き言語など、一部の<productname>PostgreSQL</productname>の要素を実装するために内部的にカーソルが使用されています。
したがって、<structname>pg_cursors</structname>にはユーザが明示的に作成していないカーソルも含まれる可能性があります。
    </para>
   </note>
  </para>

  <table>
<!--
   <title><structname>pg_cursors</structname> Columns</title>
-->
   <title><structname>pg_cursors</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>text</type>
      </para>
      <para>
<!--
       The name of the cursor
-->
カーソルの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>statement</structfield> <type>text</type>
      </para>
      <para>
<!--
       The verbatim query string submitted to declare this cursor
-->
カーソル宣言の際に投稿された逐語的問い合わせ文字列
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_holdable</structfield> <type>bool</type>
      </para>
      <para>
<!--
       <literal>true</literal> if the cursor is holdable (that is, it
       can be accessed after the transaction that declared the cursor
       has committed); <literal>false</literal> otherwise
-->
保持可能カーソル（つまりカーソルを宣言したトランザクションがコミットされた後でもアクセス可能なカーソル）であれば<literal>true</literal>です。
さもなくば<literal>false</literal>です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_binary</structfield> <type>bool</type>
      </para>
      <para>
<!--
       <literal>true</literal> if the cursor was declared
       <literal>BINARY</literal>; <literal>false</literal>
       otherwise
-->
カーソルが<literal>BINARY</literal>で宣言されていたら<literal>true</literal>、さもなくば<literal>false</literal>。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_scrollable</structfield> <type>bool</type>
      </para>
      <para>
<!--
       <literal>true</literal> if the cursor is scrollable (that is, it
       allows rows to be retrieved in a nonsequential manner);
       <literal>false</literal> otherwise
-->
カーソルがスクロール可能（順序通り以外の方法に行を取り出すことが可能）であれば<literal>true</literal>、さもなくば<literal>false</literal>。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>creation_time</structfield> <type>timestamptz</type>
      </para>
      <para>
<!--
       The time at which the cursor was declared
-->
カーソルが宣言された時間。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The <structname>pg_cursors</structname> view is read-only.
-->
<structname>pg_cursors</structname>ビューは読み取り専用です。
  </para>

 </sect1>

 <sect1 id="view-pg-file-settings">
  <title><structname>pg_file_settings</structname></title>

  <indexterm zone="view-pg-file-settings">
   <primary>pg_file_settings</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_file_settings</structname> provides a summary of
   the contents of the server's configuration file(s).  A row appears in
   this view for each <quote>name = value</quote> entry appearing in the files,
   with annotations indicating whether the value could be applied
   successfully.  Additional row(s) may appear for problems not linked to
   a <quote>name = value</quote> entry, such as syntax errors in the files.
-->
ビュー<structname>pg_file_settings</structname>はサーバの設定ファイルの内容の要約を提供します。
ファイル内にある各<quote>name = value</quote>のエントリについて、このビューの1行が存在し、その値が正しく適用可能かどうかの注釈が含まれます。
ファイル内の構文エラーなど<quote>name = value</quote>のエントリと関係のない問題についての行がさらに存在することもあります。
  </para>

  <para>
<!--
   This view is helpful for checking whether planned changes in the
   configuration files will work, or for diagnosing a previous failure.
   Note that this view reports on the <emphasis>current</emphasis> contents of the
   files, not on what was last applied by the server.  (The
   <link linkend="view-pg-settings"><structname>pg_settings</structname></link>
   view is usually sufficient to determine that.)
-->
設定ファイルについて予定している変更が動作するかどうかの確認や、以前のエラーの調査分析をする際にこのビューは役立ちます。
このビューはファイルの<emphasis>現在の</emphasis>内容についてレポートするのであって、サーバが最後に適用した内容ではないことに注意してください。
（後者を知るには、通常は<link linkend="view-pg-settings"><structname>pg_settings</structname></link>ビューで十分でしょう。）
  </para>

  <para>
<!--
   By default, the <structname>pg_file_settings</structname> view can be read
   only by superusers.
-->
デフォルトで、<structname>pg_file_settings</structname>ビューはスーパーユーザのみが参照可能です。
  </para>

  <table>
<!--
   <title><structname>pg_file_settings</structname> Columns</title>
-->
   <title><structname>pg_file_settings</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sourcefile</structfield> <type>text</type>
      </para>
      <para>
<!--
       Full path name of the configuration file
-->
設定ファイルの完全なパス名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sourceline</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Line number within the configuration file where the entry appears
-->
設定ファイル内のエントリの行番号
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>seqno</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Order in which the entries are processed (1..<replaceable>n</replaceable>)
-->
エントリが処理される順序（1..<replaceable>n</replaceable>）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>text</type>
      </para>
      <para>
<!--
       Configuration parameter name
-->
設定パラメータ名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>setting</structfield> <type>text</type>
      </para>
      <para>
<!--
       Value to be assigned to the parameter
-->
パラメータに代入される値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>applied</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if the value can be applied successfully
-->
値が正しく適用可能なら真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>error</structfield> <type>text</type>
      </para>
      <para>
<!--
       If not null, an error message indicating why this entry could
       not be applied
-->
NULLでないときは、このエントリが適用できない理由についてのエラーメッセージ
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   If the configuration file contains syntax errors or invalid parameter
   names, the server will not attempt to apply any settings from it, and
   therefore all the <structfield>applied</structfield> fields will read as false.
   In such a case there will be one or more rows with
   non-null <structfield>error</structfield> fields indicating the
   problem(s).  Otherwise, individual settings will be applied if possible.
   If an individual setting cannot be applied (e.g., invalid value, or the
   setting cannot be changed after server start) it will have an appropriate
   message in the <structfield>error</structfield> field.  Another way that
   an entry might have <structfield>applied</structfield> = false is that it is
   overridden by a later entry for the same parameter name; this case is not
   considered an error so nothing appears in
   the <structfield>error</structfield> field.
-->
設定ファイルに構文エラーや不正なパラメータ名がある場合、サーバはファイル内の設定をまったく適用せず、すべての<structfield>applied</structfield>フィールドは偽になります。
このような場合は、<structfield>error</structfield>フィールドが非NULLで問題を示唆する行が１行以上あるでしょう。
それ以外の場合は、個々の設定は可能であれば適用されます。
個々の設定が適用できない場合（例えば、不正な値、サーバの起動後は設定が変更できないなど）は<structfield>error</structfield>フィールドに適切なメッセージがあります。
エントリの<structfield>applied</structfield>が偽になる別の理由は、同じパラメータがそれより後のエントリで上書きされている場合です。
この場合はエラーとはみなされませんので、<structfield>error</structfield>フィールドには何も表示されません。
  </para>

  <para>
<!--
   See <xref linkend="config-setting"/> for more information about the various
   ways to change run-time parameters.
-->
実行時パラメータを変更する様々な方法について、詳しくは<xref linkend="config-setting"/>を参照してください。
  </para>

</sect1>

 <sect1 id="view-pg-group">
  <title><structname>pg_group</structname></title>

  <indexterm zone="view-pg-group">
   <primary>pg_group</primary>
  </indexterm>

  <!-- Unlike information_schema.applicable_roles, this shows no members for
       pg_database_owner.  The v8.1 catalog would have shown no members if
       that role had existed at the time. -->
  <para>
<!--
   The view <structname>pg_group</structname> exists for backwards
   compatibility: it emulates a catalog that existed in
   <productname>PostgreSQL</productname> before version 8.1.
   It shows the names and members of all roles that are marked as not
   <structfield>rolcanlogin</structfield>, which is an approximation to the set
   of roles that are being used as groups.
-->
<structname>pg_group</structname>ビューは下位互換のために存在しています。
バージョン8.1以前の<productname>PostgreSQL</productname>のカタログを模擬しています。
このビューは、<structfield>rolcanlogin</structfield>としてマークされていない、すべてのロールの名前とメンバを保持しています。
これはグループとして使用されているロールの集合と似ています。
  </para>

  <table>
<!--
   <title><structname>pg_group</structname> Columns</title>
-->
   <title><structname>pg_group</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>groname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
<!--
       Name of the group
-->
グループの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grosysid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       ID of this group
-->
グループのID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>grolist</structfield> <type>oid[]</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       An array containing the IDs of the roles in this group
-->
このグループのロールIDを含む配列
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-hba-file-rules">
  <title><structname>pg_hba_file_rules</structname></title>

  <indexterm zone="view-pg-hba-file-rules">
   <primary>pg_hba_file_rules</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_hba_file_rules</structname> provides a summary of
   the contents of the client authentication configuration file,
   <link linkend="auth-pg-hba-conf"><filename>pg_hba.conf</filename></link>.
   A row appears in this view for each
   non-empty, non-comment line in the file, with annotations indicating
   whether the rule could be applied successfully.
-->
ビュー<structname>pg_hba_file_rules</structname>はクライアント認証の設定ファイル<filename>pg_hba.conf</filename>の内容の要約を提供します。
設定ファイル内の空でない、コメントでもない各行について、このビュー内に行が1つあり、ルールが正しく適用できたかどうかを示す注記が入ります。
  </para>

  <para>
<!--
   This view can be helpful for checking whether planned changes in the
   authentication configuration file will work, or for diagnosing a previous
   failure.  Note that this view reports on the <emphasis>current</emphasis> contents
   of the file, not on what was last loaded by the server.
-->
このビューは、認証の設定ファイルについて計画している変更が動作するかどうかを確認する、あるいは以前の失敗について分析するのに役立つでしょう。
このビューはサーバが最後に読み込んだものではなく、ファイルの<emphasis>現在の</emphasis>内容について報告することに注意してください。
  </para>

  <para>
<!--
   By default, the <structname>pg_hba_file_rules</structname> view can be read
   only by superusers.
-->
デフォルトでは、スーパーユーザのみが<structname>pg_hba_file_rules</structname>ビューを読み取ることができます。
  </para>

  <table>
<!--
   <title><structname>pg_hba_file_rules</structname> Columns</title>
-->
   <title><structname>pg_hba_file_rules</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>line_number</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Line number of this rule in <filename>pg_hba.conf</filename>
-->
<filename>pg_hba.conf</filename>内でのこのルールの行番号
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>type</structfield> <type>text</type>
      </para>
      <para>
<!--
       Type of connection
-->
接続の種別
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>database</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       List of database name(s) to which this rule applies
-->
このルールが適用されるデータベース名のリスト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>user_name</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       List of user and group name(s) to which this rule applies
-->
このルールが適用されるユーザ名とグループ名のリスト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>address</structfield> <type>text</type>
      </para>
      <para>
<!--
       Host name or IP address, or one
       of <literal>all</literal>, <literal>samehost</literal>,
       or <literal>samenet</literal>, or null for local connections
-->
ホスト名、IPアドレス、あるいは<literal>all</literal>、<literal>samehost</literal>、<literal>samenet</literal>のいずれか。ローカル接続の場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>netmask</structfield> <type>text</type>
      </para>
      <para>
<!--
       IP address mask, or null if not applicable
-->
IPアドレスマスク。当てはまらない場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>auth_method</structfield> <type>text</type>
      </para>
      <para>
<!--
       Authentication method
-->
認証方法
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>options</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Options specified for authentication method, if any
-->
認証方法について指定されたオプション（あれば）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>error</structfield> <type>text</type>
      </para>
      <para>
<!--
       If not null, an error message indicating why this
       line could not be processed
-->
NULLでないなら、この行がなぜ処理できなかったかを示すエラーメッセージ
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Usually, a row reflecting an incorrect entry will have values for only
   the <structfield>line_number</structfield> and <structfield>error</structfield> fields.
-->
不正なエントリに対応する行は、通常は<structfield>line_number</structfield>フィールドと<structfield>error</structfield>フィールドにのみ値が入ります。
  </para>

  <para>
<!--
   See <xref linkend="client-authentication"/> for more information about
   client authentication configuration.
-->
クライアント認証設定の詳細については<xref linkend="client-authentication"/>を参照してください。
  </para>
 </sect1>

 <sect1 id="view-pg-indexes">
  <title><structname>pg_indexes</structname></title>

  <indexterm zone="view-pg-indexes">
   <primary>pg_indexes</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_indexes</structname> provides access to
   useful information about each index in the database.
-->
<structname>pg_indexes</structname>ビューはデータベース内のそれぞれのインデックスについて有用な情報を提供します。
  </para>

  <table>
<!--
   <title><structname>pg_indexes</structname> Columns</title>
-->
   <title><structname>pg_indexes</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing table and index
-->
テーブルとインデックスを含むスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of table the index is for
-->
インデックスのついているテーブルの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indexname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of index
-->
インデックスの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablespace</structfield> <type>name</type>
       (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>spcname</structfield>)
      </para>
      <para>
<!--
       Name of tablespace containing index (null if default for database)
-->
インデックスを含むテーブル空間の名前（データベースのデフォルトはNULL）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>indexdef</structfield> <type>text</type>
      </para>
      <para>
<!--
       Index definition (a reconstructed <xref linkend="sql-createindex"/>
       command)
-->
インデックス定義（再作成用<command>CREATE INDEX</command>コマンド）
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-locks">
  <title><structname>pg_locks</structname></title>

  <indexterm zone="view-pg-locks">
   <primary>pg_locks</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_locks</structname> provides access to
   information about the locks held by active processes within the
   database server.  See <xref linkend="mvcc"/> for more discussion
   of locking.
-->
<structname>pg_locks</structname>ビューはデータベースサーバ内でアクティブなプロセスによって保持されたロックに関する情報へのアクセスを提供します。
ロックに関するより詳細な説明は<xref linkend="mvcc"/>を参照してください。
  </para>

  <para>
<!--
   <structname>pg_locks</structname> contains one row per active lockable
   object, requested lock mode, and relevant process.  Thus, the same
   lockable object might
   appear many times, if multiple processes are holding or waiting
   for locks on it.  However, an object that currently has no locks on it
   will not appear at all.
-->
<structname>pg_locks</structname>にはロック対象となる進行中のオブジェクト、要求されたロックモード、および関連するプロセス毎に1つの行を持ちます。
ですから、もし複数のプロセスが同じロック対象オブジェクトに対してロックを保持していたりロックを待機している場合には、同じロック対象オブジェクトが何度も出現することがあります。
しかし現在ロックされていないオブジェクトはまったく現れません。
  </para>

  <para>
<!--
   There are several distinct types of lockable objects:
   whole relations (e.g., tables), individual pages of relations,
   individual tuples of relations,
   transaction IDs (both virtual and permanent IDs),
   and general database objects (identified by class OID and object OID,
   in the same way as in <link linkend="catalog-pg-description"><structname>pg_description</structname></link> or
   <link linkend="catalog-pg-depend"><structname>pg_depend</structname></link>).  Also, the right to extend a
   relation is represented as a separate lockable object, as is the right to
   update <structname>pg_database</structname>.<structfield>datfrozenxid</structfield>.
   Also, <quote>advisory</quote> locks can be taken on numbers that have
   user-defined meanings.
-->
ロック対象オブジェクトには異なる型がいくつか存在します。
リレーション全体（例：テーブル）、リレーションの個別のページ、リレーションの個別のタプル、トランザクションID（仮想と永続の両方のID）、一般的なデータベースオブジェクト（これは<structname>pg_description</structname>や<structname>pg_depend</structname>と同様にクラスOIDとオブジェクトOIDで識別されます）。
さらに、リレーションを拡張する権利は、<structname>pg_database</structname>.<structfield>datfrozenxid</structfield>を更新する権利と同様に、別のロック対象オブジェクトとして表現されます。
また<quote>勧告的</quote>ロックはユーザ定義の意味を持つ複数から形成されるかもしれません。
  </para>

  <table>
<!--
   <title><structname>pg_locks</structname> Columns</title>
-->
   <title><structname>pg_locks</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>locktype</structfield> <type>text</type>
      </para>
      <para>
<!--
       Type of the lockable object:
       <literal>relation</literal>,
       <literal>extend</literal>,
       <literal>frozenid</literal>,
       <literal>page</literal>,
       <literal>tuple</literal>,
       <literal>transactionid</literal>,
       <literal>virtualxid</literal>,
       <literal>spectoken</literal>,
       <literal>object</literal>,
       <literal>userlock</literal>, or
       <literal>advisory</literal>.
       (See also <xref linkend="wait-event-lock-table"/>.)
-->
ロックオブジェクトのタイプです。
<literal>relation</literal>、<literal>extend</literal>、<literal>frozenid</literal>、<literal>page</literal>、<literal>tuple</literal>、<literal>transactionid</literal>、<literal>virtualxid</literal>、<literal>spectoken</literal>、<literal>object</literal>、<literal>userlock</literal>、<literal>advisory</literal>のどれかです（<xref linkend="wait-event-lock-table"/>も見てください）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>database</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the database in which the lock target exists, or
       zero if the target is a shared object, or
       null if the target is a transaction ID
-->
ロック対象が存在しているデータベースのOID。対象が共有オブジェクトの場合はゼロ。対象がトランザクションIDである場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>relation</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the relation targeted by the lock, or null if the target is not
       a relation or part of a relation
-->
ロックの対象となるリレーションのOID。対象がリレーションではない場合かリレーションの一部である場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>page</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Page number targeted by the lock within the relation,
       or null if the target is not a relation page or tuple
-->
ロックの対象となるリレーション内のページ番号。対象がタプルもしくはリレーションページではない場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tuple</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Tuple number targeted by the lock within the page,
       or null if the target is not a tuple
-->
ページ内のロックの対象となっているタプル番号。対象がタプルではない場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>virtualxid</structfield> <type>text</type>
      </para>
      <para>
<!--
       Virtual ID of the transaction targeted by the lock,
       or null if the target is not a virtual transaction ID
-->
ロックの対象となるトランザクションの仮想ID。対象が仮想トランザクションIDではない場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>transactionid</structfield> <type>xid</type>
      </para>
      <para>
<!--
       ID of the transaction targeted by the lock,
       or null if the target is not a transaction ID
-->
ロックの対象となるトランザクションのID。対象がトランザクションIDではない場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the system catalog containing the lock target, or null if the
       target is not a general database object
-->
ロックの対象を含むシステムカタログのOID。対象が一般的なデータベースオブジェクトではない場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       OID of the lock target within its system catalog, or null if the
       target is not a general database object
-->
システムカタログ内のロックの対象のOID。
対象が一般的なデータベースオブジェクトでない場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objsubid</structfield> <type>int2</type>
      </para>
      <para>
<!--
       Column number targeted by the lock (the
       <structfield>classid</structfield> and <structfield>objid</structfield> refer to the
       table itself),
       or zero if the target is some other general database object,
       or null if the target is not a general database object
-->
ロック対象の列番号（<structfield>classid</structfield>と<structfield>objid</structfield>はテーブル自身を参照します）、その他の一般的なデータベースオブジェクトではゼロ、一般的ではないデータベースオブジェクトではNULLです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>virtualtransaction</structfield> <type>text</type>
      </para>
      <para>
<!--
       Virtual ID of the transaction that is holding or awaiting this lock
-->
ロックを保持、もしくは待っている仮想トランザクションID。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Process ID of the server process holding or awaiting this
       lock, or null if the lock is held by a prepared transaction
-->
ロックを保持、もしくは待っているサーバプロセスのプロセスID。
ただしプリペアードトランザクションによりロックが保持されている場合はNULL。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>mode</structfield> <type>text</type>
      </para>
      <para>
<!--
       Name of the lock mode held or desired by this process (see <xref linkend="locking-tables"/> and <xref linkend="xact-serializable"/>)
-->
このプロセスで保持または要求するロックモードの名称。
（<xref linkend="locking-tables"/> and <xref linkend="xact-serializable"/>参照）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>granted</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if lock is held, false if lock is awaited
-->
ロックが保持されている場合は真、ロックが待ち状態の場合は偽
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>fastpath</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if lock was taken via fast path, false if taken via main
       lock table
-->
ファストパス経由でロックが獲得されている場合は真、メインロックテーブル経由で獲得されている場合は偽。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>waitstart</structfield> <type>timestamptz</type>
      </para>
      <para>
       Time when the server process started waiting for this lock,
       or null if the lock is held.
       Note that this can be null for a very short period of time after
       the wait started even though <structfield>granted</structfield>
       is <literal>false</literal>.
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   <structfield>granted</structfield> is true in a row representing a lock
   held by the indicated process.  False indicates that this process is
   currently waiting to acquire this lock, which implies that at least one
   other process is holding or waiting for a conflicting lock mode on the same
   lockable object.  The waiting process will sleep until the other lock is
   released (or a deadlock situation is detected).  A single process can be
   waiting to acquire at most one lock at a time.
-->
指定されたプロセスにより保持されているロックを表す行内では<structfield>granted</structfield>は真です。
偽の場合はこのロックを獲得するため現在プロセスが待機中であることを示しています。
つまり、同じロック対象のオブジェクトに対して何らかの他のプロセスが競合するロックを保持、もしくは待機していることを意味します。
待機中のプロセスはその別のプロセスがロックを解放するまで活動を控えます。
（もしくはデッドロック状態が検出されることになります）。
単一プロセスでは一度に多くても1つのロックを獲得するために待機します。
  </para>

  <para>
<!--
   Throughout running a transaction, a server process holds an exclusive lock
   on the transaction's virtual transaction ID.  If a permanent ID is assigned
   to the transaction (which normally happens only if the transaction changes
   the state of the database), it also holds an exclusive lock on the
   transaction's permanent transaction ID until it ends.  When a process finds
   it necessary to wait specifically for another transaction to end, it does
   so by attempting to acquire share lock on the other transaction's ID
   (either virtual or permanent ID depending on the situation). That will
   succeed only when the other transaction terminates and releases its locks.
-->
トランザクションの実行中は常に、サーバプロセスはその仮想トランザクションID上に排他的ロックをかけます。
もしある永続IDがトランザクションに割り当てられる（普通はトランザクションがデータベースの状態を変化させるときのみに発生します）と、トランザクションは終了するまで永続トランザクションIDに対して排他ロックを保持します。
あるトランザクションが他のトランザクションを特定して終了まで待機しなければならないと判断した場合、他とみなしたトランザクションのIDに対し共有ロックを獲得するように試み、目的を達します。
（仮想IDであるか永続IDであるかは、その状況によります）。
これは、他とみなしたトランザクションが完了し、そしてロックを解放した場合のみ成功します。
  </para>

  <para>
<!--
   Although tuples are a lockable type of object,
   information about row-level locks is stored on disk, not in memory,
   and therefore row-level locks normally do not appear in this view.
   If a process is waiting for a
   row-level lock, it will usually appear in the view as waiting for the
   permanent transaction ID of the current holder of that row lock.
-->
タプルはロック対象のオブジェクト種類ですが、行レベルロックについての情報はメモリではなく、ディスクに保存されます。
よって行レベルロックは通常、このビューには現れません。
もしプロセスが行レベルロックの待ち状態である場合は、その行ロックを保持している永続トランザクションIDを待つ状態で、そのトランザクションはビューに現れます。
  </para>

  <para>
<!--
   Advisory locks can be acquired on keys consisting of either a single
   <type>bigint</type> value or two integer values.
   A <type>bigint</type> key is displayed with its
   high-order half in the <structfield>classid</structfield> column, its low-order half
   in the <structfield>objid</structfield> column, and <structfield>objsubid</structfield> equal
   to 1. The original <type>bigint</type> value can be reassembled with the
   expression <literal>(classid::bigint &lt;&lt; 32) |
   objid::bigint</literal>. Integer keys are displayed with the
   first key in the
   <structfield>classid</structfield> column, the second key in the <structfield>objid</structfield>
   column, and <structfield>objsubid</structfield> equal to 2.  The actual meaning of
   the keys is up to the user.  Advisory locks are local to each database,
   so the <structfield>database</structfield> column is meaningful for an advisory lock.
-->
勧告的ロックは、単一の<type>bigint</type>値、または、2つの整数値をキーとして獲得することができます。
<type>bigint</type>の場合は、その上位半分が<structfield>classid</structfield>列内に表示され、残りの下位半分は<structfield>objid</structfield>列内に表示されます。
また、<structfield>objsubid</structfield>は1です。
元の<type>bigint</type>値を<literal>(classid::bigint &lt;&lt; 32) | objid::bigint</literal>という式で再構成することができます。
整数値キーでは、最初のキーが<structfield>classid</structfield>列に、2番目のキーが<structfield>objid</structfield>列に表示され、<structfield>objsubid</structfield>は2です。
キーの実際の意味はユーザに任されています。
勧告的ロックはデータベースに対して局所的ですので、勧告的ロックでは<structfield>database</structfield>列が意味を持ちます。
  </para>

  <para>
<!--
   <structname>pg_locks</structname> provides a global view of all locks
   in the database cluster, not only those relevant to the current database.
   Although its <structfield>relation</structfield> column can be joined
   against <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield> to identify locked
   relations, this will only work correctly for relations in the current
   database (those for which the <structfield>database</structfield> column
   is either the current database's OID or zero).
-->
<structname>pg_locks</structname>は現行のデータベースに関連するロックのみならず、データベースクラスタ内のすべてのロックに関する全体的なビューを提供します。
<structfield>relation</structfield>列はロックされたリレーションを識別するために<structname>pg_class</structname>.<structfield>oid</structfield>と結合することができますが、これは現行のデータベース内のリレーション（<structfield>database</structfield>列が現行のデータベースのOIDまたはゼロとなっているもの）に対してのみ正常に動作します。
  </para>

  <para>
<!--
   The <structfield>pid</structfield> column can be joined to the
   <structfield>pid</structfield> column of the
   <link linkend="monitoring-pg-stat-activity-view">
   <structname>pg_stat_activity</structname></link>
   view to get more
   information on the session holding or awaiting each lock,
   for example
-->
それぞれのロックを保持もしくは待機しているセッションのさらなる情報を入手するため<link linkend="monitoring-pg-stat-activity-view"><structname>pg_stat_activity</structname></link>ビューの<structfield>pid</structfield>列と<structfield>pid</structfield>列を結合することができます。
例えば、このような感じです。
<programlisting>
SELECT * FROM pg_locks pl LEFT JOIN pg_stat_activity psa
    ON pl.pid = psa.pid;
</programlisting>
<!--
   Also, if you are using prepared transactions, the
   <structfield>virtualtransaction</structfield> column can be joined to the
   <structfield>transaction</structfield> column of the <link
   linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>
   view to get more information on prepared transactions that hold locks.
   (A prepared transaction can never be waiting for a lock,
   but it continues to hold the locks it acquired while running.)
   For example:
-->
また、プリペアードトランザクションを使用している場合には、ロックを保持しているプリペアードトランザクションに関してより多くの情報を得るため、<structfield>virtualtransaction</structfield>列は、<link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>ビューの<structfield>transaction</structfield>列と結合することができます。
（プリペアードトランザクションはロックを待つことはありませんが、実行時に獲得したロックを保持し続けます。）
例えば、このような感じです。
<programlisting>
SELECT * FROM pg_locks pl LEFT JOIN pg_prepared_xacts ppx
    ON pl.virtualtransaction = '-1/' || ppx.transaction;
</programlisting>
  </para>

  <para>
<!--
   While it is possible to obtain information about which processes block
   which other processes by joining <structname>pg_locks</structname> against
   itself, this is very difficult to get right in detail.  Such a query would
   have to encode knowledge about which lock modes conflict with which
   others.  Worse, the <structname>pg_locks</structname> view does not expose
   information about which processes are ahead of which others in lock wait
   queues, nor information about which processes are parallel workers running
   on behalf of which other client sessions.  It is better to use
   the <function>pg_blocking_pids()</function> function
   (see <xref linkend="functions-info-session-table"/>) to identify which
   process(es) a waiting process is blocked behind.
-->
<structname>pg_locks</structname>ビューとそれ自身の結合によって、どのプロセスが他のどのプロセスをブロックしているかの情報を入手することが可能ですが、同時に詳細な正しい情報を得ることは非常に困難です。
このようなクエリはどのロックモードが他のものと衝突しているかについての知見を書き出すべきです。
さらに悪いことに、<structname>pg_locks</structname>ビューは、ロック待ちキューにてどのプロセスが他のどのプロセスに先行しているかの情報を提供しない、またはどのプロセスが他のクライアントセッションのために動作している並列ワーカプロセスかの情報を提供しません。
待機しているプロセスが、どのプロセスにブロックされているかを識別するためにより良い方法は、<function>pg_blocking_pids()</function>関数（<xref linkend="functions-info-session-table"/>を参照してください）を使用することです。
  </para>

  <para>
<!--
   The <structname>pg_locks</structname> view displays data from both the
   regular lock manager and the predicate lock manager, which are
   separate systems; in addition, the regular lock manager subdivides its
   locks into regular and <firstterm>fast-path</firstterm> locks.
   This data is not guaranteed to be entirely consistent.
   When the view is queried,
   data on fast-path locks (with <structfield>fastpath</structfield> = <literal>true</literal>)
   is gathered from each backend one at a time, without freezing the state of
   the entire lock manager, so it is possible for locks to be taken or
   released while information is gathered.  Note, however, that these locks are
   known not to conflict with any other lock currently in place.  After
   all backends have been queried for fast-path locks, the remainder of the
   regular lock manager is locked as a unit, and a consistent snapshot of all
   remaining locks is collected as an atomic action.  After unlocking the
   regular lock manager, the predicate lock manager is similarly locked and all
   predicate locks are collected as an atomic action.  Thus, with the exception
   of fast-path locks, each lock manager will deliver a consistent set of
   results, but as we do not lock both lock managers simultaneously, it is
   possible for locks to be taken or released after we interrogate the regular
   lock manager and before we interrogate the predicate lock manager.
-->
<structname>pg_locks</structname>ビューは、異なるシステムにおける、通常のロックマネージャと述語ロックマネージャの両方からのデータを表示します。
さらに通常のロックマネージャではロックを通常ロックと<firstterm>近道</firstterm>ロックに細分化します。
このデータが完全に一貫性があることは保証されません。
ビューが問い合わせられると、近道ロック（<structfield>fastpath</structfield> = <literal>true</literal>が真）は、ロックマネージャ全体の状態を凍結することなく、各バックエンドからひとつひとつ収集されます。
このため情報収集期間中にロックが獲得されたり解放されたりされる可能性があります。
しかし、これらのロックはその時点で存在する他のロックと競合することがないことが分かっていることに注意してください。
近道ロックについてすべてのバックエンドを問い合わせた後、通常のロックマネージャの残りは１つの単位としてロックされ、残りすべてのロックの一貫性があるスナップショットを原子的な処理で収集します。
ロックマネージャのロックを解除した後、述語ロックマネージャは同様にロックされ、すべての述語ロックを原子的な処理で収集します。
このように、近道ロックという例外がありますが、各ロックマネージャは一貫性をもった結果セットを生成します。
しかし、両方のロックマネージャを同時にロックしませんので、通常のロックマネージャを問い合わせた後と述語ロックマネージャを問い合わせる前の間にロックが獲得されたり解放されたりされる可能性があります。
  </para>

  <para>
<!--
   Locking the regular and/or predicate lock manager could have some
   impact on database performance if this view is very frequently accessed.
   The locks are held only for the minimum amount of time necessary to
   obtain data from the lock managers, but this does not completely eliminate
   the possibility of a performance impact.
-->
このビューが頻繁にアクセスされている場合は、通常もしくは述語ロックマネージャをロックするとデータベースのパフォーマンスに影響があります。
ロックマネージャからデータを取得するために、ロックは必要最低限の時間だけ保持されますが、パフォーマンスに影響がある可能性が全くないわけではありません。
  </para>

 </sect1>

 <sect1 id="view-pg-matviews">
  <title><structname>pg_matviews</structname></title>

  <indexterm zone="view-pg-matviews">
   <primary>pg_matviews</primary>
  </indexterm>

  <indexterm zone="view-pg-matviews">
<!--
   <primary>materialized views</primary>
-->
   <primary>マテリアライズドビュー</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_matviews</structname> provides access to
   useful information about each materialized view in the database.
-->
<structname>pg_matviews</structname>ビューは、データベース内のマテリアライズドビューそれぞれに関する有用な情報へのアクセスを提供します。
  </para>

  <table>
<!--
   <title><structname>pg_matviews</structname> Columns</title>
-->
   <title><structname>pg_matviews</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing materialized view
-->
マテリアライズドビューを含むスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>matviewname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of materialized view
-->
マテリアライズドビューの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>matviewowner</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
<!--
       Name of materialized view's owner
-->
マテリアライズドビューの所有者の名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablespace</structfield> <type>name</type>
       (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>spcname</structfield>)
      </para>
      <para>
<!--
       Name of tablespace containing materialized view (null if default for database)
-->
マテリアライズドビューを含むテーブル空間の名前（データベースのデフォルトであればNULL）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>hasindexes</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if materialized view has (or recently had) any indexes
-->
マテリアライズドビューがインデックスを持つ（または最近まで持っていた）場合に真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>ispopulated</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if materialized view is currently populated
-->
マテリアライズドビューが現在データ投入されている場合に真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>definition</structfield> <type>text</type>
      </para>
      <para>
<!--
       Materialized view definition (a reconstructed <xref linkend="sql-select"/> query)
-->
マテリアライズドビューの定義（再構成された<command>SELECT</command>問い合わせ）
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-policies">
  <title><structname>pg_policies</structname></title>

  <indexterm zone="view-pg-policies">
   <primary>pg_policies</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_policies</structname> provides access to
   useful information about each row-level security policy in the database.
-->
ビュー<structname>pg_policies</structname>はデータベース内の行単位セキュリティのポリシーについて便利な情報へのアクセスを提供します。
  </para>

  <table>
<!--
   <title><structname>pg_policies</structname> Columns</title>
-->
   <title><structname>pg_policies</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing table policy is on
-->
ポリシーが適用されているテーブルがあるスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of table policy is on
-->
ポリシーが適用されているテーブルの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>policyname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-policy"><structname>pg_policy</structname></link>.<structfield>polname</structfield>)
      </para>
      <para>
<!--
       Name of policy
-->
ポリシーの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>permissive</structfield> <type>text</type>
      </para>
      <para>
<!--
       Is the policy permissive or restrictive?
-->
許容(permissive)ポリシーか、制限(restrictive)ポリシーか
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>roles</structfield> <type>name[]</type>
      </para>
      <para>
<!--
       The roles to which this policy applies
-->
このポリシーが適用されるロール
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cmd</structfield> <type>text</type>
      </para>
      <para>
<!--
       The command type to which the policy is applied
-->
ポリシーが適用されるコマンドの種類
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>qual</structfield> <type>text</type>
      </para>
      <para>
<!--
       The expression added to the security barrier qualifications for
       queries that this policy applies to
-->
このポリシーが適用される問い合わせにセキュリティバリアの制約として追加される式
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>with_check</structfield> <type>text</type>
      </para>
      <para>
<!--
       The expression added to the WITH CHECK qualifications for
       queries that attempt to add rows to this table
-->
このテーブルに行を追加する問い合わせにWITH CHECKの制約として追加される式
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

<!-- split-catalogs3-end -->
<!-- split-catalogs4-start -->

 <sect1 id="view-pg-prepared-statements">
  <title><structname>pg_prepared_statements</structname></title>

  <indexterm zone="view-pg-prepared-statements">
   <primary>pg_prepared_statements</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_prepared_statements</structname> view displays
   all the prepared statements that are available in the current
   session. See <xref linkend="sql-prepare"/> for more information about prepared
   statements.
-->
<structname>pg_prepared_statements</structname>ビューは現在のセッションで利用可能な準備済み文をすべて表示します。
準備済み文についての詳細は<xref linkend="sql-prepare"/>を参照してください。
  </para>

  <para>
<!--
   <structname>pg_prepared_statements</structname> contains one row
   for each prepared statement. Rows are added to the view when a new
   prepared statement is created and removed when a prepared statement
   is released (for example, via the <link linkend="sql-deallocate"><command>DEALLOCATE</command></link> command).
-->
<structname>pg_prepared_statements</structname>には、1つの準備済み文に対して一行が存在します。
新しい準備済み文が作成されると行が追加され、準備済み文が解放される（例えば<xref linkend="sql-deallocate"/>を使用）と行が削除されます。
  </para>

  <table>
<!--
   <title><structname>pg_prepared_statements</structname> Columns</title>
-->
   <title><structname>pg_prepared_statements</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>text</type>
      </para>
      <para>
<!--
       The identifier of the prepared statement
-->
準備済み文の識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>statement</structfield> <type>text</type>
      </para>
      <para>
<!--
       The query string submitted by the client to create this
       prepared statement. For prepared statements created via SQL,
       this is the <command>PREPARE</command> statement submitted by
       the client. For prepared statements created via the
       frontend/backend protocol, this is the text of the prepared
       statement itself.
-->
この準備済み文を作成するためにクライアントが送付した問い合わせ文字列。
SQL経由で作成された準備済み文では、これはクライアントが送信した<command>PREPARE</command>文です。
フロントエンド/バックエンドプロトコル経由で作成された準備済み文では、これは準備済み文自身のテキストです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prepare_time</structfield> <type>timestamptz</type>
      </para>
      <para>
<!--
       The time at which the prepared statement was created
-->
準備済み文が作成された時間
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>parameter_types</structfield> <type>regtype[]</type>
      </para>
      <para>
<!--
       The expected parameter types for the prepared statement in the
       form of an array of <type>regtype</type>. The OID corresponding
       to an element of this array can be obtained by casting the
       <type>regtype</type> value to <type>oid</type>.
-->
<type>regtype</type>配列形式の準備済み文が想定しているパラメータ型。
配列要素に対応するOIDは、<type>regtype</type>から<type>oid</type>へのキャストを行うことで取り出すことができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>from_sql</structfield> <type>bool</type>
      </para>
      <para>
<!--
       <literal>true</literal> if the prepared statement was created
       via the <command>PREPARE</command> SQL command;
       <literal>false</literal> if the statement was prepared via the
       frontend/backend protocol
-->
準備済み文が<command>PREPARE</command> SQLコマンド経由で作成された場合は<literal>true</literal>、フロントエンド/バックエンドプロトコル経由で文が準備された場合は<literal>false</literal>
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>generic_plans</structfield> <type>int8</type>
      </para>
      <para>
       Number of times generic plan was chosen
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>custom_plans</structfield> <type>int8</type>
      </para>
      <para>
       Number of times custom plan was chosen
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The <structname>pg_prepared_statements</structname> view is read-only.
-->
<structname>pg_prepared_statements</structname>ビューは読み取り専用です。
  </para>
 </sect1>

 <sect1 id="view-pg-prepared-xacts">
  <title><structname>pg_prepared_xacts</structname></title>

  <indexterm zone="view-pg-prepared-xacts">
   <primary>pg_prepared_xacts</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_prepared_xacts</structname> displays
   information about transactions that are currently prepared for two-phase
   commit (see <xref linkend="sql-prepare-transaction"/> for details).
-->
<structname>pg_prepared_xacts</structname>ビューは、現状で2相コミットのためにプリペアードトランザクションについての情報を表示します（詳細は<xref linkend="sql-prepare-transaction"/>を参照してください）。
  </para>

  <para>
<!--
   <structname>pg_prepared_xacts</structname> contains one row per prepared
   transaction.  An entry is removed when the transaction is committed or
   rolled back.
-->
<structname>pg_prepared_xacts</structname>は、プリペアードトランザクション毎に1つの行を含みます。
この項目はトランザクションがコミットもしくはロールバックされたときに削除されます。
  </para>

  <table>
<!--
   <title><structname>pg_prepared_xacts</structname> Columns</title>
-->
   <title><structname>pg_prepared_xacts</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>transaction</structfield> <type>xid</type>
      </para>
      <para>
<!--
       Numeric transaction identifier of the prepared transaction
-->
プリペアードトランザクションに対する数値のトランザクション識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>gid</structfield> <type>text</type>
      </para>
      <para>
<!--
       Global transaction identifier that was assigned to the transaction
-->
トランザクションに割り当てられたグローバルのトランザクション識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>prepared</structfield> <type>timestamptz</type>
      </para>
      <para>
<!--
       Time at which the transaction was prepared for commit
-->
トランザクションがコミットのために準備された時間
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>owner</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
<!--
       Name of the user that executed the transaction
-->
トランザクションを実行したユーザ名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>database</structfield> <type>name</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>datname</structfield>)
      </para>
      <para>
<!--
       Name of the database in which the transaction was executed
-->
トランザクションを実行したデータベース名
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   When the <structname>pg_prepared_xacts</structname> view is accessed, the
   internal transaction manager data structures are momentarily locked, and
   a copy is made for the view to display.  This ensures that the
   view produces a consistent set of results, while not blocking
   normal operations longer than necessary.  Nonetheless
   there could be some impact on database performance if this view is
   frequently accessed.
-->
<structname>pg_prepared_xacts</structname>ビューにアクセスすると、内部のトランザクション管理データ構造が一時的にロックされます。
そして表示用にコピーが作成されます。
これは、必要以上に長く通常の操作をブロックさせずに、ビューが一貫性のある結果を生成することを保証します。
このビューが頻繁にアクセスされると、データベースの性能になんらかの影響を及ぼします。
  </para>

 </sect1>

 <sect1 id="view-pg-publication-tables">
  <title><structname>pg_publication_tables</structname></title>

  <indexterm zone="view-pg-publication-tables">
   <primary>pg_publication_tables</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_publication_tables</structname> provides
   information about the mapping between publications and the tables they
   contain.  Unlike the underlying catalog
   <link linkend="catalog-pg-publication-rel"><structname>pg_publication_rel</structname></link>,
   this view expands
   publications defined as <literal>FOR ALL TABLES</literal>, so for such
   publications there will be a row for each eligible table.
-->
ビュー<structname>pg_publication_tables</structname>はパブリケーションとそれに含まれるテーブルの間のマッピングに関する情報を提供します。
その元となるカタログ<structname>pg_publication_rel</structname>とは異なり、このビューは<literal>FOR ALL TABLES</literal>で定義されたパブリケーションを展開するため、そのようなパブリケーションについては対象となる各テーブルについて1行があります。
  </para>

  <table>
<!--
   <title><structname>pg_publication_tables</structname> Columns</title>
-->
   <title><structname>pg_publication_tables</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pubname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-publication"><structname>pg_publication</structname></link>.<structfield>pubname</structfield>)
      </para>
      <para>
<!--
       Name of publication
-->
パブリケーションの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing table
-->
テーブルがあるスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of table
-->
テーブルの名前
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

  <sect1 id="view-pg-replication-origin-status">
  <title><structname>pg_replication_origin_status</structname></title>

  <indexterm zone="view-pg-replication-origin-status">
   <primary>pg_replication_origin_status</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_replication_origin_status</structname> view
   contains information about how far replay for a certain origin has
   progressed.  For more on replication origins
   see <xref linkend="replication-origins"/>.
-->
<structname>pg_replication_origin_status</structname>ビューには、ある起点の再生の進捗についての情報が含まれます。
レプリケーション起点についての詳細は<xref linkend="replication-origins"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_replication_origin_status</structname> Columns</title>
-->
   <title><structname>pg_replication_origin_status</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_id</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-replication-origin"><structname>pg_replication_origin</structname></link>.<structfield>roident</structfield>)
      </para>
      <para>
<!--
       internal node identifier
-->
内部ノード識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>external_id</structfield> <type>text</type>
       (references <link linkend="catalog-pg-replication-origin"><structname>pg_replication_origin</structname></link>.<structfield>roname</structfield>)
      </para>
      <para>
<!--
       external node identifier
-->
外部ノード識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>remote_lsn</structfield> <type>pg_lsn</type>
      </para>
      <para>
<!--
       The origin node's LSN up to which data has been replicated.
-->
そのデータまで複製されたことを示す起点ノードのLSN
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>local_lsn</structfield> <type>pg_lsn</type>
      </para>
      <para>
<!--
       This node's LSN at which <literal>remote_lsn</literal> has
       been replicated. Used to flush commit records before persisting
       data to disk when using asynchronous commits.
-->
その<literal>remote_lsn</literal>が複製されたことを示す、このノードのLSN。
非同期コミットを使用している場合に、データをディスクに書き出す前にコミットレコードをフラッシュするために使用されます。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="view-pg-replication-slots">
  <title><structname>pg_replication_slots</structname></title>

  <indexterm zone="view-pg-replication-slots">
   <primary>pg_replication_slots</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_replication_slots</structname> view provides a listing
   of all replication slots that currently exist on the database cluster,
   along with their current state.
-->
<structname>pg_replication_slots</structname>は、現在存在するデータベースクラスタとその状態、全てのレプリケーションスロットの一覧を提供します。
  </para>

  <para>
<!--
   For more on replication slots,
   see <xref linkend="streaming-replication-slots"/> and <xref linkend="logicaldecoding"/>.
-->
レプリケーションスロットに関する詳細は、<xref linkend="streaming-replication-slots"/>と<xref linkend="logicaldecoding"/>を参照してください。
  </para>

  <table>
<!--
   <title><structname>pg_replication_slots</structname> Columns</title>
-->
   <title><structname>pg_replication_slots</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>slot_name</structfield> <type>name</type>
      </para>
      <para>
<!--
       A unique, cluster-wide identifier for the replication slot
-->
クラスタ間で一意なレプリケーションスロットの識別子
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>plugin</structfield> <type>name</type>
      </para>
      <para>
<!--
       The base name of the shared object containing the output plugin this logical slot is using, or null for physical slots.
-->
出力プラグインに使用されている論理スロットまたは物理スロットの場合はnull、を含む共有オブジェクトの基底名。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>slot_type</structfield> <type>text</type>
      </para>
      <para>
<!--
       The slot type: <literal>physical</literal> or <literal>logical</literal>
-->
スロットのタイプ。<literal>physical</literal>または<literal>logical</literal>。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>datoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the database this slot is associated with, or
       null. Only logical slots have an associated database.
-->
このスロットと関連しているデータベースのOID、またはnull。論理スロットだけがデータベースと関連を持つことができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>database</structfield> <type>name</type>
       (references <link linkend="catalog-pg-database"><structname>pg_database</structname></link>.<structfield>datname</structfield>)
      </para>
      <para>
<!--
       The name of the database this slot is associated with, or
       null. Only logical slots have an associated database.
-->
このスロットと関連しているデータベース名、またはnull。論理スロットだけがデータベースと関連を持つことができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>temporary</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this is a temporary replication slot. Temporary slots are
       not saved to disk and are automatically dropped on error or when
       the session has finished.
-->
これが一時レプリケーションスロットの場合真になります。
一時スロットはディスクに保存されず、エラーのとき、またはセッションが終了したときには自動的に削除されます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>active</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this slot is currently actively being used
-->
このスロットが現在アクティブで使用されている場合、真。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>active_pid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       The process ID of the session using this slot if the slot
       is currently actively being used. <literal>NULL</literal> if
       inactive.
-->
このスロットが現在アクティブで使用されている場合は、スロットを使用しているセッションのプロセスID。アクティブでなければ<literal>NULL</literal>。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>xmin</structfield> <type>xid</type>
      </para>
      <para>
<!--
       The oldest transaction that this slot needs the database to
       retain.  <literal>VACUUM</literal> cannot remove tuples deleted
       by any later transaction.
-->
このスロットがデータベースとの接続を必要としている最も古いトランザクション。
<literal>VACUUM</literal> は後でトランザクションによって削除されたタプルを除去できません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>catalog_xmin</structfield> <type>xid</type>
      </para>
      <para>
<!--
       The oldest transaction affecting the system catalogs that this
       slot needs the database to retain.  <literal>VACUUM</literal> cannot
       remove catalog tuples deleted by any later transaction.
-->
このスロットがデータベースとの接続を必要としている、システムカタログに影響する最も古いトランザクション。
<literal>VACUUM</literal>は後でトランザクションによって削除されたカタログのタプルを除去できません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>restart_lsn</structfield> <type>pg_lsn</type>
      </para>
      <para>
<!--
       The address (<literal>LSN</literal>) of oldest WAL which still
       might be required by the consumer of this slot and thus won't be
       automatically removed during checkpoints unless this LSN
       gets behind more than <xref linkend="guc-max-slot-wal-keep-size"/>
       from the current LSN.  <literal>NULL</literal>
       if the <literal>LSN</literal> of this slot has never been reserved.
-->
消費者のスロットによって必要とされており、LSNが現在のLSNから<xref linkend="guc-max-slot-wal-keep-size"/>以上遅れていない限り、チェックポイント中に自動的に削除されない最古のアドレス（<literal>LSN</literal>）です。
このスロットの<literal>LSN</literal>が保存されていなければ<literal>NULL</literal>です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>confirmed_flush_lsn</structfield> <type>pg_lsn</type>
      </para>
      <para>
<!--
       The address (<literal>LSN</literal>) up to which the logical
       slot's consumer has confirmed receiving data. Data older than this is
       not available anymore. <literal>NULL</literal> for physical slots.
-->
利用者がデータの受信を確認できている論理スロットのアドレス（<literal>LSN</literal>)）。
これより古いデータは、もはや有効ではありません。
物理スロットの場合は<literal>NULL</literal>。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>wal_status</structfield> <type>text</type>
      </para>
      <para>
<!--
       Availability of WAL files claimed by this slot.
       Possible values are:
-->
このスロットが報告するWALファイルの入手可能性。
可能な値は以下です。
       <itemizedlist>
        <listitem>
<!--
         <para><literal>reserved</literal> means that the claimed files
          are within <varname>max_wal_size</varname>.</para>
-->
<para><literal>reserved</literal>なら、報告されたファイルは<varname>max_wal_size</varname>内であることを意味します。</para>
        </listitem>
        <listitem>
         <para><literal>extended</literal> means
          that <varname>max_wal_size</varname> is exceeded but the files are
          still retained, either by the replication slot or
          by <varname>wal_keep_size</varname>.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>unreserved</literal> means that the slot no longer
          retains the required WAL files and some of them are to be removed at
          the next checkpoint.  This state can return
          to <literal>reserved</literal> or <literal>extended</literal>.
         </para>
        </listitem>
        <listitem>
         <para>
<!--
          <literal>lost</literal> means that some required WAL files have
          been removed and this slot is no longer usable.
-->
<literal>lost</literal>は、必要なWALファイルの一部が削除されており、このスロットはもはや利用可能ではないことを意味します。
         </para>
        </listitem>
       </itemizedlist>
<!--
       The last two states are seen only when
       <xref linkend="guc-max-slot-wal-keep-size"/> is
       non-negative. If <structfield>restart_lsn</structfield> is NULL, this
       field is null.
-->
最後の2つの状態は、<xref linkend="guc-max-slot-wal-keep-size"/>が非負の場合にのみ起こります。
<structfield>restart_lsn</structfield>がNULLなら、このフィールドはNULLです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>safe_wal_size</structfield> <type>int8</type>
      </para>
      <para>
<!--
       The number of bytes that can be written to WAL such that this slot
       is not in danger of getting in state "lost".  It is NULL for lost
       slots, as well as if <varname>max_slot_wal_keep_size</varname>
       is <literal>-1</literal>.
-->
「ロスト」状態に陥る危険性のないスロットにおいて、WALに書き込むことのできるバイト数です。
失われたスロットに対して、あるいは<varname>max_slot_wal_keep_size</varname>が<literal>-1</literal>ならNULLです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>two_phase</structfield> <type>bool</type>
      </para>
      <para>
       True if the slot is enabled for decoding prepared transactions.  Always
       false for physical slots.
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="view-pg-roles">
  <title><structname>pg_roles</structname></title>

  <indexterm zone="view-pg-roles">
   <primary>pg_roles</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_roles</structname> provides access to
   information about database roles.  This is simply a publicly
   readable view of
   <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>
   that blanks out the password field.
-->
<structname>pg_roles</structname>ビューはデータベースのロールに関する情報を提供します。
これは単に一般に公開されている<link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>のビューですが、パスワード列が空白になっています。
  </para>

  <table>
<!--
   <title><structname>pg_roles</structname> Columns</title>
-->
   <title><structname>pg_roles</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolname</structfield> <type>name</type>
      </para>
      <para>
<!--
       Role name
-->
ロール名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolsuper</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role has superuser privileges
-->
ロールはスーパーユーザの権限を持っています
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolinherit</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role automatically inherits privileges of roles it is a
       member of
-->
ロールは自動的にメンバとして属するロールの権限を継承します
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolcreaterole</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role can create more roles
-->
ロールはロールを作成することができます
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolcreatedb</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role can create databases
-->
ロールはデータベースを作成することができます
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolcanlogin</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role can log in. That is, this role can be given as the initial
       session authorization identifier
-->
ロールはログインすることができます。つまりロールはセッションを始める認証の識別子となることができます
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolreplication</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role is a replication role. A replication role can initiate replication
       connections and create and drop replication slots.
-->
ロールはレプリケーション用のロールです。
レプリケーションロールは、レプリケーション接続を開始すること、およびレプリケーションスロットを作成および削除することができます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolconnlimit</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For roles that can log in, this sets maximum number of concurrent
       connections this role can make.  -1 means no limit.
-->
ログイン可能なロールでは、これはロールが確立できる同時実行接続数を設定します。
-1は制限無しを意味します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolpassword</structfield> <type>text</type>
      </para>
      <para>
<!--
       Not the password (always reads as <literal>********</literal>)
-->
パスワードでありません（常に<literal>********</literal>のように読まれます）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolvaliduntil</structfield> <type>timestamptz</type>
      </para>
      <para>
<!--
       Password expiry time (only used for password authentication);
       null if no expiration
-->
パスワード有効期限（パスワード認証でのみ使用）。
NULLの場合には満了時間はありません。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolbypassrls</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Role bypasses every row-level security policy, see
       <xref linkend="ddl-rowsecurity"/> for more information.
-->
すべての行単位セキュリティポリシーを無視するロール。詳しくは<xref linkend="ddl-rowsecurity"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rolconfig</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Role-specific defaults for run-time configuration variables
-->
実行時設定変数に関するロール固有のデフォルト
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>oid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       ID of role
-->
ロールのID
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-rules">
  <title><structname>pg_rules</structname></title>

  <indexterm zone="view-pg-rules">
   <primary>pg_rules</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_rules</structname> provides access to
   useful information about query rewrite rules.
-->
   <structname>pg_rules</structname>ビューは問い合わせ書き換えルールについての有用な情報へのアクセスを提供します。
  </para>

  <table>
<!--
   <title><structname>pg_rules</structname> Columns</title>
-->
   <title><structname>pg_rules</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing table
-->
テーブルがあるスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of table the rule is for
-->
ルールの対象のテーブル名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rulename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-rewrite"><structname>pg_rewrite</structname></link>.<structfield>rulename</structfield>)
      </para>
      <para>
<!--
       Name of rule
-->
ルール名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>definition</structfield> <type>text</type>
      </para>
      <para>
<!--
       Rule definition (a reconstructed creation command)
-->
ルール定義（再構築された生成コマンド）
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The <structname>pg_rules</structname> view excludes the <literal>ON SELECT</literal> rules
   of views and materialized views; those can be seen in
   <link linkend="view-pg-views"><structname>pg_views</structname></link> and <link linkend="view-pg-matviews"><structname>pg_matviews</structname></link>.
-->
<structname>pg_rules</structname>ビューは、ビューおよびマテリアライズドビューに対する<literal>ON SELECT</literal>ルールを除外します。
これらは<structname>pg_views</structname>および<structname>pg_matviews</structname>にあります。
  </para>

 </sect1>

 <sect1 id="view-pg-seclabels">
  <title><structname>pg_seclabels</structname></title>

  <indexterm zone="view-pg-seclabels">
   <primary>pg_seclabels</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_seclabels</structname> provides information about
   security labels.  It as an easier-to-query version of the
   <link linkend="catalog-pg-seclabel"><structname>pg_seclabel</structname></link> catalog.
-->
<structname>pg_seclabels</structname>ビューはセキュリティラベルに関する情報を提供します。
これは<link linkend="catalog-pg-seclabel"><structname>pg_seclabel</structname></link>カタログをより問い合わせし易くしたものです。
  </para>

  <table>
<!--
   <title><structname>pg_seclabels</structname> Columns</title>
-->
   <title><structname>pg_seclabels</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objoid</structfield> <type>oid</type>
       (references any OID column)
      </para>
      <para>
<!--
       The OID of the object this security label pertains to
-->
このセキュリティラベルが関係するオブジェクトのOIDです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>classoid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the system catalog this object appears in
-->
このオブジェクトが現れるシステムカタログのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objsubid</structfield> <type>int4</type>
      </para>
      <para>
<!--
       For a security label on a table column, this is the column number (the
       <structfield>objoid</structfield> and <structfield>classoid</structfield> refer to
       the table itself).  For all other object types, this column is
       zero.
-->
テーブル列上のセキュリティラベルでは、これは列番号です（<structfield>objoid</structfield>および<structfield>classoid</structfield>はテーブル自身を参照します）。
他のすべての種類のオブジェクトでは、この列はゼロです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objtype</structfield> <type>text</type>
      </para>
      <para>
<!--
       The type of object to which this label applies, as text.
-->
このラベルが適用されるオブジェクトの種類のテキスト表現
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objnamespace</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the namespace for this object, if applicable;
       otherwise NULL.
-->
もし適用可能であればこのオブジェクト用の名前空間のOID。さもなければNULL
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>objname</structfield> <type>text</type>
      </para>
      <para>
<!--
       The name of the object to which this label applies, as text.
-->
このラベルが適用されるオブジェクト名称のテキスト表現
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>provider</structfield> <type>text</type>
       (references <link linkend="catalog-pg-seclabel"><structname>pg_seclabel</structname></link>.<structfield>provider</structfield>)
      </para>
      <para>
<!--
       The label provider associated with this label.
-->
このラベルに関連付いたラベルプロバイダです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>label</structfield> <type>text</type>
       (references <link linkend="catalog-pg-seclabel"><structname>pg_seclabel</structname></link>.<structfield>label</structfield>)
      </para>
      <para>
<!--
       The security label applied to this object.
-->
このオブジェクトに適用されるセキュリティラベルです。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="view-pg-sequences">
  <title><structname>pg_sequences</structname></title>

  <indexterm zone="view-pg-sequences">
   <primary>pg_sequences</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_sequences</structname> provides access to
   useful information about each sequence in the database.
-->
ビュー<structname>pg_sequences</structname>はデータベース内の各シーケンスについての有用な情報へのアクセスを提供します。
  </para>

  <table>
<!--
   <title><structname>pg_sequences</structname> Columns</title>
-->
   <title><structname>pg_sequences</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing sequence
-->
シーケンスがあるスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequencename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of sequence
-->
シーケンスの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sequenceowner</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
<!--
       Name of sequence's owner
-->
シーケンスの所有者の名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>data_type</structfield> <type>regtype</type>
       (references <link linkend="catalog-pg-type"><structname>pg_type</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       Data type of the sequence
-->
シーケンスのデータ型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>start_value</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Start value of the sequence
-->
シーケンスの開始値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>min_value</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Minimum value of the sequence
-->
シーケンスの最小値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>max_value</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Maximum value of the sequence
-->
シーケンスの最大値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>increment_by</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Increment value of the sequence
-->
シーケンスの増分値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cycle</structfield> <type>bool</type>
      </para>
      <para>
<!--
       Whether the sequence cycles
-->
シーケンスが周回するかどうか
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>cache_size</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Cache size of the sequence
-->
シーケンスのキャッシュサイズ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>last_value</structfield> <type>int8</type>
      </para>
      <para>
<!--
       The last sequence value written to disk.  If caching is used,
       this value can be greater than the last value handed out from the
       sequence.  Null if the sequence has not been read from yet.  Also, if
       the current user does not have <literal>USAGE</literal>
       or <literal>SELECT</literal> privilege on the sequence, the value is
       null.
-->
ディスクに書き込まれた最後のシーケンス値。
キャッシュが使用されている場合、この値はシーケンスから最後に取り出された値より大きくなることがあります。
シーケンスからまだ読み取られていないときはNULLになります。
また、現在のユーザがシーケンスについて<literal>USAGE</literal>あるいは<literal>SELECT</literal>権限がない場合も値はNULLになります。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect1>

 <sect1 id="view-pg-settings">
  <title><structname>pg_settings</structname></title>

  <indexterm zone="view-pg-settings">
   <primary>pg_settings</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_settings</structname> provides access to
   run-time parameters of the server.  It is essentially an alternative
   interface to the <link linkend="sql-show"><command>SHOW</command></link>
   and <link linkend="sql-set"><command>SET</command></link> commands.
   It also provides access to some facts about each parameter that are
   not directly available from <link linkend="sql-show"><command>SHOW</command></link>, such as minimum and
   maximum values.
-->
<structname>pg_settings</structname>ビューはサーバの実行時パラメータへのアクセスを提供します。
基本的に<xref linkend="sql-show"/>と<xref linkend="sql-set"/>コマンドの代わりとなるインタフェースです。
同時に最大・最小値などのように<command>SHOW</command>コマンドでは直接入手できないそれぞれのパラメータのいくつかの実状にアクセスする機能を提供します。
  </para>

  <table>
<!--
   <title><structname>pg_settings</structname> Columns</title>
-->
   <title><structname>pg_settings</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>text</type>
      </para>
      <para>
<!--
       Run-time configuration parameter name
-->
実行時設定パラメータ名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>setting</structfield> <type>text</type>
      </para>
      <para>
<!--
       Current value of the parameter
-->
パラメータの現在値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>unit</structfield> <type>text</type>
      </para>
      <para>
<!--
       Implicit unit of the parameter
-->
暗黙的なパラメータの単位
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>category</structfield> <type>text</type>
      </para>
      <para>
<!--
       Logical group of the parameter
-->
パラメータの論理グループ
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>short_desc</structfield> <type>text</type>
      </para>
      <para>
<!--
       A brief description of the parameter
-->
パラメータの簡潔な説明
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>extra_desc</structfield> <type>text</type>
      </para>
      <para>
<!--
       Additional, more detailed, description of the parameter
-->
追加で、より詳細なパラメータについての説明
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>context</structfield> <type>text</type>
      </para>
      <para>
<!--
       Context required to set the parameter's value (see below)
-->
パラメータ値を設定するために必要な文脈（後述）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>vartype</structfield> <type>text</type>
      </para>
      <para>
<!--
       Parameter type (<literal>bool</literal>, <literal>enum</literal>,
       <literal>integer</literal>, <literal>real</literal>, or <literal>string</literal>)
-->
パラメータの型（<literal>bool</literal>、<literal>enum</literal>、<literal>integer</literal>、<literal>real</literal>もしくは<literal>string</literal>）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>source</structfield> <type>text</type>
      </para>
      <para>
<!--
       Source of the current parameter value
-->
現在のパラメータ値のソース
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>min_val</structfield> <type>text</type>
      </para>
      <para>
<!--
       Minimum allowed value of the parameter (null for non-numeric
       values)
-->
容認されている最小のパラメータ値（数値でない場合はNULL）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>max_val</structfield> <type>text</type>
      </para>
      <para>
<!--
       Maximum allowed value of the parameter (null for non-numeric
       values)
-->
容認されている最大のパラメータ値（数値でない場合はNULL）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>enumvals</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Allowed values of an enum parameter (null for non-enum
       values)
-->
許可された列挙パラメータの値(列挙型ではない場合はNULL)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>boot_val</structfield> <type>text</type>
      </para>
      <para>
<!--
       Parameter value assumed at server startup if the parameter is
       not otherwise set
-->
パラメータが設定されていなかったとした場合に仮定されるサーバ起動時のパラメータ値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>reset_val</structfield> <type>text</type>
      </para>
      <para>
<!--
       Value that <link linkend="sql-reset"><command>RESET</command></link> would reset the parameter to
       in the current session
-->
現状のセッションにおいて<command>RESET</command>によって戻されるパラメータの値
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sourcefile</structfield> <type>text</type>
      </para>
      <para>
<!--
       Configuration file the current value was set in (null for
       values set from sources other than configuration files, or when
       examined by a user who is neither a superuser or a member of
       <literal>pg_read_all_settings</literal>); helpful when using
       <literal>include</literal> directives in configuration files
-->
現状の値が設定されている設定ファイル(設定ファイル以外のソースから設定された値の場合、スーパーユーザでも<literal>pg_read_all_settings</literal>のメンバーでもないユーザから検査された時はNULLです)。
設定ファイル内で<literal>include</literal>指示子を使用する時に役に立ちます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>sourceline</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Line number within the configuration file the current value was
       set at (null for values set from sources other than configuration files,
       or when examined by a user who is neither a superuser or a member of
       <literal>pg_read_all_settings</literal>).
-->
現状の値が設定されている設定ファイル内の行番号(設定ファイル以外のソースから設定された値の場合、スーパーユーザでも<literal>pg_read_all_settings</literal>のメンバーでもないユーザから検査された時はNULLです。)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>pending_restart</structfield> <type>bool</type>
      </para>
      <para>
<!--
       <literal>true</literal> if the value has been changed in the
       configuration file but needs a restart; or <literal>false</literal>
       otherwise.
-->
値が設定ファイル内で変更されたが再起動が必要という場合は<literal>true</literal>、それ以外の場合は<literal>false</literal>。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   There are several possible values of <structfield>context</structfield>.
   In order of decreasing difficulty of changing the setting, they are:
-->
<structfield>context</structfield>が取り得る値は複数あります。
この設定の変更の困難さを軽くするために、以下に示します。
  </para>

  <variablelist>
   <varlistentry>
    <!-- PGC_INTERNAL -->
    <term><literal>internal</literal></term>
    <listitem>
     <para>
<!--
      These settings cannot be changed directly; they reflect internally
      determined values.  Some of them may be adjustable by rebuilding the
      server with different configuration options, or by changing options
      supplied to <application>initdb</application>.
-->
これらの設定は直接変更できません。
これらは内部で決定された値を反映するものです。
一部は異なる設定オプションでサーバを再構築する、または、<command>initdb</command>に与えるオプションを変更することで調整することができます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <!-- PGC_POSTMASTER -->
    <term><literal>postmaster</literal></term>
    <listitem>
     <para>
<!--
      These settings can only be applied when the server starts, so any change
      requires restarting the server.  Values for these settings are typically
      stored in the <filename>postgresql.conf</filename> file, or passed on
      the command line when starting the server.  Of course, settings with any
      of the lower <structfield>context</structfield> types can also be
      set at server start time.
-->
これらの設定はサーバ起動時にのみ適用することができます。
このため何かを変更するためにはサーバを再起動しなければなりません。
これらの設定用の値は通常<filename>postgresql.conf</filename>ファイル内に格納されている、あるいは、サーバを起動する際のコマンドラインから渡されます。
当然ながら、より低い種類の<structfield>context</structfield>を持つ設定もサーバ起動時に設定することができます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <!-- PGC_SIGHUP -->
    <term><literal>sighup</literal></term>
    <listitem>
     <para>
<!--
      Changes to these settings can be made in
      <filename>postgresql.conf</filename> without restarting the server.
      Send a <systemitem>SIGHUP</systemitem> signal to the postmaster to
      cause it to re-read <filename>postgresql.conf</filename> and apply
      the changes.  The postmaster will also forward the
      <systemitem>SIGHUP</systemitem> signal to its child processes so that
      they all pick up the new value.
-->
これらの設定は、サーバを再起動することなく<filename>postgresql.conf</filename>内を変更することで行うことができます。
<filename>postgresql.conf</filename>を再度読み込み、変更を適用させるためには、postmasterに<systemitem>SIGHUP</systemitem>シグナルを送信してください。
すべての子プロセスが新しい値を選択するように、postmasterは同時に子プロセスに<systemitem>SIGHUP</systemitem>シグナルを転送します。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <!-- PGC_SU_BACKEND -->
    <term><literal>superuser-backend</literal></term>
    <listitem>
     <para>
<!--
      Changes to these settings can be made in
      <filename>postgresql.conf</filename> without restarting the server.
      They can also be set for a particular session in the connection request
      packet (for example, via <application>libpq</application>'s <literal>PGOPTIONS</literal>
      environment variable), but only if the connecting user is a superuser.
      However, these settings never change in a session after it is started.
      If you change them in <filename>postgresql.conf</filename>, send a
      <systemitem>SIGHUP</systemitem> signal to the postmaster to cause it to
      re-read <filename>postgresql.conf</filename>.  The new values will only
      affect subsequently-launched sessions.
-->
これらの設定は、サーバを再起動することなく<filename>postgresql.conf</filename>内を変更することで行うことができます。
また、接続要求パケットの中で特定のセッション向けに設定することもできます（例えば<application>libpq</application>の<literal>PGOPTIONS</literal>環境変数）が、これは接続ユーザがスーパーユーザの場合に限られます。
しかし、これらの設定はセッションが開始してから、そのセッションの中で変更することはできません。
<filename>postgresql.conf</filename>内でそれらを変更した場合は、<filename>postgresql.conf</filename>を再度読み込ませるために、postmasterに<systemitem>SIGHUP</systemitem>シグナルを送信してください。
新しい値はその後で始まったセッションにのみ影響を与えます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <!-- PGC_BACKEND -->
    <term><literal>backend</literal></term>
    <listitem>
     <para>
<!--
      Changes to these settings can be made in
      <filename>postgresql.conf</filename> without restarting the server.
      They can also be set for a particular session in the connection request
      packet (for example, via <application>libpq</application>'s <literal>PGOPTIONS</literal>
      environment variable); any user can make such a change for their session.
      However, these settings never change in a session after it is started.
      If you change them in <filename>postgresql.conf</filename>, send a
      <systemitem>SIGHUP</systemitem> signal to the postmaster to cause it to
      re-read <filename>postgresql.conf</filename>.  The new values will only
      affect subsequently-launched sessions.
-->
これらの設定は、サーバを再起動することなく<filename>postgresql.conf</filename>内を変更することで行うことができます。
また、接続要求パケットの中で特定のセッション向けに設定することもできます（例えば<application>libpq</application>の<literal>PGOPTIONS</literal>環境変数）。
どのユーザでも、自分のセッション向けにそのような変更をすることができます。
しかし、これらの設定はセッションが開始してから、そのセッションの中で変更することはできません。
<filename>postgresql.conf</filename>内でそれらを変更した場合は、<filename>postgresql.conf</filename>を再度読み込ませるために、postmasterに<systemitem>SIGHUP</systemitem>シグナルを送信してください。
新しい値はその後で始まったセッションにのみ影響を与えます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <!-- PGC_SUSET -->
    <term><literal>superuser</literal></term>
    <listitem>
     <para>
<!--
      These settings can be set from <filename>postgresql.conf</filename>,
      or within a session via the <command>SET</command> command; but only superusers
      can change them via <command>SET</command>.  Changes in
      <filename>postgresql.conf</filename> will affect existing sessions
      only if no session-local value has been established with <command>SET</command>.
-->
これらの設定は<filename>postgresql.conf</filename>、または、セッションの中で<command>SET</command>コマンドを使用することで設定することができます。
しかし<command>SET</command>経由で変更できるのはスーパーユーザのみです。
<filename>postgresql.conf</filename>内の変更は、セッション独自の値が<command>SET</command>で設定されていない場合にのみ、既存のセッションに影響を与えます。
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <!-- PGC_USERSET -->
    <term><literal>user</literal></term>
    <listitem>
     <para>
<!--
      These settings can be set from <filename>postgresql.conf</filename>,
      or within a session via the <command>SET</command> command.  Any user is
      allowed to change their session-local value.  Changes in
      <filename>postgresql.conf</filename> will affect existing sessions
      only if no session-local value has been established with <command>SET</command>.
-->
これらの設定は<filename>postgresql.conf</filename>、または、セッションの中で<command>SET</command>コマンドを使用することで設定することができます。
任意のユーザが自身のセッション独自の値を変更することが許されています。
<filename>postgresql.conf</filename>内の変更は、セッション独自の値が<command>SET</command>で設定されていない場合にのみ、既存のセッションに影響を与えます。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
<!--
   See <xref linkend="config-setting"/> for more information about the various
   ways to change these parameters.
-->
これらのパラメータを変更する各種方法に関する情報については<xref linkend="config-setting"/>を参照してください。
  </para>

  <para>
   This view does not display <link linkend="runtime-config-custom">customized options</link>
   until the extension module that defines them has been loaded.
  </para>

  <para>
<!--
   This view cannot be inserted into or deleted from, but it can be updated.  An
   <command>UPDATE</command> applied to a row of <structname>pg_settings</structname>
   is equivalent to executing the <command>SET</command> command on that named
   parameter. The change only affects the value used by the current
   session. If an <command>UPDATE</command> is issued within a transaction
   that is later aborted, the effects of the <command>UPDATE</command> command
   disappear when the transaction is rolled back. Once the surrounding
   transaction is committed, the effects will persist until the end of the
   session, unless overridden by another <command>UPDATE</command> or
   <command>SET</command>.
-->
<structname>pg_settings</structname>ビューには挿入も削除もできませんが、更新することは可能です。
<structname>pg_settings</structname>行に適用される<command>UPDATE</command>は名前付きのパラメータに対して<xref linkend="sql-set"/>コマンドを実行することと同値です。
変更は現在のセッションで使用されている値にのみ有効です。
もしも後に中止されるトランザクション内で<command>UPDATE</command>が発行されると、トランザクションがロールバックされた時点で<command>UPDATE</command>コマンドは効力を失います。
排他制御中のトランザクションがひとたびコミットされると、その効果は他の<command>UPDATE</command>もしくは<command>SET</command>コマンドで上書きされない限りセッションの完了まで保たれます。
  </para>

 </sect1>

 <sect1 id="view-pg-shadow">
  <title><structname>pg_shadow</structname></title>

  <indexterm zone="view-pg-shadow">
   <primary>pg_shadow</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_shadow</structname> exists for backwards
   compatibility: it emulates a catalog that existed in
   <productname>PostgreSQL</productname> before version 8.1.
   It shows properties of all roles that are marked as
   <structfield>rolcanlogin</structfield> in
   <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.
-->
<structname>pg_shadow</structname>ビューは下位互換のために存在しています。
バージョン8.1以前の<productname>PostgreSQL</productname>に存在していたカタログを模擬します。
<link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>内で<structfield>rolcanlogin</structfield>のマークがついた全てのロールの属性を保持します。
  </para>

  <para>
<!--
   The name stems from the fact that this table
   should not be readable by the public since it contains passwords.
   <link linkend="view-pg-user"><structname>pg_user</structname></link>
   is a publicly readable view on
   <structname>pg_shadow</structname> that blanks out the password field.
-->
名前の由来は、このテーブルがパスワードを含むため、一般的には読めないことから来ています。
<link linkend="view-pg-user"><structname>pg_user</structname></link>は、<structname>pg_shadow</structname>のビューですが、パスワードの列が空白となっているため一般に読むことが可能です。
  </para>

  <table>
<!--
   <title><structname>pg_shadow</structname> Columns</title>
-->
   <title><structname>pg_shadow</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
<!--
       User name
-->
ユーザ名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usesysid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       ID of this user
-->
ユーザID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usecreatedb</structfield> <type>bool</type>
      </para>
      <para>
<!--
       User can create databases
-->
ユーザはデータベースを作成可能です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usesuper</structfield> <type>bool</type>
      </para>
      <para>
<!--
       User is a superuser
-->
ユーザはスーパーユーザです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>userepl</structfield> <type>bool</type>
      </para>
      <para>
<!--
       User can initiate streaming replication and put the system in and
       out of backup mode.
-->
ユーザはストリーミングレプリケーションを開始することができ、システムをバックアップモードにしたり、戻したりできます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usebypassrls</structfield> <type>bool</type>
      </para>
      <para>
<!--
       User bypasses every row-level security policy, see
       <xref linkend="ddl-rowsecurity"/> for more information.
-->
ユーザはすべての行単位セキュリティポリシーを無視します。
詳しくは<xref linkend="ddl-rowsecurity"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>passwd</structfield> <type>text</type>
      </para>
      <para>
<!--
       Password (possibly encrypted); null if none.  See
       <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>
       for details of how encrypted passwords are stored.
-->
（おそらく暗号化された）パスワード。
存在しない場合はNULLです。
暗号化されたパスワードの格納方法については<link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>valuntil</structfield> <type>timestamptz</type>
      </para>
      <para>
<!--
       Password expiry time (only used for password authentication)
-->
パスワード有効期限（パスワード認証でのみ使用）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>useconfig</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Session defaults for run-time configuration variables
-->
実行時設定変数のセッションデフォルト
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-shmem-allocations">
  <title><structname>pg_shmem_allocations</structname></title>

  <indexterm zone="view-pg-shmem-allocations">
   <primary>pg_shmem_allocations</primary>
  </indexterm>

  <para>
<!--
   The <structname>pg_shmem_allocations</structname> view shows allocations
   made from the server's main shared memory segment.  This includes both
   memory allocated by <productname>postgres</productname> itself and memory
   allocated by extensions using the mechanisms detailed in
   <xref linkend="xfunc-shared-addin" />.
-->
<structname>pg_shmem_allocations</structname>ビューは、サーバの主共有メモリセグメントによるメモリの獲得状況を表示します。
これは<productname>postgres</productname>自身が獲得したメモリと、<xref linkend="xfunc-shared-addin" />で詳細を説明している機構を使って拡張が獲得したメモリの両方が含まれます。
  </para>

  <para>
<!--
   Note that this view does not include memory allocated using the dynamic
   shared memory infrastructure.
-->
このビューは動的共有メモリ基盤を使って獲得したメモリは含まれないことに注意してください。
  </para>

  <table>
<!--
   <title><structname>pg_shmem_allocations</structname> Columns</title>
-->
   <title><structname>pg_shmem_allocations</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>text</type>
      </para>
      <para>
<!--
       The name of the shared memory allocation. NULL for unused memory
       and <literal>&lt;anonymous&gt;</literal> for anonymous
       allocations.
-->
共有メモリ獲得の名前です。
NULLなら未使用のメモリで、無名の獲得なら<literal>&lt;anonymous&gt;</literal>です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>off</structfield> <type>int8</type>
      </para>
      <para>
<!--
       The offset at which the allocation starts. NULL for anonymous
       allocations, since details related to them are not known.
-->
この獲得が開始する位置です。
NULLなら無名の獲得あるいは未使用のメモリです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>size</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Size of the allocation
-->
獲得サイズです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>allocated_size</structfield> <type>int8</type>
      </para>
      <para>
<!--
       Size of the allocation including padding. For anonymous
       allocations, no information about padding is available, so the
       <literal>size</literal> and <literal>allocated_size</literal> columns
       will always be equal. Padding is not meaningful for free memory, so
       the columns will be equal in that case also.
-->
パディングを含む獲得サイズです。
無名の獲得では、パディングに関する情報はありません。ですから<literal>size</literal>と<literal>allocated_size</literal>列は常に同じです。
パディングは未使用メモリでは意味がありません。ですからそのような列でも同じになります。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   Anonymous allocations are allocations that have been made
   with <literal>ShmemAlloc()</literal> directly, rather than via
   <literal>ShmemInitStruct()</literal> or
   <literal>ShmemInitHash()</literal>.
-->
無名の獲得は、<literal>ShmemInitStruct()</literal>あるいは<literal>ShmemInitHash()</literal>ではなく、<literal>ShmemAlloc()</literal>で直接行われたものです。
  </para>

  <para>
<!--
   By default, the <structname>pg_shmem_allocations</structname> view can be
   read only by superusers.
-->
デフォルトでは<structname>pg_shmem_allocations</structname>はスーパユーザだけが読み取りできます。
  </para>
 </sect1>

 <sect1 id="view-pg-stats">
  <title><structname>pg_stats</structname></title>

  <indexterm zone="view-pg-stats">
   <primary>pg_stats</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_stats</structname> provides access to
   the information stored in the <link
   linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link>
   catalog.  This view allows access only to rows of
   <link linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link> that correspond to tables the
   user has permission to read, and therefore it is safe to allow public
   read access to this view.
-->
<structname>pg_stats</structname>ビューは<link linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link>カタログの情報にアクセスするためのビューです。
このビューは、ユーザが読み込み権限を持つテーブルに一致する<structname>pg_statistic</structname>の行に対してのみアクセスを許可しています。
よって、このビューに対して一般に読み込みを許可しても安全です。
  </para>

  <para>
<!--
   <structname>pg_stats</structname> is also designed to present the
   information in a more readable format than the underlying catalog
   &mdash; at the cost that its schema must be extended whenever new slot types
   are defined for <link linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link>.
-->
<structname>pg_stats</structname>も、その基礎となっているカタログよりも、より読みやすい書式で情報を提供するように設計されています。
しかし、これは、もし<structname>pg_statistic</structname>に対して新しいスロット型が定義されるたびに、スキーマが拡張されなくてはならない、という犠牲を払っています。
  </para>

  <table>
<!--
   <title><structname>pg_stats</structname> Columns</title>
-->
   <title><structname>pg_stats</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing table
-->
テーブルがあるスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of table
-->
テーブルの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attname</structfield>)
      </para>
      <para>
<!--
       Name of column described by this row
-->
この行が記述する列名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>inherited</structfield> <type>bool</type>
      </para>
      <para>
<!--
       If true, this row includes inheritance child columns, not just the
       values in the specified table
-->
真の場合、この行には指定されたテーブルの値だけではなく、継承関係の子の列が含まれます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>null_frac</structfield> <type>float4</type>
      </para>
      <para>
<!--
       Fraction of column entries that are null
-->
NULLとなっている列項目の割合
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>avg_width</structfield> <type>int4</type>
      </para>
      <para>
<!--
       Average width in bytes of column's entries
-->
列項目のバイト単位による平均幅
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>n_distinct</structfield> <type>float4</type>
      </para>
      <para>
<!--
       If greater than zero, the estimated number of distinct values in the
       column.  If less than zero, the negative of the number of distinct
       values divided by the number of rows.  (The negated form is used when
       <command>ANALYZE</command> believes that the number of distinct values is
       likely to increase as the table grows; the positive form is used when
       the column seems to have a fixed number of possible values.)  For
       example, -1 indicates a unique column in which the number of distinct
       values is the same as the number of rows.
-->
ゼロより大きい値は列内の個別値の推定数です。
ゼロより小さければ行数で個別値を割算した数字の負数です。
（テーブルが肥大するにつれ個別値の増大があり得ると<command>ANALYZE</command>が判断した場合に負変換形式が使われます。
正変換形式は列の取り得る値が固定数を持つと思われる場合に使用されます）。
例えば-1は個別値の数が行数と等しいような、一意な列を表します。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_vals</structfield> <type>anyarray</type>
      </para>
      <para>
<!--
       A list of the most common values in the column. (Null if
       no values seem to be more common than any others.)
-->
列の中の最も共通した値のリストです（他の値よりもより共通している値がない場合はNULLです）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_freqs</structfield> <type>float4[]</type>
      </para>
      <para>
<!--
       A list of the frequencies of the most common values,
       i.e., number of occurrences of each divided by total number of rows.
       (Null when <structfield>most_common_vals</structfield> is.)
-->
最も一般的な値の出現頻度のリストで、つまり行の総数で出現数を割算した数字です（<structfield>most_common_vals</structfield>がNULLの時はNULLです）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>histogram_bounds</structfield> <type>anyarray</type>
      </para>
      <para>
<!--
       A list of values that divide the column's values into groups of
       approximately equal population.  The values in
       <structfield>most_common_vals</structfield>, if present, are omitted from this
       histogram calculation.  (This column is null if the column data type
       does not have a <literal>&lt;</literal> operator or if the
       <structfield>most_common_vals</structfield> list accounts for the entire
       population.)
-->
列の値を満遍なく似たような数でグループに分配した値のリストです。
<structfield>most_common_vals</structfield>の値がもし存在すればこの度数分布計算は行われません。
（列データ型が<literal>&lt;</literal>演算子を所有しない場合、もしくは<structfield>most_common_vals</structfield>が全体の構成要素アカウントをリストしている場合、この列はNULLです）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>correlation</structfield> <type>float4</type>
      </para>
      <para>
<!--
       Statistical correlation between physical row ordering and
       logical ordering of the column values.  This ranges from -1 to +1.
       When the value is near -1 or +1, an index scan on the column will
       be estimated to be cheaper than when it is near zero, due to reduction
       of random access to the disk.  (This column is null if the column data
       type does not have a <literal>&lt;</literal> operator.)
-->
物理的な[訳注：ディスク上の]行の並び順と論理的な列の値の並び順に関する統計的相関です。
この値は-1から+1の範囲です。
値が-1もしくは+1の近辺にある時、ディスクにランダムアクセスする必要が少なくなるためこの列に対してのインデックススキャンは0近辺にある場合に比較して安価であると推定されます。
（列データ型に<literal>&lt;</literal>演算子がない場合、この列はNULLです）。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_elems</structfield> <type>anyarray</type>
      </para>
      <para>
<!--
       A list of non-null element values most often appearing within values of
       the column. (Null for scalar types.)
-->
列の値の中で最もよく出現する非NULLの要素値のリストです。（スカラ型の場合はNULLです。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_elem_freqs</structfield> <type>float4[]</type>
      </para>
      <para>
<!--
       A list of the frequencies of the most common element values, i.e., the
       fraction of rows containing at least one instance of the given value.
       Two or three additional values follow the per-element frequencies;
       these are the minimum and maximum of the preceding per-element
       frequencies, and optionally the frequency of null elements.
       (Null when <structfield>most_common_elems</structfield> is.)
-->
最も一般的な要素値の出現頻度のリストで、与えられた値の少なくとも1つのインスタンスを含む行の断片です。
2つもしくは3つの追加の値が1つの要素ごとの出現頻度に続きます。
最小で最大の要素ごとの出現頻度があります。さらにオプションとしてNULL要素の出現頻度もあります。
（<structfield>most_common_elems</structfield>がNULLの時はNULLです。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>elem_count_histogram</structfield> <type>float4[]</type>
      </para>
      <para>
<!--
       A histogram of the counts of distinct non-null element values within the
       values of the column, followed by the average number of distinct
       non-null elements.  (Null for scalar types.)
-->
列の値でNULLではない要素値の個別数のヒストグラム。これは個別のNULLではない平均値が後に続きます。(スカラ型の場合はNULLです。)
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The maximum number of entries in the array fields can be controlled on a
   column-by-column basis using the <link linkend="sql-altertable"><command>ALTER
   TABLE SET STATISTICS</command></link>
   command, or globally by setting the
   <xref linkend="guc-default-statistics-target"/> run-time parameter.
-->
配列の最大項目数は<command>ALTER TABLE SET STATISTICS</command>コマンドで列ごとに設定されるか、もしくは<xref linkend="guc-default-statistics-target"/>実行時パラメータで包括的に設定されるかのいずれかです。
  </para>

 </sect1>

 <sect1 id="view-pg-stats-ext">
  <title><structname>pg_stats_ext</structname></title>

  <indexterm zone="view-pg-stats-ext">
   <primary>pg_stats_ext</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_stats_ext</structname> provides access to
   information about each extended statistics object in the database,
   combining information stored in the <link
   linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>
   and <link linkend="catalog-pg-statistic-ext-data"><structname>pg_statistic_ext_data</structname></link>
   catalogs.  This view allows access only to rows of
   <link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link> and <link linkend="catalog-pg-statistic-ext-data"><structname>pg_statistic_ext_data</structname></link>
   that correspond to tables the user has permission to read, and therefore
   it is safe to allow public read access to this view.
-->
<structname>pg_stats_ext</structname>は<link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>と<link linkend="catalog-pg-statistic-ext-data"><structname>pg_statistic_ext_data</structname></link>カタログに格納されている情報へのアクセスを提供します。
このビューは、ユーザが読み込み権限を持つテーブルに一致する<structname>pg_statistic_ext</structname>と<structname>pg_statistic_ext_data</structname>の行に対してのみアクセスを許可しています。
よって、このビューに対して一般に読み込みを許可しても安全です。
  </para>

  <para>
<!--
   <structname>pg_stats_ext</structname> is also designed to present the
   information in a more readable format than the underlying catalogs
   &mdash; at the cost that its schema must be extended whenever new types
   of extended statistics are added to <link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>.
-->
<structname>pg_stats_ext</structname>も、その基礎となっているカタログよりも、より読みやすい書式で情報を提供するように設計されています。
しかし、これは<structname>pg_statistic_ext</structname>に対して新しいスロット型が定義されるたびに、スキーマが拡張されなくてはならない、という犠牲を払っています。
  </para>

  <table>
<!--
   <title><structname>pg_stats_ext</structname> Columns</title>
-->
   <title><structname>pg_stats_ext</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing table
-->
テーブルがあるスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of table
-->
テーブルの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>statistics_schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing extended statistics object
-->
拡張統計情報を含むスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>statistics_name</structfield> <type>name</type>
       (references <link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>.<structfield>stxname</structfield>)
      </para>
      <para>
<!--
       Name of extended statistics object
-->
拡張統計情報の名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>statistics_owner</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
<!--
       Owner of the extended statistics object
-->
拡張統計情報所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>attnames</structfield> <type>name[]</type>
       (references <link linkend="catalog-pg-attribute"><structname>pg_attribute</structname></link>.<structfield>attname</structfield>)
      </para>
      <para>
<!--
       Names of the columns included in the extended statistics object
-->
拡張統計情報が定義された列名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>exprs</structfield> <type>text[]</type>
      </para>
      <para>
       Expressions included in the extended statistics object
      </para></entry>
      </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>kinds</structfield> <type>char[]</type>
      </para>
      <para>
<!--
       Types of extended statistics object enabled for this record
-->
このレコードに対して有効になった拡張統計情報の型
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>n_distinct</structfield> <type>pg_ndistinct</type>
      </para>
      <para>
<!--
       N-distinct counts for combinations of column values. If greater
       than zero, the estimated number of distinct values in the combination.
       If less than zero, the negative of the number of distinct values divided
       by the number of rows.
       (The negated form is used when <command>ANALYZE</command> believes that
       the number of distinct values is likely to increase as the table grows;
       the positive form is used when the column seems to have a fixed number
       of possible values.)  For example, -1 indicates a unique combination of
       columns in which the number of distinct combinations is the same as the
       number of rows.
-->
列値の組み合わせに対するN個別統計カウント。
ゼロよりも大きければ、その組み合わせに対する個別の値の数の見積で、ゼロよりも小さければ、個別の値の数の見積を符号反転し行数で割ったものです。
（負の値の形式は、<command>ANALYZE</command>がテーブルが大きくなるにつれ個別の値の数も大きくなると判断した場合に使用されます。
正の値の形式は、可能な値の数が定まった数になると思われる時に使用されます。）
たとえば-1は、列のユニークな組み合わせに対し異なる組み合わせの数が行数と同じであることを示しています。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>dependencies</structfield> <type>pg_dependencies</type>
      </para>
      <para>
<!--
       Functional dependency statistics
-->
関数従属性統計情報
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_vals</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       A list of the most common combinations of values in the columns.
       (Null if no combinations seem to be more common than any others.)
-->
列における最も共通した値の組み合わせのリスト。
（他の組み合わせよりも共通した組み合わせが見つからない場合はNULL）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_val_nulls</structfield> <type>bool[]</type>
      </para>
      <para>
<!--
       A list of NULL flags for the most common combinations of values.
       (Null when <structfield>most_common_vals</structfield> is.)
-->
最も共通した値の組み合わせに対するNULLフラグのリスト。
（<structfield>most_common_vals</structfield>がNULLならNULL。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_freqs</structfield> <type>float8[]</type>
      </para>
      <para>
<!--
       A list of the frequencies of the most common combinations,
       i.e., number of occurrences of each divided by total number of rows.
       (Null when <structfield>most_common_vals</structfield> is.)
-->
最も共通した組み合わせの発生頻度のリスト。つまり、発生数を合計行数で割ったもの。
（<structfield>most_common_vals</structfield>がNULLならNULL。）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_base_freqs</structfield> <type>float8[]</type>
      </para>
      <para>
<!--
       A list of the base frequencies of the most common combinations,
       i.e., product of per-value frequencies.
       (Null when <structfield>most_common_vals</structfield> is.)
-->
最も共通した組み合わせの発生頻度の基底のリスト。つまり値ごとの頻度の積。
（<structfield>most_common_vals</structfield>がNULLの時はNULLです）。
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
   The maximum number of entries in the array fields can be controlled on a
   column-by-column basis using the <link linkend="sql-altertable"><command>ALTER
   TABLE SET STATISTICS</command></link> command, or globally by setting the
   <xref linkend="guc-default-statistics-target"/> run-time parameter.
  </para>

 </sect1>

 <sect1 id="view-pg-stats-ext-exprs">
  <title><structname>pg_stats_ext_exprs</structname></title>

  <indexterm zone="view-pg-stats-ext-exprs">
   <primary>pg_stats_ext_exprs</primary>
  </indexterm>

  <para>
   The view <structname>pg_stats_ext_exprs</structname> provides access to
   information about all expressions included in extended statistics objects,
   combining information stored in the <link
   linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>
   and <link linkend="catalog-pg-statistic-ext-data"><structname>pg_statistic_ext_data</structname></link>
   catalogs.  This view allows access only to rows of
   <link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link> and <link linkend="catalog-pg-statistic-ext-data"><structname>pg_statistic_ext_data</structname></link>
   that correspond to tables the user has permission to read, and therefore
   it is safe to allow public read access to this view.
  </para>

  <para>
   <structname>pg_stats_ext_exprs</structname> is also designed to present
   the information in a more readable format than the underlying catalogs
   &mdash; at the cost that its schema must be extended whenever the structure
   of statistics in <link linkend="catalog-pg-statistic"><structname>pg_statistic</structname></link> changes.
  </para>

  <table>
   <title><structname>pg_stats_ext_exprs</structname> Columns</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       Column Type
      </para>
      <para>
       Description
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
       Name of schema containing table
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
       Name of table the statistics object is defined on
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>statistics_schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
       Name of schema containing extended statistics object
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>statistics_name</structfield> <type>name</type>
       (references <link linkend="catalog-pg-statistic-ext"><structname>pg_statistic_ext</structname></link>.<structfield>stxname</structfield>)
      </para>
      <para>
       Name of extended statistics object
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>statistics_owner</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
       Owner of the extended statistics object
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>expr</structfield> <type>text</type>
      </para>
      <para>
       Expression included in the extended statistics object
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>null_frac</structfield> <type>float4</type>
      </para>
      <para>
       Fraction of expression entries that are null
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>avg_width</structfield> <type>int4</type>
      </para>
      <para>
       Average width in bytes of expression's entries
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>n_distinct</structfield> <type>float4</type>
      </para>
      <para>
       If greater than zero, the estimated number of distinct values in the
       expression.  If less than zero, the negative of the number of distinct
       values divided by the number of rows.  (The negated form is used when
       <command>ANALYZE</command> believes that the number of distinct values is
       likely to increase as the table grows; the positive form is used when
       the expression seems to have a fixed number of possible values.)  For
       example, -1 indicates a unique expression in which the number of distinct
       values is the same as the number of rows.
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_vals</structfield> <type>anyarray</type>
      </para>
      <para>
       A list of the most common values in the expression. (Null if
       no values seem to be more common than any others.)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_freqs</structfield> <type>float4[]</type>
      </para>
      <para>
       A list of the frequencies of the most common values,
       i.e., number of occurrences of each divided by total number of rows.
       (Null when <structfield>most_common_vals</structfield> is.)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>histogram_bounds</structfield> <type>anyarray</type>
      </para>
      <para>
       A list of values that divide the expression's values into groups of
       approximately equal population.  The values in
       <structfield>most_common_vals</structfield>, if present, are omitted from this
       histogram calculation.  (This expression is null if the expression data type
       does not have a <literal>&lt;</literal> operator or if the
       <structfield>most_common_vals</structfield> list accounts for the entire
       population.)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>correlation</structfield> <type>float4</type>
      </para>
      <para>
       Statistical correlation between physical row ordering and
       logical ordering of the expression values.  This ranges from -1 to +1.
       When the value is near -1 or +1, an index scan on the expression will
       be estimated to be cheaper than when it is near zero, due to reduction
       of random access to the disk.  (This expression is null if the expression's
       data type does not have a <literal>&lt;</literal> operator.)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_elems</structfield> <type>anyarray</type>
      </para>
      <para>
       A list of non-null element values most often appearing within values of
       the expression. (Null for scalar types.)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>most_common_elem_freqs</structfield> <type>float4[]</type>
      </para>
      <para>
       A list of the frequencies of the most common element values, i.e., the
       fraction of rows containing at least one instance of the given value.
       Two or three additional values follow the per-element frequencies;
       these are the minimum and maximum of the preceding per-element
       frequencies, and optionally the frequency of null elements.
       (Null when <structfield>most_common_elems</structfield> is.)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>elem_count_histogram</structfield> <type>float4[]</type>
      </para>
      <para>
       A histogram of the counts of distinct non-null element values within the
       values of the expression, followed by the average number of distinct
       non-null elements.  (Null for scalar types.)
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   The maximum number of entries in the array fields can be controlled on a
   column-by-column basis using the <link linkend="sql-altertable"><command>ALTER
   TABLE SET STATISTICS</command></link> command, or globally by setting the
   <xref linkend="guc-default-statistics-target"/> run-time parameter.
-->
<command>ALTER TABLE SET STATISTICS</command>コマンドを使って配列フィールドの最大のエントリ数を列単位に制御できます。
あるいは<xref linkend="guc-default-statistics-target"/>実行時パラメータを設定して一括で制御できます。
  </para>

 </sect1>

 <sect1 id="view-pg-tables">
  <title><structname>pg_tables</structname></title>

  <indexterm zone="view-pg-tables">
   <primary>pg_tables</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_tables</structname> provides access to
   useful information about each table in the database.
-->
   <structname>pg_tables</structname>ビューはデータベース内のそれぞれのテーブルに関する有用な情報へのアクセスを提供します。
  </para>

  <table>
<!--
   <title><structname>pg_tables</structname> Columns</title>
-->
   <title><structname>pg_tables</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing table
-->
テーブルがあるスキーマの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablename</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of table
-->
テーブルの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tableowner</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
<!--
       Name of table's owner
-->
テーブルの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>tablespace</structfield> <type>name</type>
       (references <link linkend="catalog-pg-tablespace"><structname>pg_tablespace</structname></link>.<structfield>spcname</structfield>)
      </para>
      <para>
<!--
       Name of tablespace containing table (null if default for database)
-->
テーブルを含むテーブル空間の名前（データベースのデフォルトの場合はNULL）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>hasindexes</structfield> <type>bool</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relhasindex</structfield>)
      </para>
      <para>
<!--
       True if table has (or recently had) any indexes
-->
テーブルがインデックスを持っている（もしくは最近まで持っていた）なら真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>hasrules</structfield> <type>bool</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relhasrules</structfield>)
      </para>
      <para>
<!--
       True if table has (or once had) rules
-->
テーブルにルールがある（もしくは以前あった）時は真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>hastriggers</structfield> <type>bool</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relhastriggers</structfield>)
      </para>
      <para>
<!--
       True if table has (or once had) triggers
-->
テーブルにトリガがある（もしくは以前あった）時は真
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>rowsecurity</structfield> <type>bool</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relrowsecurity</structfield>)
      </para>
      <para>
<!--
       True if row security is enabled on the table
-->
テーブルの行セキュリティが有効なら真
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-timezone-abbrevs">
  <title><structname>pg_timezone_abbrevs</structname></title>

  <indexterm zone="view-pg-timezone-abbrevs">
   <primary>pg_timezone_abbrevs</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_timezone_abbrevs</structname> provides a list
   of time zone abbreviations that are currently recognized by the datetime
   input routines.  The contents of this view change when the
   <xref linkend="guc-timezone-abbreviations"/> run-time parameter is modified.
-->
<structname>pg_timezone_abbrevs</structname>ビューは、現在日付時間の入力処理で認識されている、時間帯省略形のリストを提供します。
このビューの内容は、<xref linkend="guc-timezone-abbreviations"/>実行時パラメータが変更された時に変わります。
  </para>

  <table>
<!--
   <title><structname>pg_timezone_abbrevs</structname> Columns</title>
-->
   <title><structname>pg_timezone_abbrevs</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>abbrev</structfield> <type>text</type>
      </para>
      <para>
<!--
       Time zone abbreviation
-->
時間帯省略形
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>utc_offset</structfield> <type>interval</type>
      </para>
      <para>
<!--
       Offset from UTC (positive means east of Greenwich)
-->
UTCからのオフセット(正はグリニッジより西側を意味する)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_dst</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if this is a daylight-savings abbreviation
-->
夏時間省略形の場合は真
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   While most timezone abbreviations represent fixed offsets from UTC,
   there are some that have historically varied in value
   (see <xref linkend="datetime-config-files"/> for more information).
   In such cases this view presents their current meaning.
-->
多くのタイムゾーンの省略形は、UTCからの固定されたオフセットで表現されている一方で、いくつかのものは歴史的にオフセット値が変化しています（詳細は<xref linkend="datetime-config-files"/>を参照してください）。
このような場合には、それらの現在の意味を表示します。
  </para>

 </sect1>

 <sect1 id="view-pg-timezone-names">
  <title><structname>pg_timezone_names</structname></title>

  <indexterm zone="view-pg-timezone-names">
   <primary>pg_timezone_names</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_timezone_names</structname> provides a list
   of time zone names that are recognized by <command>SET TIMEZONE</command>,
   along with their associated abbreviations, UTC offsets,
   and daylight-savings status.  (Technically,
   <productname>PostgreSQL</productname> does not use UTC because leap
   seconds are not handled.)
   Unlike the abbreviations shown in <link
   linkend="view-pg-timezone-abbrevs"><structname>pg_timezone_abbrevs</structname></link>, many of these names imply a set of daylight-savings transition
   date rules.  Therefore, the associated information changes across local DST
   boundaries.  The displayed information is computed based on the current
   value of <function>CURRENT_TIMESTAMP</function>.
-->
<structname>pg_timezone_names</structname>は、<command>SET TIMEZONE</command>で認識される時間帯名称の一覧を提供します。
ここには、その関連付けされた省略形、UTCオフセット、夏時間状況などが含まれます。
（<productname>PostgreSQL</productname>は技術的には、うるう秒を扱いませんので、UTCを使用しません。）
<link linkend="view-pg-timezone-abbrevs"><structname>pg_timezone_abbrevs</structname></link>で示した省略形とは異なり、名前の多くが夏時間変換規則を意味しています。
したがって、関連する情報はローカルなDST境界によって異なります。
表示される情報は、現在の<function>CURRENT_TIMESTAMP</function>に基づいて計算されたものです。
  </para>

  <table>
<!--
   <title><structname>pg_timezone_names</structname> Columns</title>
-->
   <title><structname>pg_timezone_names</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>name</structfield> <type>text</type>
      </para>
      <para>
<!--
       Time zone name
-->
時間帯名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>abbrev</structfield> <type>text</type>
      </para>
      <para>
<!--
       Time zone abbreviation
-->
時間帯省略形
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>utc_offset</structfield> <type>interval</type>
      </para>
      <para>
<!--
       Offset from UTC (positive means east of Greenwich)
-->
UTCからのオフセット(正はグリニッジより西側を意味する)
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>is_dst</structfield> <type>bool</type>
      </para>
      <para>
<!--
       True if currently observing daylight savings
-->
現在夏時間である場合に真
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-user">
  <title><structname>pg_user</structname></title>

  <indexterm zone="view-pg-user">
   <primary>pg_user</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_user</structname> provides access to
   information about database users.  This is simply a publicly
   readable view of
   <link linkend="view-pg-shadow"><structname>pg_shadow</structname></link>
   that blanks out the password field.
-->
<structname>pg_user</structname>ビューはデータベースユーザに関する情報へのアクセスを提供します。
これはパスワードフィールドを隠蔽した<link linkend="view-pg-shadow"><structname>pg_shadow</structname></link>を公に読めるようにしたビューです。
  </para>

  <table>
<!--
   <title><structname>pg_user</structname> Columns</title>
-->
   <title><structname>pg_user</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usename</structfield> <type>name</type>
      </para>
      <para>
<!--
       User name
-->
ユーザ名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usesysid</structfield> <type>oid</type>
      </para>
      <para>
<!--
       ID of this user
-->
ユーザID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usecreatedb</structfield> <type>bool</type>
      </para>
      <para>
<!--
       User can create databases
-->
ユーザはデータベースを作成可能です。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usesuper</structfield> <type>bool</type>
      </para>
      <para>
<!--
       User is a superuser
-->
ユーザはスーパーユーザです。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>userepl</structfield> <type>bool</type>
      </para>
      <para>
<!--
       User can initiate streaming replication and put the system in and
       out of backup mode.
-->
ユーザはストリーミングレプリケーションを開始することができ、システムをバックアップモードにしたり、戻したりできます。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usebypassrls</structfield> <type>bool</type>
      </para>
      <para>
<!--
       User bypasses every row-level security policy, see
       <xref linkend="ddl-rowsecurity"/> for more information.
-->
ユーザはすべての行単位セキュリティポリシーを無視します。
詳しくは<xref linkend="ddl-rowsecurity"/>を参照してください。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>passwd</structfield> <type>text</type>
      </para>
      <para>
<!--
       Not the password (always reads as <literal>********</literal>)
-->
パスワードでありません（常に<literal>********</literal>のように読まれます）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>valuntil</structfield> <type>timestamptz</type>
      </para>
      <para>
<!--
       Password expiry time (only used for password authentication)
-->
パスワード有効期限（パスワード認証でのみ使用）
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>useconfig</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       Session defaults for run-time configuration variables
-->
実行時設定変数のセッションデフォルト
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

 <sect1 id="view-pg-user-mappings">
  <title><structname>pg_user_mappings</structname></title>

  <indexterm zone="view-pg-user-mappings">
   <primary>pg_user_mappings</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_user_mappings</structname> provides access
   to information about user mappings.  This is essentially a publicly
   readable view of
   <link linkend="catalog-pg-user-mapping"><structname>pg_user_mapping</structname></link>
   that leaves out the options field if the user has no rights to use
   it.
-->
<structname>pg_user_mappings</structname>ビューはユーザマッピングについての情報へのアクセスを提供します。
これはユーザが使用する権利を持っていないオプションフィールドを取り除いた、基本的には公開されていて読み取り可能な<link linkend="catalog-pg-user-mapping"><structname>pg_user_mapping</structname></link>のビューです。
  </para>

  <table>
<!--
   <title><structname>pg_user_mappings</structname> Columns</title>
-->
   <title><structname>pg_user_mappings</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>umid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-user-mapping"><structname>pg_user_mapping</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the user mapping
-->
ユーザマッピングのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvid</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-foreign-server"><structname>pg_foreign_server</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       The OID of the foreign server that contains this mapping
-->
マッピングを保持する外部サーバのOID
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>srvname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-foreign-server"><structname>pg_foreign_server</structname></link>.<structfield>srvname</structfield>)
      </para>
      <para>
<!--
       Name of the foreign server
-->
外部サーバの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>umuser</structfield> <type>oid</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>oid</structfield>)
      </para>
      <para>
<!--
       OID of the local role being mapped, or zero if the user mapping is public
-->
マッピングされているローカルのロールのOID。
ユーザマッピングが公開されている場合は0になります。
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>usename</structfield> <type>name</type>
      </para>
      <para>
<!--
       Name of the local user to be mapped
-->
マッピングされているローカルユーザの名前
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>umoptions</structfield> <type>text[]</type>
      </para>
      <para>
<!--
       User mapping specific options, as <quote>keyword=value</quote> strings
-->
<quote>keyword=value</quote>文字列のようなユーザマッピングの特定のオプション
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para>
<!--
   To protect password information stored as a user mapping option,
   the <structfield>umoptions</structfield> column will read as null
   unless one of the following applies:
-->
ユーザマッピングオプションとして格納されたパスワード情報を保護するために、<structfield>umoptions</structfield>列は以下に該当しない限りはnullとして読み込みます。
   <itemizedlist>
    <listitem>
     <para>
<!--
      current user is the user being mapped, and owns the server or
      holds <literal>USAGE</literal> privilege on it
-->
現在のユーザはマッピングされているユーザであり、サーバを所有しているか、サーバ上に<literal>USAGE</literal>権限を持っている
     </para>
    </listitem>
    <listitem>
     <para>
<!--
      current user is the server owner and mapping is for <literal>PUBLIC</literal>
-->
現在のユーザはサーバ所有者であり、<literal>PUBLIC</literal>としてマッピングされている
     </para>
    </listitem>
    <listitem>
     <para>
<!--
      current user is a superuser
-->
現在のユーザはスーパーユーザである
     </para>
    </listitem>
   </itemizedlist>
  </para>

 </sect1>


 <sect1 id="view-pg-views">
  <title><structname>pg_views</structname></title>

  <indexterm zone="view-pg-views">
   <primary>pg_views</primary>
  </indexterm>

  <para>
<!--
   The view <structname>pg_views</structname> provides access to
   useful information about each view in the database.
-->
   <structname>pg_views</structname>ビューはデータベース内のそれぞれのビューに関する有用な情報へのアクセスを提供します。
  </para>

  <table>
<!--
   <title><structname>pg_views</structname> Columns</title>
-->
   <title><structname>pg_views</structname>の列</title>
   <tgroup cols="1">
    <thead>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
<!--
       Column Type
-->
列 型
      </para>
      <para>
<!--
       Description
-->
説明
      </para></entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>schemaname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-namespace"><structname>pg_namespace</structname></link>.<structfield>nspname</structfield>)
      </para>
      <para>
<!--
       Name of schema containing view
-->
ビューを持つスキーマ名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>viewname</structfield> <type>name</type>
       (references <link linkend="catalog-pg-class"><structname>pg_class</structname></link>.<structfield>relname</structfield>)
      </para>
      <para>
<!--
       Name of view
-->
ビュー名
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>viewowner</structfield> <type>name</type>
       (references <link linkend="catalog-pg-authid"><structname>pg_authid</structname></link>.<structfield>rolname</structfield>)
      </para>
      <para>
<!--
       Name of view's owner
-->
ビューの所有者
      </para></entry>
     </row>

     <row>
      <entry role="catalog_table_entry"><para role="column_definition">
       <structfield>definition</structfield> <type>text</type>
      </para>
      <para>
<!--
       View definition (a reconstructed <xref linkend="sql-select"/> query)
-->
ビュー定義（再構築された<command>SELECT</command>問い合わせ）
      </para></entry>
     </row>
    </tbody>
   </tgroup>
  </table>

 </sect1>

</chapter>
<!-- split-catalogs4-end -->
